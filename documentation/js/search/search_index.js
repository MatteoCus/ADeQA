var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ActiveAttributesService.html",[0,0.903,1,2.969]],["body/injectables/ActiveAttributesService.html",[0,1.027,1,3.376,2,1.226,3,0.104,4,0.094,5,0.094,6,4.763,7,5.553,8,2.748,9,0.283,10,2.21,11,0.67,12,2.767,13,3.11,14,3.843,15,5.783,16,3.666,17,5.32,18,5.32,19,0.809,20,3.703,21,4.644,22,0.126,23,0.305,24,2.179,25,5.519,26,1.095,27,4.644,28,4.644,29,1.826,30,6.093,31,3.145,32,0.673,33,3.147,34,4.471,35,3.299,36,2.884,37,4.333,38,1.362,39,4.644,40,1.52,41,1.207,42,1.221,43,0.013,44,1.142,45,0.203,46,0.574,47,1.949,48,1.067,49,3.666,50,4.081,51,3.147,52,2.284,53,2.514,54,2.643,55,2.643,56,0.93,57,4.108,58,4.644,59,3.467,60,3.147,61,2.713,62,2.749,63,3.376,64,3.376,65,4.43,66,4.055,67,1.112,68,1.746,69,4.644,70,3.87,71,3.147,72,4.605,73,1.994,74,2.767,75,3.666,76,3.145,77,4.055,78,0.87,79,4.43,80,3.666,81,4.644,82,4.055,83,4.644,84,3.376,85,4.055,86,4.644,87,2.443,88,2.884,89,2.198,90,1.545,91,3.666,92,4.644,93,3.666,94,3.01,95,2.952,96,3.666,97,4.644,98,3.147,99,2.463,100,4.126,101,2.151,102,2.952,103,1.746,104,4.055,105,4.055,106,4.644,107,3.147,108,2.952,109,3.666,110,4.644,111,4.471,112,0.873,113,1.207,114,3.666,115,3.376,116,0.662,117,1.626,118,0.696,119,1.03,120,1.791,121,2.748,122,2.001,123,2.131,124,2.485,125,1.555,126,1.704,127,1.889,128,2.952,129,2.131,130,1.103,131,1.272,132,1.183,133,0.104,134,0.446,135,1.768,136,1.373,137,3.147,138,3.147,139,1.949,140,2.988,141,3.01,142,3.508,143,3.508,144,3.508,145,3.508,146,3.508,147,3.508,148,3.508,149,2.612,150,3.508,151,3.312,152,3.312,153,3.147,154,2.988,155,2.988,156,2.514,157,2.514,158,2.514,159,2.514,160,1.95,161,2.109,162,1.889,163,0.818,164,1.489,165,0.818,166,1.429,167,1.555,168,1.704,169,3.147,170,1.429,171,2.131,172,3.147,173,3.147,174,3.147,175,1.22,176,3.147,177,1.421,178,3.147,179,5.519,180,3.147,181,3.147,182,3.147,183,3.147,184,3.147,185,3.147,186,3.147,187,3.147,188,2.748,189,3.147,190,3.147,191,3.147,192,3.147,193,3.147,194,3.147,195,3.147,196,3.147,197,3.147,198,0.007,199,0.007]],["title/injectables/ActivePhaseService.html",[0,0.903,37,2.451]],["body/injectables/ActivePhaseService.html",[0,1.3,2,1.715,3,0.146,4,0.131,5,0.131,6,5.132,9,0.256,10,2.564,11,0.747,12,3.21,14,3.345,19,0.849,20,4.142,22,0.176,23,0.386,24,2.172,26,1.387,29,2.035,31,3.982,32,1.417,37,3.529,38,1.476,40,1.924,41,2.044,42,0.882,43,0.013,44,0.825,45,0.197,46,0.414,48,1.057,50,3.529,56,1.575,57,4.474,59,4.312,61,2.657,62,2.377,65,5.139,66,5.782,67,1.083,68,1.685,73,2.313,74,2.671,78,1.325,90,1.258,94,2.905,99,2.857,100,4.786,101,2.58,102,4.817,103,2.21,104,5.134,105,5.134,108,3.738,111,4.919,112,1.631,113,1.837,116,0.624,118,0.973,119,1.44,120,2.505,122,4.817,131,1.779,132,1.654,133,0.146,134,0.623,135,1.144,175,0.973,198,0.009,199,0.009,200,3.475,201,6.349,202,5.88,203,1.685,204,3.346,205,6.622,206,7.068,207,5.88,208,4.401,209,5.88,210,4.401,211,5.58,212,5.88,213,4.401,214,3.982,215,3.184,216,5.134,217,5.88,218,5.134,219,3.982,220,3.346,221,2.377,222,5.88,223,5.88,224,4.275,225,5.88,226,4.401,227,4.401]],["title/interfaces/Add$Params.html",[228,0.069,229,2.766]],["body/interfaces/Add$Params.html",[3,0.163,4,0.146,5,0.146,9,0.214,11,0.622,19,0.902,20,3.121,22,0.197,23,0.415,41,1.816,43,0.013,45,0.188,47,1.408,48,1.044,56,1.4,57,3.596,67,0.803,73,2.413,78,1.184,99,1.986,101,2.722,103,1.846,113,1.277,116,0.735,119,1.607,130,1.721,133,0.21,135,1.917,139,1.408,163,1.816,164,3.49,165,1.983,175,1.397,177,1.503,198,0.009,199,0.009,228,0.083,229,4.731,230,1.017,231,2.795,232,2.795,233,3.122,234,3.877,235,1.352,236,1.49,237,3.306,238,6.318,239,4.988,240,2.415,241,2.046,242,0.932,243,3.81,244,1.871,245,2.068,246,3.218,247,1.503,248,2.659,249,1.663,250,2.143,251,2.653,252,2.143,253,2.114,254,1.159,255,1.846,256,1.408,257,2.659,258,3.326,259,2.537,260,3.264,261,3.877,262,2.537,263,2.214,264,1.782,265,1.454,266,2.365,267,2.426,268,2.286,269,2.537,270,2.537,271,2.143,272,3.571,273,2.23,274,4.288,275,2.659,276,2.659,277,6.318,278,2.795,279,2.947,280,2.947,281,2.659,282,2.139,283,2.659,284,2.659,285,1.986,286,1.986,287,2.143,288,2.659,289,3.782,290,1.986,291,2.143,292,1.607,293,2.659,294,1.663,295,2.659,296,2.659,297,2.426,298,4.911,299,4.288]],["title/injectables/ApiConfiguration.html",[0,0.903,300,1.933]],["body/injectables/ApiConfiguration.html",[0,1.606,2,2.4,3,0.204,4,0.184,5,0.184,9,0.268,22,0.247,23,0.477,38,1.234,42,1.234,43,0.013,45,0.184,90,1.318,112,1.709,116,0.58,118,1.362,131,2.49,132,2.315,133,0.241,134,0.872,198,0.011,199,0.011,228,0.104,242,0.977,263,2.797,300,3.438,301,5.736,302,4.863,303,6.343,304,3.934,305,6.343,306,6.159,307,5.378,308,4.171]],["title/interfaces/ApiConfigurationParams.html",[228,0.069,308,2.766]],["body/interfaces/ApiConfigurationParams.html",[0,1.61,3,0.205,4,0.184,5,0.184,9,0.269,22,0.248,23,0.478,42,1.459,43,0.013,45,0.184,46,0.686,116,0.582,118,1.368,131,2.501,132,2.325,133,0.242,134,0.876,198,0.011,199,0.011,228,0.104,230,1.281,242,1.01,263,2.856,300,2.928,301,4.884,302,4.884,303,5.401,304,3.349,305,5.401,307,6.36,308,4.933]],["title/modules/ApiModule.html",[309,2.596,310,2.969]],["body/modules/ApiModule.html",[3,0.164,4,0.148,5,0.148,9,0.216,26,1.169,32,1.061,34,4.977,38,0.993,42,0.993,43,0.013,44,0.929,45,0.148,46,0.697,67,0.81,113,1.652,116,0.773,118,1.096,123,3.357,133,0.164,134,0.702,163,1.652,175,1.096,198,0.009,199,0.009,232,2.821,244,1.882,247,1.517,253,1.822,265,1.468,300,3.768,304,3.799,308,5.012,309,4.46,310,6.169,311,3.151,312,3.357,313,2.163,314,5.018,315,3.914,316,5.843,317,4.621,318,4.328,319,4.328,320,4.977,321,4.699,322,4.699,323,4.977,324,5.018,325,3.604,326,3.151,327,4.957,328,4.041,329,5.549,330,4.041,331,4.957,332,6.356,333,4.957,334,7.016,335,4.957,336,4.957,337,4.957,338,5.539,339,6.356,340,2.684,341,4.957,342,7.016,343,4.957,344,4.957,345,4.957,346,3.914,347,4.328,348,4.328,349,6.356,350,6.356,351,4.957,352,4.957,353,4.957,354,4.305,355,4.957,356,4.328,357,4.328,358,2.975,359,2.821,360,4.957]],["title/components/AppComponent.html",[203,1.17,361,1.714]],["body/components/AppComponent.html",[3,0.174,4,0.156,5,0.156,9,0.228,10,2.739,11,0.648,19,0.846,32,1.119,38,1.048,40,2.153,41,1.71,42,1.048,43,0.013,44,1.349,45,0.156,46,0.493,47,1.5,116,0.619,118,1.157,132,2.473,133,0.174,134,0.741,135,1.36,136,2.283,198,0.01,199,0.01,203,2.062,240,2.082,313,2.283,361,3.169,362,3.113,363,2.585,364,2.585,365,2.585,366,2.585,367,4.568,368,5.743,369,2.227,370,6.578,371,2.376,372,4.168,373,3.994,374,3.249,375,7.195,376,3.249,377,6.578,378,4.568,379,4.765,380,5.232,381,4.783,382,6.578,383,3.562,384,2.833,385,3.743,386,4.568,387,5.232,388,4.568,389,3.113,390,2.473,391,2.585,392,2.837,393,2.585,394,2.585,395,2.197,396,2.585,397,1.55,398,3.249,399,2.115,400,2.585,401,2.115,402,2.386,403,2.585,404,2.115,405,2.585,406,2.115,407,2.585,408,2.197,409,1.967,410,2.039,411,2.585,412,2.197,413,2.585,414,2.197,415,2.585,416,2.197,417,2.585,418,2.585,419,2.197,420,2.585,421,2.585,422,2.585]],["title/modules/AppModule.html",[309,2.596,354,2.766]],["body/modules/AppModule.html",[3,0.125,4,0.112,5,0.112,43,0.013,113,0.979,116,0.808,118,0.832,133,0.175,134,0.533,175,0.832,177,1.152,198,0.008,199,0.008,244,1.808,247,1.152,273,1.71,309,2.393,311,2.393,312,2.549,313,1.643,314,4.819,315,4.819,316,4.171,317,2.737,324,4.171,325,2.737,326,2.393,338,4.171,346,4.171,347,5.329,348,4.613,354,5.774,357,4.613,361,3.341,373,1.782,383,2.861,384,2.038,395,3.034,397,1.565,399,3.001,401,2.922,404,2.922,406,2.922,408,3.034,410,2.816,412,3.034,414,3.034,416,3.034,419,3.034,423,3.287,424,3.287,425,3.287,426,3.287,427,4.894,428,4.894,429,4.894,430,2.972,431,5.283,432,5.283,433,5.283,434,4.171,435,2.142,436,3.765,437,3.765,438,4.613,439,2.737,440,3.287,441,5.283,442,3.765,443,5.283,444,3.765,445,5.283,446,3.765,447,3.765,448,5.283,449,3.765,450,5.283,451,3.765,452,3.765,453,5.283,454,3.359,455,2.393,456,2.393,457,5.283,458,3.765,459,5.283,460,2.393,461,5.283,462,3.765,463,5.283,464,3.765,465,5.283,466,3.765,467,5.283,468,3.287,469,3.287,470,5.283,471,3.765,472,5.283,473,5.283,474,2.737,475,2.737,476,3.287,477,3.287,478,5.283,479,3.287,480,3.765,481,3.765,482,2.972,483,3.765,484,3.765,485,3.765,486,5.283,487,3.765,488,5.283,489,3.765,490,3.765,491,2.549,492,3.841,493,3.765,494,3.765,495,5.283,496,3.765,497,5.283,498,3.765,499,5.283,500,3.765,501,3.765,502,2.737,503,3.765,504,5.283,505,3.765,506,3.765,507,3.287,508,4.171,509,3.765,510,3.765,511,3.765,512,3.287,513,3.765,514,3.287,515,3.287,516,3.765,517,2.972,518,3.765,519,3.765,520,3.287,521,3.765,522,3.765,523,3.765,524,3.765,525,2.972,526,3.765,527,3.765,528,3.765,529,3.765,530,3.765,531,3.765,532,3.765,533,3.765,534,3.287,535,3.765,536,2.972,537,3.765,538,3.765,539,3.765,540,3.287,541,3.765,542,3.765,543,3.765,544,2.393,545,3.765,546,2.038,547,3.287,548,3.765]],["title/modules/AppRoutingModule.html",[309,2.596,429,2.766]],["body/modules/AppRoutingModule.html",[3,0.199,4,0.178,5,0.178,43,0.013,116,0.761,118,1.323,133,0.199,134,0.848,139,1.715,198,0.011,199,0.011,203,2.188,292,2.588,311,3.805,317,4.352,338,5.639,346,4.725,399,2.888,401,2.888,404,2.888,429,4.837,438,6.236,439,4.352,440,5.226,475,4.352,476,5.226,477,5.226,549,5.985,550,5.985,551,7.143,552,5.551,553,3.592,554,5.985,555,5.639,556,5.985,557,3.805,558,5.985,559,5.985,560,5.985]],["title/injectables/AuthInformationsService.html",[0,0.903,36,1.933]],["body/injectables/AuthInformationsService.html",[0,0.997,2,1.179,3,0.1,4,0.09,5,0.09,9,0.278,10,1.636,11,0.589,19,0.832,22,0.121,23,0.296,24,2.187,26,1.064,29,2.09,32,1.154,36,2.135,38,1.572,40,1.476,42,1.197,43,0.013,44,1.12,45,0.213,46,0.563,48,0.938,52,1.891,53,3.629,61,2.247,62,1.824,67,1.214,68,2.045,78,1.43,89,3.172,90,1.279,103,1.695,112,1.859,116,0.508,118,0.669,125,3.904,127,1.816,131,1.223,132,1.137,133,0.1,134,0.429,135,1.554,160,2.684,161,3.744,167,2.953,175,1.321,198,0.007,199,0.007,214,3.055,221,1.824,224,3.28,239,5.635,242,0.992,321,1.816,340,2.442,369,2.514,402,1.636,409,1.695,561,4.498,562,2.642,563,4.511,564,3.8,565,6.58,566,3.949,567,7.294,568,5.218,569,5.977,570,3.28,571,4.511,572,4.511,573,5.292,574,3.561,575,3.938,576,4.511,577,4.511,578,4.511,579,4.511,580,3.026,581,4.511,582,2.707,583,4.719,584,4.672,585,5.218,586,6.703,587,3.026,588,4.511,589,4.511,590,4.511,591,3.055,592,4.511,593,3.938,594,3.938,595,5.272,596,5.399,597,4.511,598,3.561,599,3.28,600,2.33,601,4.511,602,3.561,603,3.026,604,4.511,605,3.938,606,4.511,607,1.427,608,2.336,609,3.026,610,3.561,611,3.938,612,2.567,613,3.938,614,3.026,615,4.833,616,5.218,617,4.833,618,5.189,619,6.703,620,3.026,621,3.026,622,5.635,623,3.117,624,3.026,625,3.026,626,6.231,627,3.8,628,5.218,629,5.292,630,3.026,631,3.026,632,4.511,633,3.026,634,3.026,635,4.511,636,3.938,637,3.026,638,3.026,639,3.026,640,3.026,641,3.026,642,3.026,643,3.026,644,3.026,645,1.816,646,2.642,647,5.977,648,2.642,649,6.393,650,3.026,651,6.393,652,2.642,653,6.393,654,2.642,655,3.088,656,3.026,657,3.026,658,3.026,659,3.026,660,3.026,661,3.026,662,3.026,663,3.026,664,3.026,665,3.026,666,3.026,667,3.026,668,2.642,669,2.389]],["title/injectables/AuthenticationService.html",[0,0.903,320,2.596]],["body/injectables/AuthenticationService.html",[0,1.15,2,1.435,3,0.122,4,0.11,5,0.11,22,0.147,23,0.341,24,1.491,26,1.227,32,0.788,38,1.509,42,1.385,43,0.013,44,1.296,45,0.243,46,0.695,67,1.071,90,1.113,101,2.985,112,1.443,116,0.739,118,0.814,119,1.205,131,1.489,132,1.384,133,0.122,134,0.522,161,1.673,163,1.865,165,2.116,175,1.449,198,0.008,199,0.008,242,0.874,244,1.941,245,2.615,246,2.86,247,1.127,249,1.247,250,1.607,251,2.532,252,1.607,253,1.981,254,1.93,256,2.159,265,1.091,268,2.634,282,2.756,291,2.27,292,2.145,300,3.102,304,1.994,320,3.307,328,4.789,330,4.562,340,1.994,402,2.779,409,2.879,557,4.789,670,3.215,671,2.462,672,3.73,673,4.86,674,6.032,675,6.032,676,3.307,677,6.554,678,6.554,679,3.307,680,3.683,681,2.341,682,5.202,683,4.995,684,3.683,685,3.853,686,5.604,687,3.565,688,4.439,689,5.102,690,5.102,691,5.102,692,3.934,693,5.202,694,3.683,695,4.439,696,3.934,697,5.202,698,4.995,699,3.683,700,5.202,701,3.683,702,3.683,703,4.439,704,3.102,705,3.683,706,2.096,707,2.494,708,2.341,709,5.202,710,5.202,711,2.494,712,3.683,713,2.462,714,3.683,715,3.523,716,3.523,717,3.683,718,3.683,719,2.341]],["title/injectables/BaseService.html",[0,0.903,672,2.324]],["body/injectables/BaseService.html",[0,1.474,2,2.083,3,0.177,4,0.159,5,0.159,9,0.233,22,0.214,23,0.437,24,2.082,32,1.426,38,1.524,42,1.335,43,0.013,44,1.249,45,0.217,46,0.716,67,1.243,68,1.532,116,0.684,118,1.181,132,2.859,133,0.177,134,1.029,175,1.181,198,0.01,199,0.01,242,1.023,244,2.253,247,1.636,253,2.082,263,2.742,264,2.76,265,1.974,300,3.6,304,2.894,329,5.82,340,3.933,570,4.847,655,3.753,672,3.793,676,4.618,679,3.397,681,4.238,708,5.074,720,6.834,721,4.666,722,5.344,723,5.344,724,5.344,725,5.344,726,7.606,727,6.666,728,6.666,729,6.666,730,5.344,731,5.344,732,3.793,733,6.666,734,6.666,735,5.344,736,5.344]],["title/components/ConfirmDataDialogComponent.html",[203,1.17,395,1.714]],["body/components/ConfirmDataDialogComponent.html",[3,0.116,4,0.104,5,0.104,9,0.255,10,2.321,11,0.756,12,2.275,19,0.833,22,0.14,23,0.329,26,1.182,29,2.143,32,0.747,38,1.455,40,1.639,41,1.302,42,0.7,43,0.013,44,1.098,45,0.202,46,0.551,48,0.89,50,3.006,56,1.455,61,2.65,63,3.642,67,0.957,68,2.021,73,2.094,74,2.275,75,3.954,78,0.939,89,3.028,94,2.893,116,0.472,117,3.026,118,0.772,133,0.116,134,0.495,135,1.302,198,0.007,199,0.007,203,1.679,240,2.025,242,0.74,313,1.524,361,1.466,362,2.37,363,1.725,364,1.725,365,1.725,366,1.725,371,1.586,372,3.942,373,3.777,374,2.474,376,2.474,381,3.642,385,4.228,389,2.37,390,1.883,391,1.725,392,2.405,393,1.725,394,1.725,395,2.686,396,3.912,397,2.465,398,2.474,399,1.412,400,1.725,401,1.412,402,1.817,403,1.725,404,1.412,405,1.725,406,1.412,407,1.725,408,1.466,409,1.312,410,1.361,411,1.725,412,1.466,413,1.725,414,1.466,415,1.725,416,1.466,417,1.725,418,1.725,419,1.466,420,1.725,421,1.725,422,1.725,460,2.22,502,5.402,546,2.712,623,2.64,737,6.486,738,2.757,739,5.589,740,6.156,741,5.009,742,1.817,743,5.114,744,4.373,745,5.915,746,5.114,747,6.156,748,5.915,749,3.641,750,3.049,751,5.915,752,4.373,753,4.373,754,2.275,755,3.642,756,4.624,757,5.114,758,3.966,759,5.114,760,3.515,761,6.061,762,5.733,763,6.774,764,3.206,765,3.346,766,3.492,767,5.586,768,5.052,769,5.052,770,6.398,771,4.333,772,3.492,773,3.492,774,4.373,775,3.049,776,2.365,777,4.373,778,3.049,779,3.049,780,3.492,781,3.049,782,3.049,783,3.392,784,3.049,785,1.891,786,3.049,787,3.049,788,3.049,789,4.373,790,3.642,791,3.184,792,4.373,793,4.373,794,2.365,795,1.891,796,2.587,797,3.049,798,2.22,799,2.365,800,2.474,801,2.539,802,3.392,803,1.987,804,2.365,805,2.757,806,1.586,807,2.096,808,1.987,809,3.026,810,2.365,811,1.987,812,2.365,813,3.515,814,2.85,815,2.539,816,2.539,817,2.365,818,3.049,819,3.492]],["title/components/DashboardComponent.html",[203,1.17,399,1.651]],["body/components/DashboardComponent.html",[3,0.085,4,0.076,5,0.076,9,0.173,10,1.99,11,0.713,12,2.491,13,1.607,19,0.884,22,0.103,23,0.261,24,1.994,26,0.937,29,1.819,32,0.548,35,2.636,36,2.596,38,1.357,40,1.3,41,1.033,42,0.796,43,0.013,44,1.028,45,0.187,46,0.374,47,1.572,48,1.042,51,2.053,52,1.258,53,2.97,54,2.261,55,2.261,56,1.259,64,2.889,67,0.65,68,1.572,73,2.406,74,1.805,76,3.715,78,1.27,80,3.137,89,2.304,90,0.548,93,3.137,94,2.71,95,2.526,99,2.218,102,3.488,103,2.062,112,0.711,116,0.617,117,1.323,118,0.566,119,0.838,125,1.265,126,1.387,133,0.085,134,0.363,135,1.633,136,1.118,139,0.734,160,2.844,161,1.805,162,1.537,167,1.265,171,1.735,175,0.566,198,0.006,199,0.006,203,1.395,204,2.261,220,3.959,221,2.401,237,2.304,240,2.074,264,1.442,273,1.163,313,1.118,361,1.075,362,1.881,363,1.265,364,1.265,365,1.265,366,1.265,371,1.163,372,3.721,373,3.733,374,1.963,376,1.963,389,1.881,390,1.494,391,1.265,392,2.062,393,1.265,394,1.265,395,1.075,396,1.265,397,1.442,398,1.963,399,2.218,400,1.265,401,1.036,402,2.154,403,1.265,404,1.036,405,1.265,406,1.036,407,1.265,408,1.075,409,0.963,410,0.998,411,1.265,412,1.075,413,1.265,414,1.075,415,1.265,416,1.075,417,1.265,418,1.265,419,1.075,420,1.963,421,1.265,422,1.265,435,2.261,553,1.537,555,3.137,561,1.458,564,2.526,565,3.47,566,2.152,570,2.889,584,1.537,591,4.255,607,2.144,608,0.838,611,2.237,622,3.137,623,1.549,626,3.47,627,3.488,655,1.323,742,1.442,762,3.137,764,2.596,765,2.405,790,3.989,795,2.152,796,3.931,798,1.628,809,1.323,811,1.458,820,2.237,821,4.79,822,4.868,823,4.868,824,3.974,825,7.109,826,4.251,827,4.251,828,4.868,829,4.79,830,2.022,831,4.814,832,5.915,833,4.602,834,4.79,835,5.486,836,5.486,837,5.486,838,3.989,839,3.974,840,3.974,841,3.47,842,3.974,843,3.974,844,3.297,845,5.486,846,5.349,847,3.47,848,4.331,849,3.974,850,3.974,851,3.974,852,2.889,853,2.261,854,3.974,855,3.974,856,3.47,857,3.668,858,2.889,859,2.889,860,2.691,861,3.974,862,3.974,863,3.137,864,2.562,865,3.47,866,3.137,867,5.184,868,2.697,869,1.968,870,3.974,871,2.385,872,3.974,873,3.974,874,4.79,875,2.562,876,5.486,877,3.47,878,3.293,879,3.47,880,3.974,881,2.562,882,2.691,883,4.79,884,2.596,885,2.889,886,3.715,887,4.79,888,3.974,889,3.137,890,3.974,891,3.974,892,3.974,893,2.562,894,2.562,895,2.562,896,2.562,897,2.562,898,3.974,899,2.237,900,2.562,901,2.636,902,2.237,903,2.022,904,2.022,905,2.562,906,2.562,907,2.562,908,2.562,909,2.562,910,2.562,911,6.555,912,2.562,913,1.075,914,3.974,915,2.562,916,3.137,917,2.562,918,2.022,919,2.562,920,2.562,921,2.562,922,2.562,923,2.562,924,2.237,925,2.562,926,2.562,927,2.562,928,2.562,929,2.562,930,2.562,931,2.562,932,1.863,933,2.562,934,2.237,935,2.237,936,2.562,937,2.237,938,2.237,939,2.562,940,2.562,941,2.237,942,2.562,943,2.562,944,2.562,945,2.562,946,2.562,947,2.237,948,2.562,949,2.022,950,2.022,951,2.237,952,2.237,953,3.47,954,3.137,955,2.562,956,3.47,957,5.184,958,2.237,959,2.237,960,2.562,961,2.562,962,2.562,963,2.237,964,3.974,965,2.237,966,3.668,967,2.385,968,3.775,969,4.119,970,2.562,971,2.562,972,3.47,973,4.79,974,3.715,975,5.486,976,1.863,977,2.237,978,2.562,979,1.323,980,1.628,981,2.022,982,3.974,983,2.237,984,4.422,985,2.562,986,4.251,987,2.237,988,2.562,989,3.775,990,2.237,991,3.137,992,1.863,993,2.237,994,2.562,995,2.562,996,1.628,997,1.628]],["title/interfaces/Delete$Params.html",[228,0.069,998,2.766]],["body/interfaces/Delete$Params.html",[3,0.164,4,0.147,5,0.147,9,0.215,11,0.625,19,0.903,22,0.198,23,0.416,41,1.821,43,0.013,45,0.22,47,1.416,48,1.004,56,0.99,67,0.808,73,2.419,78,1.189,99,1.997,101,2.73,103,1.857,113,1.284,116,0.737,119,1.616,130,1.731,133,0.21,135,1.921,139,1.416,163,1.821,164,3.498,165,1.987,175,1.402,177,1.512,198,0.009,199,0.009,228,0.083,230,1.023,231,2.811,232,2.811,233,3.14,235,1.357,236,1.496,237,3.315,240,2.419,241,2.05,242,0.934,243,2.552,244,1.878,245,2.075,246,3.225,247,1.512,248,2.675,249,1.672,250,2.156,251,2.663,252,2.156,253,2.118,254,1.165,255,1.857,256,1.416,257,2.675,258,3.345,259,2.552,260,3.276,262,2.552,263,2.222,264,1.792,265,1.463,266,2.371,267,2.44,268,2.292,269,2.552,270,2.552,271,2.156,273,2.243,275,2.675,276,2.675,279,2.965,280,2.965,281,2.675,282,2.147,283,2.675,284,2.675,285,1.997,286,1.997,287,2.156,288,2.675,289,3.793,290,1.997,291,2.156,292,1.616,293,2.675,294,1.672,295,2.675,296,2.675,297,2.44,608,1.616,776,4.295,998,4.744,999,3.9,1000,5.53,1001,3.345,1002,4.313,1003,4.313,1004,6.342,1005,3.345,1006,4.94,1007,4.313]],["title/interfaces/ErrorModel.html",[228,0.069,1008,2.451]],["body/interfaces/ErrorModel.html",[3,0.208,4,0.187,5,0.187,9,0.356,11,0.618,19,0.704,22,0.251,23,0.482,43,0.012,45,0.219,46,0.756,56,1.258,73,2.054,133,0.208,198,0.011,199,0.011,228,0.106,230,1.3,235,1.343,236,1.481,242,1.048,253,1.799,1008,4.41,1009,5.481,1010,1.922,1011,3.399,1012,4.251,1013,7.012]],["title/interfaces/Fetch$Params.html",[228,0.069,645,2.451]],["body/interfaces/Fetch$Params.html",[3,0.166,4,0.149,5,0.149,9,0.218,11,0.63,19,0.789,22,0.2,23,0.419,41,1.831,43,0.013,45,0.191,47,1.432,48,1.008,56,1.001,67,0.817,78,1.391,94,2.469,99,2.021,101,2.745,103,1.879,113,1.299,116,0.751,119,1.636,130,2.239,133,0.212,135,1.93,139,1.432,163,1.831,164,3.513,165,1.994,175,1.413,177,1.53,198,0.009,199,0.009,228,0.084,230,1.035,235,1.367,236,1.507,237,3.333,242,0.938,244,1.892,245,2.091,246,3.24,247,1.53,248,2.706,249,1.692,250,2.181,251,2.683,252,2.181,253,2.128,254,1.507,255,1.879,256,1.831,257,2.706,259,2.582,260,3.301,262,2.582,263,2.239,264,1.813,265,1.48,266,2.385,267,2.469,268,2.305,269,2.582,270,2.582,271,2.181,273,2.27,275,2.706,276,2.706,279,3,280,3,281,2.706,282,2.163,283,2.706,284,2.706,285,2.021,286,2.021,287,2.181,288,2.706,289,3.814,290,2.021,291,2.181,292,1.636,293,2.706,294,1.692,295,2.706,296,2.706,297,2.469,402,2.693,645,4.227,1014,3.946,1015,4.455,1016,5.397,1017,3.636,1018,3.835,1019,3.385,1020,4.364,1021,6.39,1022,3,1023,4.364]],["title/interfaces/FetchRequestOperatorsModel.html",[228,0.069,1016,2.969]],["body/interfaces/FetchRequestOperatorsModel.html",[3,0.175,4,0.157,5,0.157,9,0.23,11,0.652,13,3.062,19,0.849,22,0.211,23,0.434,43,0.013,45,0.226,46,0.769,48,1.045,56,1.325,87,2.991,116,0.623,130,2.317,133,0.175,166,3.439,168,4.1,170,3.439,198,0.01,199,0.01,228,0.089,230,1.093,235,1.415,236,1.56,256,1.513,266,2.239,294,2.564,369,2.564,402,2.4,608,2.604,612,4.309,1010,1.615,1011,3.581,1015,3.969,1016,4.809,1018,4.335,1024,2.858,1025,2.577,1026,5.128,1027,5.128,1028,5.506,1029,5.506,1030,4.479,1031,4.309,1032,3.764,1033,4.809,1034,4.528,1035,4.528,1036,3.764,1037,3.581,1038,4.809,1039,3.837,1040,3.837,1041,3.837,1042,3.837]],["title/interfaces/FetchRequestQualityattributeModel.html",[228,0.069,1043,2.969]],["body/interfaces/FetchRequestQualityattributeModel.html",[3,0.175,4,0.157,5,0.157,9,0.23,11,0.652,13,3.062,14,3.584,19,0.892,22,0.211,23,0.434,43,0.013,45,0.226,46,0.769,48,1.045,56,1.325,87,2.991,116,0.623,130,2.317,133,0.175,166,3.439,168,4.1,170,3.439,198,0.01,199,0.01,228,0.089,230,1.093,235,1.415,236,1.56,241,1.835,256,1.513,266,2.239,294,2.564,369,2.564,608,2.604,612,4.309,1010,1.615,1011,3.581,1024,2.858,1025,2.577,1027,5.128,1028,5.506,1029,5.506,1030,4.479,1031,4.309,1032,3.764,1033,4.809,1034,4.528,1035,4.528,1036,3.764,1037,3.581,1038,4.809,1040,3.837,1042,3.837,1043,4.809,1044,4.335,1045,3.837,1046,3.837]],["title/interfaces/FetchRequestQualityphaseModel.html",[228,0.069,1047,2.969]],["body/interfaces/FetchRequestQualityphaseModel.html",[3,0.175,4,0.157,5,0.157,9,0.23,11,0.652,19,0.892,22,0.211,23,0.434,43,0.013,45,0.226,46,0.769,48,1.045,52,2.396,56,1.325,87,2.991,116,0.623,130,2.317,133,0.175,166,3.439,168,4.1,170,3.439,198,0.01,199,0.01,228,0.089,230,1.093,235,1.415,236,1.56,241,1.835,256,1.513,266,2.239,294,2.564,369,2.564,608,2.604,612,4.309,884,3.584,1010,1.615,1011,3.581,1024,2.858,1025,2.577,1027,5.128,1028,5.506,1029,5.506,1030,4.479,1031,4.309,1032,3.764,1033,4.809,1034,4.528,1035,4.528,1036,3.764,1037,3.581,1038,4.809,1040,3.837,1042,3.837,1047,4.809,1048,4.335,1049,3.837,1050,3.837]],["title/interfaces/FetchRequestQualitysavelogModel.html",[228,0.069,1051,2.969]],["body/interfaces/FetchRequestQualitysavelogModel.html",[3,0.175,4,0.157,5,0.157,9,0.23,11,0.652,19,0.915,22,0.211,23,0.434,43,0.013,45,0.226,46,0.769,48,1.045,56,1.325,87,2.991,116,0.623,130,2.317,133,0.175,166,3.439,168,4.1,170,3.439,198,0.01,199,0.01,228,0.089,230,1.093,235,1.415,236,1.56,240,2.396,241,2.101,256,1.513,266,2.239,294,2.564,369,2.564,608,2.604,612,4.309,1010,1.615,1011,3.581,1024,2.858,1025,2.577,1027,5.128,1028,5.506,1029,5.506,1030,4.479,1031,4.309,1032,3.764,1033,4.809,1034,4.528,1035,4.528,1036,3.764,1037,3.581,1038,4.809,1040,3.837,1042,3.837,1051,4.809,1052,4.335,1053,3.837,1054,3.837]],["title/interfaces/FetchResponseOperatorsModel.html",[228,0.069,1019,2.766]],["body/interfaces/FetchResponseOperatorsModel.html",[3,0.178,4,0.16,5,0.16,9,0.234,11,0.659,19,0.918,22,0.215,23,0.439,43,0.013,45,0.227,46,0.771,48,0.879,56,1.34,87,2.946,116,0.506,130,1.882,133,0.178,166,3.461,170,3.461,198,0.01,199,0.01,221,3.081,228,0.09,230,1.112,235,1.431,236,1.577,254,1.267,266,2.264,271,3.325,294,2.58,369,2.58,397,2.257,608,2.703,765,3.303,1010,1.644,1011,3.621,1018,3.224,1019,4.528,1024,2.908,1025,2.969,1026,5.16,1031,4.336,1032,3.805,1034,4.336,1035,4.336,1037,3.621,1055,5.54,1056,5.54,1057,4.251,1058,4.862,1059,4.862,1060,4.862,1061,3.905,1062,5.371]],["title/interfaces/FetchResponseQualityattributeModel.html",[228,0.069,1063,2.766]],["body/interfaces/FetchResponseQualityattributeModel.html",[3,0.176,4,0.159,5,0.159,9,0.231,11,0.655,14,3.593,19,0.94,22,0.213,23,0.436,43,0.013,45,0.226,46,0.77,48,0.873,56,1.331,70,3.026,87,2.938,116,0.501,130,1.863,133,0.176,166,3.448,170,3.448,198,0.01,199,0.01,221,3.07,228,0.089,230,1.101,235,1.422,236,1.568,241,2.106,254,1.254,266,2.25,271,3.313,294,2.57,369,2.57,397,2.249,608,2.699,765,3.282,1010,1.628,1011,3.598,1024,2.879,1025,2.959,1031,4.321,1032,3.781,1034,4.321,1035,4.321,1037,3.598,1044,3.191,1055,5.52,1056,5.52,1057,4.224,1058,4.831,1059,4.831,1060,4.831,1063,4.5,1064,5.317]],["title/interfaces/FetchResponseQualityphaseModel.html",[228,0.069,1065,2.766]],["body/interfaces/FetchResponseQualityphaseModel.html",[3,0.176,4,0.159,5,0.159,9,0.231,11,0.655,19,0.94,22,0.213,23,0.436,43,0.013,45,0.226,46,0.77,48,0.873,56,1.331,59,3.026,87,2.938,116,0.501,130,1.863,133,0.176,166,3.448,170,3.448,198,0.01,199,0.01,221,3.07,228,0.089,230,1.101,235,1.422,236,1.568,241,2.106,254,1.254,266,2.25,271,3.313,294,2.57,369,2.57,397,2.249,608,2.699,765,3.282,884,3.593,1010,1.628,1011,3.598,1024,2.879,1025,2.959,1031,4.321,1032,3.781,1034,4.321,1035,4.321,1037,3.598,1048,3.191,1055,5.52,1056,5.52,1057,4.224,1058,4.831,1059,4.831,1060,4.831,1065,4.5,1066,5.317]],["title/interfaces/FetchResponseQualitysavelogModel.html",[228,0.069,1067,2.766]],["body/interfaces/FetchResponseQualitysavelogModel.html",[3,0.176,4,0.159,5,0.159,9,0.231,11,0.655,19,0.94,22,0.213,23,0.436,43,0.013,45,0.226,46,0.77,48,0.873,56,1.331,87,2.938,116,0.501,130,1.863,133,0.176,166,3.448,170,3.448,198,0.01,199,0.01,221,3.07,228,0.089,230,1.101,235,1.422,236,1.568,240,2.403,241,2.106,243,2.747,254,1.254,258,3.601,266,2.25,271,3.313,294,2.57,369,2.57,397,2.249,608,2.699,765,3.282,1010,1.628,1011,3.598,1024,2.879,1025,2.959,1031,4.321,1032,3.781,1034,4.321,1035,4.321,1037,3.598,1052,3.191,1055,5.52,1056,5.52,1057,4.224,1058,4.831,1059,4.831,1060,4.831,1067,4.5]],["title/interfaces/Fetch_1$Params.html",[228,0.069,1068,2.766]],["body/interfaces/Fetch_1$Params.html",[3,0.163,4,0.147,5,0.147,9,0.214,11,0.624,19,0.903,22,0.197,23,0.416,41,1.819,43,0.013,45,0.189,47,1.412,48,1.004,56,0.987,62,2.829,67,0.806,73,1.613,78,0.924,99,1.992,101,2.727,103,1.852,113,1.281,116,0.749,119,1.613,130,2.219,133,0.21,135,1.92,139,1.412,163,1.819,164,3.495,165,1.986,175,1.4,177,1.508,198,0.009,199,0.009,228,0.083,230,1.02,231,2.805,232,2.805,235,1.355,236,1.494,237,3.311,240,2.417,241,2.119,242,0.933,244,1.875,245,2.072,246,3.223,247,1.508,248,2.668,249,1.668,250,2.151,251,2.659,252,2.151,253,2.116,254,1.494,255,1.852,256,1.815,257,2.668,259,2.546,260,3.271,262,2.546,263,2.219,264,1.788,265,1.46,266,2.369,267,2.434,268,2.29,269,2.546,270,2.546,271,2.151,273,2.238,275,2.668,276,2.668,279,2.958,280,2.958,281,2.668,282,2.144,283,2.668,284,2.668,285,1.992,286,1.992,287,2.151,288,2.668,289,3.788,290,1.992,291,2.151,292,1.613,293,2.668,294,1.668,295,2.668,296,2.668,297,2.434,764,2.332,1017,3.604,1022,2.958,1051,5.369,1052,3.801,1067,3.337,1068,4.739,1069,3.583,1070,3.891,1071,4.303,1072,6.332,1073,3.891,1074,4.303]],["title/interfaces/Fetch_2$Params.html",[228,0.069,1075,2.766]],["body/interfaces/Fetch_2$Params.html",[3,0.163,4,0.147,5,0.147,9,0.214,11,0.623,19,0.902,20,2.429,22,0.197,23,0.415,41,1.817,43,0.013,45,0.189,47,1.409,48,1.003,52,2.212,56,0.985,62,2.826,67,0.804,78,0.922,99,1.988,101,2.724,103,1.848,113,1.278,116,0.748,119,1.609,130,2.215,133,0.21,135,1.918,139,1.409,163,1.817,164,3.492,165,1.984,175,1.398,177,1.505,198,0.009,199,0.009,228,0.083,230,1.018,231,2.798,235,1.353,236,1.492,237,3.308,242,0.933,244,1.873,245,2.069,246,3.22,247,1.505,248,2.662,249,1.665,250,2.146,251,2.655,252,2.146,253,2.115,254,1.492,255,1.848,256,1.812,257,2.662,259,2.54,260,3.266,262,2.54,263,2.215,264,1.784,265,1.456,266,2.366,267,2.429,268,2.287,269,2.54,270,2.54,271,2.146,273,2.233,275,2.662,276,2.662,279,2.951,280,2.951,281,2.662,282,2.141,283,2.662,284,2.662,285,1.988,286,1.988,287,2.146,288,2.662,289,3.784,290,1.988,291,2.146,292,1.609,293,2.662,294,1.665,295,2.662,296,2.662,297,2.429,607,1.556,884,3.492,1017,3.598,1022,2.951,1025,1.916,1047,5.364,1048,3.795,1065,3.33,1073,3.882,1075,4.733,1076,3.575,1077,3.882,1078,6.664,1079,4.293,1080,6.323,1081,4.293]],["title/interfaces/Fetch_3$Params.html",[228,0.069,1082,2.766]],["body/interfaces/Fetch_3$Params.html",[3,0.16,4,0.144,5,0.144,9,0.21,11,0.616,13,2.964,14,3.593,19,0.933,20,3.75,22,0.193,23,0.41,41,1.802,43,0.013,45,0.186,47,1.385,48,0.997,50,2.9,56,0.968,62,2.803,67,0.79,78,0.906,99,1.954,101,2.701,103,1.816,113,1.256,116,0.745,119,1.581,130,2.191,133,0.207,135,1.906,139,1.385,163,1.802,164,3.469,165,1.974,175,1.382,177,1.479,198,0.009,199,0.009,228,0.081,230,1.001,231,2.75,235,1.338,236,1.475,237,3.281,241,2.106,242,0.927,244,1.852,245,2.046,246,3.199,247,1.479,248,2.617,249,1.636,250,2.109,251,2.625,252,2.109,253,2.101,254,1.475,255,1.816,256,1.792,257,2.617,259,2.496,260,3.23,262,2.496,263,2.191,264,1.753,265,1.431,266,2.347,267,2.387,268,2.269,269,2.496,270,2.496,271,2.109,273,2.195,275,2.617,276,2.617,279,2.9,280,2.9,281,2.617,282,2.117,283,2.617,284,2.617,285,1.954,286,1.954,287,2.109,288,2.617,289,3.753,290,1.954,291,2.109,292,1.581,293,2.617,294,1.636,295,2.617,296,2.617,297,2.387,1017,3.558,1022,2.9,1025,2.958,1043,5.33,1044,3.753,1063,3.273,1073,3.815,1082,4.695,1083,3.514,1084,3.815,1085,4.219,1086,6.253,1087,4.219]],["title/interfaces/FilterOperatorsModel.html",[228,0.069,1039,2.969]],["body/interfaces/FilterOperatorsModel.html",[3,0.183,4,0.165,5,0.165,9,0.24,11,0.544,13,2.231,22,0.221,23,0.446,43,0.013,44,1.381,45,0.22,46,0.758,48,0.725,62,2.231,78,1.034,90,1.646,133,0.183,140,4.165,154,4.165,155,3.99,156,3.99,157,3.99,158,3.99,159,3.99,198,0.01,199,0.01,228,0.093,230,1.143,235,1.181,236,1.302,242,0.932,607,1.746,1010,1.689,1018,3.312,1026,3.737,1039,4.944,1088,3.737,1089,3.14,1090,2.988,1091,4.012,1092,5.819,1093,5.358,1094,5.358,1095,5.358,1096,5.358,1097,4.194,1098,5.358,1099,5.358,1100,5.358]],["title/interfaces/FilterQualityattributeModel.html",[228,0.069,1045,2.969]],["body/interfaces/FilterQualityattributeModel.html",[3,0.179,4,0.161,5,0.161,9,0.235,11,0.531,13,2.18,14,2.552,19,0.604,20,2.663,22,0.216,23,0.44,43,0.013,45,0.217,46,0.753,48,0.881,56,1.08,57,3.068,62,2.18,78,1.011,90,1.633,133,0.179,140,4.131,141,3.603,142,4.637,143,4.637,144,4.637,145,4.637,146,4.637,147,4.637,148,4.637,149,3.452,150,4.637,151,4.378,152,4.378,154,4.131,155,3.949,156,3.949,157,3.949,158,3.949,159,3.949,198,0.01,199,0.01,228,0.091,230,1.116,235,1.154,236,1.272,241,1.496,242,0.922,607,1.706,1010,1.65,1044,3.236,1045,4.873,1088,3.651,1089,3.068,1090,2.919,1091,3.92]],["title/interfaces/FilterQualityphaseModel.html",[228,0.069,1049,2.969]],["body/interfaces/FilterQualityphaseModel.html",[3,0.173,4,0.156,5,0.156,9,0.227,11,0.514,19,0.585,22,0.209,23,0.431,43,0.013,45,0.214,46,0.747,48,0.686,52,1.652,62,2.11,78,0.978,90,1.614,133,0.173,140,4.084,141,3.55,149,3.401,154,4.084,155,3.891,156,3.891,157,3.891,158,3.891,159,3.891,198,0.01,199,0.01,228,0.088,230,1.081,235,1.117,236,1.231,241,1.448,242,0.908,607,1.652,719,4.569,800,3.55,884,2.47,1010,1.598,1048,3.132,1049,4.775,1088,3.535,1089,2.97,1090,2.826,1091,3.795,1101,4.867,1102,4.867,1103,4.867,1104,3.713,1105,4.867,1106,4.867,1107,4.867,1108,4.867,1109,4.867,1110,4.867,1111,4.867,1112,4.867,1113,4.867]],["title/interfaces/FilterQualitysavelogModel.html",[228,0.069,1053,2.969]],["body/interfaces/FilterQualitysavelogModel.html",[3,0.19,4,0.171,5,0.171,9,0.25,11,0.565,19,0.643,22,0.23,23,0.457,43,0.013,45,0.223,46,0.765,48,0.753,62,2.318,78,1.075,90,1.668,133,0.19,140,4.221,154,4.221,155,4.059,156,4.059,157,4.059,158,4.059,159,4.059,198,0.01,199,0.01,228,0.096,230,1.187,235,1.227,236,1.353,240,1.815,241,1.591,242,0.948,607,1.815,1001,5.076,1010,1.755,1052,3.442,1053,5.061,1088,3.884,1089,3.263,1090,3.105,1091,4.169,1097,4.266,1104,3.872,1114,5.45,1115,5.45]],["title/classes/HeaderParameter.html",[134,0.578,1116,2.211]],["body/classes/HeaderParameter.html",[3,0.075,4,0.067,5,0.067,9,0.098,22,0.09,23,0.235,24,1.463,26,0.846,29,1.877,32,0.768,38,1.191,42,1.298,43,0.013,44,1.283,45,0.199,46,0.421,67,0.586,68,1.463,87,2.573,88,3.16,90,1.79,112,0.624,113,1.817,116,0.212,133,0.075,134,0.883,139,2.289,160,2.987,163,1.622,165,0.933,175,1.683,177,0.688,198,0.005,199,0.005,215,3.219,228,0.038,242,1.03,244,0.666,245,1.464,247,0.688,249,1.515,253,1.282,254,0.531,255,0.845,256,1.599,263,0.788,264,1.623,265,0.666,268,1.174,278,1.28,282,0.761,285,1.45,286,1.45,290,2.699,292,2.185,359,1.28,390,0.845,392,0.845,397,1.325,600,2.638,655,1.162,671,2.417,685,1.064,687,2.814,704,1.064,706,2.906,713,1.064,732,2.906,742,0.816,785,1.218,806,1.021,857,2.423,868,2.032,869,1.809,913,1.879,1116,1.942,1117,1.35,1118,2.423,1119,1.218,1120,4.291,1121,2.906,1122,4.663,1123,3.175,1124,2.608,1125,3.065,1126,3.784,1127,2.249,1128,3.533,1129,2.153,1130,4.27,1131,2.249,1132,2.686,1133,4.007,1134,1.964,1135,2.153,1136,2.153,1137,3.744,1138,1.35,1139,1.35,1140,1.35,1141,2.686,1142,1.35,1143,1.35,1144,2.153,1145,1.35,1146,1.853,1147,1.35,1148,1.35,1149,1.35,1150,2.153,1151,1.35,1152,1.35,1153,1.35,1154,1.35,1155,1.942,1156,1.35,1157,1.35,1158,1.111,1159,2.153,1160,1.35,1161,2.153,1162,2.153,1163,1.35,1164,3.888,1165,3.63,1166,3.888,1167,2.153,1168,1.35,1169,3.568,1170,2.686,1171,4.335,1172,2.686,1173,1.35,1174,1.35,1175,2.153,1176,2.153,1177,1.35,1178,2.153,1179,1.218,1180,2.686,1181,2.153,1182,1.35,1183,4.195,1184,3.888,1185,1.28,1186,3.065,1187,1.35,1188,1.35,1189,1.35,1190,1.35,1191,1.35,1192,1.35,1193,1.162,1194,3.065,1195,1.35,1196,1.35,1197,1.35,1198,2.153,1199,2.153,1200,1.35,1201,1.35,1202,2.686,1203,1.28,1204,1.35,1205,1.35,1206,1.35,1207,1.35,1208,1.35,1209,1.35,1210,1.35,1211,1.35,1212,3.348,1213,1.35,1214,1.35,1215,1.35,1216,1.35,1217,1.218,1218,1.35,1219,2.153,1220,3.065,1221,3.065,1222,2.153,1223,1.35,1224,1.35,1225,2.686,1226,1.35,1227,1.35,1228,2.686,1229,2.686,1230,1.35,1231,2.153,1232,1.35,1233,1.35,1234,1.35,1235,1.35,1236,1.35,1237,1.35,1238,1.35,1239,1.35,1240,1.35,1241,1.35,1242,2.153,1243,1.35,1244,1.28,1245,1.35,1246,1.35,1247,1.35,1248,1.35,1249,1.35,1250,1.35,1251,1.35,1252,1.35,1253,1.35,1254,1.35,1255,1.35,1256,1.35,1257,1.35,1258,1.35,1259,1.35,1260,1.35,1261,2.64,1262,1.35,1263,1.35,1264,2.153,1265,2.686,1266,3.568,1267,1.35,1268,1.35,1269,1.35,1270,1.35,1271,1.35,1272,3.888,1273,2.686,1274,2.153,1275,1.35,1276,3.348,1277,1.35,1278,1.35,1279,1.35,1280,1.35,1281,2.906,1282,3.568,1283,1.35,1284,1.35,1285,1.35,1286,1.35,1287,1.35,1288,1.35,1289,1.35,1290,1.35,1291,1.35,1292,1.35,1293,1.35,1294,1.35,1295,1.35,1296,1.35,1297,1.35,1298,1.35,1299,2.153,1300,1.28,1301,1.35,1302,1.35,1303,1.35,1304,1.35,1305,1.35,1306,1.35,1307,1.35,1308,1.35,1309,1.35,1310,2.153,1311,1.35,1312,1.35,1313,1.35,1314,1.35,1315,1.35,1316,1.35,1317,1.35,1318,1.35,1319,1.35,1320,1.35]],["title/injectables/IframeInitializerService.html",[0,0.903,838,2.969]],["body/injectables/IframeInitializerService.html",[0,1.037,2,1.244,3,0.106,4,0.095,5,0.166,9,0.267,10,2.226,11,0.462,19,0.939,20,2.318,22,0.128,24,2.156,26,1.107,29,1.494,32,0.683,35,3.539,36,2.903,37,4.44,38,1.115,40,1.536,41,1.595,42,1.115,43,0.013,44,1.043,45,0.216,46,0.524,47,2.253,48,0.988,49,3.705,51,3.169,52,1.485,53,2.541,54,2.671,55,2.671,56,0.94,57,2.671,61,2.306,67,0.767,68,1.758,73,2.372,78,1.324,90,0.683,95,2.029,108,3.9,116,0.718,118,0.706,120,1.817,121,2.787,122,2.029,123,2.162,124,2.52,125,1.577,126,1.728,127,1.916,131,1.291,132,1.2,133,0.106,134,0.452,135,1.982,136,1.393,139,1.345,140,1.728,141,1.577,149,1.511,154,1.728,155,2.541,156,1.728,157,1.728,158,1.728,159,1.728,160,2.336,161,1.45,162,1.916,163,0.83,164,1.511,165,0.83,166,1.45,167,1.577,168,1.728,170,1.45,177,1.436,198,0.007,199,0.007,204,2.671,214,3.178,220,3.491,221,1.897,235,1.004,242,0.864,254,0.753,297,2.318,322,4.35,369,1.884,379,4.35,383,1.728,384,1.728,397,1.39,409,1.764,454,3.9,455,2.029,456,2.029,582,2.816,595,3.178,607,1.941,612,1.817,617,2.162,623,2.931,719,2.029,754,3.416,755,3.412,758,3.178,760,2.816,764,2.903,765,2.318,800,1.577,838,3.412,844,3.769,845,5.967,846,5.723,847,6.328,853,2.671,858,3.412,860,4.629,878,3.682,884,2.634,901,3.701,902,2.787,903,4.843,904,4.843,932,2.321,935,4.097,937,2.787,938,2.787,941,2.787,949,2.52,1008,2.816,1012,2.162,1101,2.162,1102,2.162,1103,2.162,1104,2.424,1105,2.162,1106,2.162,1107,2.162,1108,2.162,1109,2.162,1110,2.162,1111,2.162,1112,2.162,1113,2.162,1165,2.221,1321,2.787,1322,4.693,1323,5.356,1324,4.693,1325,3.412,1326,2.787,1327,5.01,1328,5.01,1329,4.35,1330,3.192,1331,4.693,1332,4.155,1333,3.705,1334,3.705,1335,4.097,1336,2.983,1337,2.983,1338,2.983,1339,2.983,1340,4.693,1341,3.192,1342,4.693,1343,4.693,1344,3.178,1345,4.693,1346,4.693,1347,4.097,1348,4.097,1349,3.412,1350,3.192,1351,3.178,1352,3.178,1353,2.983,1354,2.983,1355,3.178,1356,3.178,1357,3.192,1358,3.192,1359,3.192,1360,2.321,1361,2.162,1362,2.162,1363,2.787,1364,3.167,1365,2.52,1366,2.52,1367,2.321,1368,3.192,1369,2.162,1370,3.192,1371,2.787,1372,2.321,1373,2.162,1374,3.412,1375,2.787,1376,3.192,1377,3.192,1378,4.046,1379,3.769,1380,3.178,1381,3.412,1382,3.705,1383,2.321,1384,4.046,1385,4.393,1386,2.52,1387,2.52,1388,2.321,1389,2.321,1390,3.192,1391,2.52,1392,2.787,1393,2.52,1394,3.192]],["title/interfaces/JsonList.html",[128,2.596,228,0.069]],["body/interfaces/JsonList.html",[3,0.188,4,0.169,5,0.169,9,0.247,11,0.735,19,0.907,22,0.227,23,0.453,43,0.013,45,0.222,52,2.36,70,3.224,72,4.68,73,2.44,74,3.386,88,3.674,90,1.703,128,4.74,129,3.837,133,0.247,141,2.799,142,3.602,143,3.602,144,3.602,145,3.602,146,3.602,147,3.602,148,3.602,149,2.681,150,3.602,151,3.4,152,3.4,198,0.01,199,0.01,228,0.125,230,1.173,235,1.595,236,1.759,241,2.068,242,1.069,358,3.4,607,2.187,608,2.605,764,2.681,889,4.473,1010,1.734,1395,4.74,1396,4.68,1397,3.602,1398,4.119,1399,3.837]],["title/injectables/LanguageService.html",[0,0.903,1327,2.766]],["body/injectables/LanguageService.html",[0,1.405,2,1.932,3,0.164,4,0.148,5,0.209,9,0.305,10,2.685,11,0.626,19,0.877,22,0.198,23,0.417,26,1.499,29,2.102,32,1.061,38,1.406,40,2.08,41,1.652,42,1.273,43,0.013,44,1.191,45,0.209,46,0.598,47,1.822,48,0.835,61,2.389,67,0.81,68,1.822,78,1.387,84,4.621,90,1.061,111,4.865,112,1.375,113,1.652,114,5.018,116,0.661,118,1.096,119,1.622,131,2.004,132,1.863,133,0.164,134,0.702,135,1.652,136,2.163,177,1.946,198,0.009,199,0.009,221,2.57,242,0.887,369,2.152,378,4.328,379,4.778,383,2.684,384,2.684,388,4.328,605,5.549,607,2.011,623,2.884,754,3.556,853,3.617,858,5.969,886,4.305,1327,4.305,1334,6.482,1336,4.041,1337,4.041,1338,4.041,1339,4.041,1400,4.328,1401,6.126,1402,6.356,1403,6.356,1404,6.356,1405,4.957,1406,6.951,1407,5.018,1408,5.549,1409,6.356,1410,4.328,1411,4.328,1412,4.957,1413,4.957]],["title/injectables/LoadingService.html",[0,0.903,1414,2.451]],["body/injectables/LoadingService.html",[0,1.284,2,1.684,3,0.143,4,0.129,5,0.129,9,0.188,11,0.79,19,0.786,22,0.173,23,0.381,24,2.273,26,1.37,29,2.152,32,1.404,38,1.568,40,1.901,43,0.013,45,0.196,47,2.16,48,1.029,51,3,56,1.164,61,2.833,67,1.072,68,2.16,74,3.423,78,1.544,90,1.404,100,3.933,111,4.653,112,1.82,113,1.51,114,4.585,115,4.223,116,0.547,118,0.955,119,1.414,131,1.747,132,1.624,133,0.143,134,0.612,175,0.955,198,0.009,199,0.009,220,3.992,325,5.1,402,2.107,406,2.836,410,2.734,570,4.223,582,3.486,591,3.933,622,4.585,623,3.051,764,2.749,868,3.186,869,2.836,871,4.21,913,3.164,1037,3.145,1333,4.585,1408,5.071,1414,3.486,1415,3.772,1416,5.808,1417,5.177,1418,5.48,1419,6.56,1420,6.56,1421,7.015,1422,7.015,1423,5.808,1424,4.321,1425,5.808,1426,5.808,1427,4.321,1428,7.015,1429,7.015,1430,6.125,1431,4.321,1432,4.321,1433,5.808,1434,4.321,1435,7.015,1436,4.321,1437,4.321,1438,5.071,1439,3.141,1440,7.015,1441,7.015,1442,5.808]],["title/components/LogViewerComponent.html",[203,1.17,410,1.591]],["body/components/LogViewerComponent.html",[1,3.992,3,0.056,4,0.05,5,0.109,6,1.907,7,1.322,9,0.27,10,1.729,11,0.628,12,1.94,13,1.727,14,2.838,15,4.191,16,1.322,17,1.461,18,1.461,19,0.904,20,3.348,22,0.113,23,0.185,24,2.139,26,0.664,29,2.052,32,0.358,35,1.973,36,2.022,37,3.295,38,1.399,40,0.921,41,1.498,42,1.155,43,0.013,44,1.162,45,0.227,46,0.543,47,1.48,48,1.03,50,1.69,52,0.891,56,1.307,59,2.938,61,2.625,62,1.727,63,2.047,65,2.047,67,0.942,68,2.001,70,2.074,73,2.34,77,2.458,78,1.029,79,2.047,80,2.223,84,2.047,87,1.606,89,2.256,90,1.326,94,1.391,95,2.317,99,1.138,100,1.907,102,2.716,108,2.716,109,2.877,111,3.03,112,1.599,113,1.498,115,2.65,116,0.627,117,1.882,118,0.37,119,0.548,120,0.953,122,1.064,123,1.134,125,0.827,126,0.906,127,1.005,133,0.056,134,0.237,135,1.731,136,0.73,139,1.776,140,0.906,151,1.005,152,1.005,154,0.906,155,1.525,156,0.906,157,0.906,158,0.906,159,0.906,160,1.53,161,1.94,162,1.69,163,0.732,164,1.333,165,0.732,166,0.76,167,2.551,168,0.906,170,0.76,175,0.37,177,0.862,188,1.461,198,0.004,199,0.004,201,4.335,203,1.044,204,3.28,211,2.877,214,2.894,215,2.313,216,2.458,221,1.727,240,2.593,241,1.599,242,0.894,243,3.502,254,0.395,272,2.047,313,0.73,323,3.49,361,0.703,362,1.333,363,0.827,364,0.827,365,0.827,366,0.827,369,2.421,371,0.76,372,3.348,373,3.208,374,1.391,376,1.391,379,3.46,381,1.217,383,0.906,384,0.906,385,2.432,389,1.333,390,1.058,391,0.827,392,1.606,393,0.827,394,0.827,395,1.182,396,1.8,397,1.265,398,1.391,399,0.677,400,0.827,401,0.677,402,1.022,403,0.827,404,0.677,405,0.827,406,1.473,407,0.827,408,0.703,409,0.629,410,2.012,411,0.827,412,0.703,413,0.827,414,0.703,415,0.827,416,0.703,417,1.8,418,0.827,419,0.703,420,0.827,421,0.827,422,0.827,454,2.716,455,1.064,456,1.064,460,1.064,482,5.583,492,1.217,502,1.217,544,3.03,546,1.973,561,0.953,582,3.46,585,1.461,591,3.497,594,2.458,595,1.134,599,1.217,607,0.891,608,0.921,610,2.223,612,1.602,623,2.415,696,1.005,739,3.228,740,2.458,742,1.022,748,1.461,749,2.432,754,1.279,755,2.047,756,2.223,760,2.564,761,2.223,764,2.022,765,1.391,783,1.134,784,1.461,791,1.79,794,2.468,795,1.525,796,2.836,799,1.134,800,2.551,802,1.907,803,1.602,804,2.468,805,1.322,806,2.165,807,2.86,809,2.978,810,1.134,811,2.432,813,1.005,814,0.953,817,1.907,833,1.79,844,2.468,848,2.223,853,1.602,869,0.677,871,1.69,878,3.099,885,2.047,889,2.223,901,2.313,913,0.703,932,2.047,954,1.322,965,1.461,966,2.796,969,2.432,974,2.468,980,1.064,984,2.716,986,2.458,989,2.716,997,2.317,1000,4.335,1001,1.907,1005,2.468,1025,1.097,1057,1.064,1097,0.953,1104,1.455,1114,1.217,1115,1.217,1121,1.602,1261,0.792,1281,1.602,1300,0.953,1332,3.497,1333,2.223,1336,1.79,1337,1.79,1338,1.79,1339,1.79,1344,2.894,1351,2.894,1352,2.894,1353,2.716,1354,3.283,1355,2.894,1356,2.894,1361,1.907,1362,1.907,1364,0.953,1373,1.907,1374,1.217,1379,2.894,1380,2.894,1384,2.047,1414,3.46,1417,2.716,1430,2.458,1443,6.174,1444,1.461,1445,2.816,1446,3.644,1447,2.816,1448,3.644,1449,3.644,1450,3.644,1451,3.644,1452,3.644,1453,4.273,1454,3.644,1455,3.644,1456,2.816,1457,2.816,1458,2.816,1459,2.816,1460,1.674,1461,3.992,1462,3.373,1463,2.816,1464,2.816,1465,2.047,1466,2.816,1467,1.674,1468,5.033,1469,5.163,1470,2.816,1471,1.674,1472,2.816,1473,2.816,1474,1.674,1475,4.077,1476,2.816,1477,2.816,1478,2.047,1479,2.816,1480,2.816,1481,1.674,1482,5.163,1483,3.731,1484,4.508,1485,5.163,1486,3.644,1487,1.674,1488,4.273,1489,2.816,1490,2.458,1491,2.047,1492,2.816,1493,2.877,1494,2.816,1495,1.674,1496,2.816,1497,2.816,1498,1.674,1499,2.458,1500,2.816,1501,1.674,1502,4.508,1503,1.674,1504,4.273,1505,4.273,1506,1.674,1507,2.816,1508,2.816,1509,2.458,1510,1.907,1511,1.674,1512,2.816,1513,2.458,1514,1.674,1515,1.674,1516,2.816,1517,2.816,1518,2.816,1519,1.674,1520,2.816,1521,2.458,1522,1.674,1523,1.217,1524,1.322,1525,2.223,1526,1.322,1527,1.674,1528,1.674,1529,1.674,1530,1.674,1531,1.674,1532,1.674,1533,1.674,1534,1.674,1535,1.674,1536,1.674,1537,1.674,1538,1.674,1539,2.816,1540,3.644,1541,1.674,1542,3.644,1543,1.461,1544,1.674,1545,1.674,1546,1.674,1547,2.816,1548,1.674,1549,3.644,1550,1.674,1551,1.322,1552,1.674,1553,1.674,1554,1.461,1555,1.674,1556,1.461,1557,1.674,1558,1.674,1559,1.461,1560,1.674,1561,1.674,1562,1.674,1563,1.674,1564,1.674,1565,1.674,1566,1.674,1567,1.674,1568,1.674,1569,1.674,1570,1.674,1571,2.816,1572,1.674,1573,1.674,1574,1.674,1575,1.674,1576,1.674,1577,1.674,1578,2.816,1579,2.816,1580,2.816,1581,2.816,1582,1.674,1583,2.816,1584,1.674,1585,2.816,1586,1.674,1587,1.674,1588,2.816,1589,1.674,1590,1.674,1591,1.674,1592,1.674,1593,1.674,1594,1.674,1595,4.766,1596,1.674,1597,1.674,1598,1.674,1599,1.674,1600,1.674,1601,1.674,1602,1.674,1603,1.674,1604,1.322,1605,1.322,1606,2.223,1607,1.674,1608,3.373,1609,1.674,1610,1.674,1611,1.674,1612,1.674,1613,1.674,1614,2.816,1615,2.816,1616,2.816,1617,1.461,1618,5.163,1619,2.816,1620,1.674,1621,1.674,1622,2.458,1623,1.322,1624,2.816,1625,1.461,1626,1.674,1627,2.458,1628,1.674,1629,5.764,1630,2.223,1631,1.674,1632,1.674,1633,1.674,1634,1.674,1635,1.674,1636,2.816,1637,1.674,1638,1.674,1639,2.047,1640,1.322,1641,2.816,1642,1.674,1643,1.674,1644,2.816,1645,1.217,1646,1.674,1647,1.217]],["title/interfaces/Login$Params.html",[228,0.069,683,2.766]],["body/interfaces/Login$Params.html",[3,0.17,4,0.153,5,0.153,9,0.223,11,0.64,19,0.799,22,0.205,23,0.426,41,1.853,43,0.013,45,0.212,47,1.469,48,1.016,56,1.027,67,0.838,78,1.404,94,2.532,99,2.072,101,2.777,103,1.926,113,1.332,116,0.728,119,1.677,133,0.215,135,1.948,139,1.469,163,1.853,165,2.01,175,1.435,177,1.569,198,0.01,199,0.01,228,0.086,230,1.061,235,1.389,236,1.532,237,3.373,242,0.901,244,1.923,245,2.125,246,3.27,247,1.569,248,2.775,249,1.735,250,2.236,251,2.726,252,2.236,253,2.147,254,1.209,255,1.926,256,1.469,257,2.775,259,2.647,260,3.354,262,2.647,263,2.275,264,1.859,265,1.518,266,2.413,267,2.532,268,2.332,269,2.647,270,2.647,271,2.236,273,2.327,275,2.775,276,2.775,281,2.775,282,2.198,283,2.775,284,2.775,285,2.072,286,2.072,287,2.236,288,2.775,289,3.859,290,2.072,291,2.236,292,1.677,293,2.775,294,1.735,295,2.775,296,2.775,297,2.532,402,2.805,566,4.185,683,4.826,776,4.397,1022,3.076,1648,4.046,1649,3.471,1650,4.474,1651,6.492]],["title/components/LoginPinComponent.html",[203,1.17,401,1.651]],["body/components/LoginPinComponent.html",[3,0.053,4,0.047,5,0.104,9,0.201,10,1.498,11,0.495,12,2.281,13,1.088,15,1.957,16,1.253,19,0.914,22,0.064,23,0.177,24,1.837,26,0.635,29,1.997,32,0.34,35,2.719,36,1.954,38,1.284,40,0.881,41,1.464,42,0.827,43,0.013,44,1.056,45,0.195,46,0.389,47,1.741,48,1.032,51,1.39,52,1.306,53,2.235,54,2.63,55,1.532,56,1.284,57,1.532,61,2.409,62,1.088,64,4.416,67,0.921,68,1.792,74,1.222,78,1.323,79,3.651,89,2.874,90,1.256,94,2.039,96,1.253,103,1.888,112,0.972,116,0.603,117,1.81,118,0.351,120,0.903,125,0.784,126,0.859,127,0.952,133,0.053,134,0.225,135,1.735,136,0.693,139,1.614,140,3.049,154,3.049,155,1.898,156,1.457,157,1.457,158,1.457,159,1.457,160,2.464,161,2.557,162,1.615,163,0.413,164,0.751,165,0.413,166,0.721,167,3.351,168,0.859,170,0.721,171,2.373,175,0.595,177,0.824,198,0.004,199,0.004,203,1.004,204,2.858,220,1.532,221,1.669,224,1.957,237,1.954,240,0.852,241,0.747,242,0.902,254,0.374,261,2.125,266,1.398,272,4.094,297,1.33,313,0.693,321,3.38,326,1.009,361,0.666,362,1.274,363,1.33,364,0.784,365,0.784,366,0.784,369,1.398,371,0.721,372,3.296,373,3.158,374,1.33,376,1.33,379,3.38,383,0.859,384,0.859,385,2.63,389,1.274,390,1.317,391,0.784,392,1.552,393,0.784,394,0.784,395,0.666,396,0.784,397,0.47,398,1.33,399,0.642,400,0.784,401,1.669,402,2.715,403,0.784,404,0.642,405,0.784,406,1.417,407,0.784,408,0.666,409,0.596,410,1.366,411,0.784,412,0.666,413,0.784,414,0.666,415,0.784,416,0.666,417,0.784,418,0.784,419,0.666,420,0.784,421,0.784,422,0.784,435,1.532,454,2.624,455,1.009,456,1.009,474,1.154,475,4.761,536,1.253,544,1.711,546,1.898,553,0.952,555,2.125,561,0.903,564,2.228,566,1.457,568,3.604,574,3.259,582,3.014,584,2.103,593,2.35,599,1.957,600,3.756,607,0.852,608,1.512,617,2.373,618,2.548,623,2.833,627,2.624,629,2.125,645,2.103,646,1.385,652,1.385,654,1.385,742,0.976,749,2.349,754,1.875,760,1.615,764,1.274,765,0.784,771,1.823,794,4.234,795,1.457,796,3.557,798,2.938,799,1.075,800,2.899,801,1.154,802,3.625,803,3.205,804,3.401,806,1.222,807,1.615,808,1.994,809,3.311,810,1.075,811,3.727,812,1.075,813,3.213,814,2.858,815,2.548,816,1.154,817,1.075,831,4.113,833,2.228,841,2.35,844,3.13,852,1.957,853,2.349,866,2.125,868,1.875,869,1.669,878,3.38,882,1.823,884,1.274,886,1.823,901,1.457,913,1.471,916,2.125,949,2.767,950,2.125,951,2.35,966,2.235,967,3.522,968,3.403,969,4.017,974,1.075,976,1.154,979,1.39,980,1.711,981,2.767,984,3.58,987,1.385,989,2.228,991,1.253,992,1.154,996,3.192,997,2.938,1008,1.615,1012,2.373,1015,4.432,1025,1.609,1026,3.401,1030,3.401,1057,2.624,1090,1.457,1092,2.125,1093,1.957,1094,1.957,1095,1.957,1096,1.957,1097,1.532,1098,2.548,1099,1.957,1100,1.957,1123,1.532,1158,1.731,1165,2.187,1261,0.751,1325,1.957,1332,3.13,1336,1.711,1337,1.711,1338,1.711,1339,1.711,1344,1.823,1348,2.35,1349,1.957,1351,3.401,1352,2.796,1353,1.711,1354,1.711,1355,1.823,1356,1.823,1360,1.154,1361,1.075,1362,1.075,1364,2.63,1365,2.767,1366,2.125,1367,1.957,1369,2.373,1372,1.154,1373,1.075,1374,1.154,1378,1.154,1379,2.373,1380,1.823,1381,1.957,1382,2.125,1383,1.154,1384,2.548,1385,2.125,1386,1.253,1387,1.253,1388,1.154,1391,2.125,1392,1.385,1393,2.125,1414,3.38,1417,3.861,1418,3.36,1439,2.548,1465,1.957,1478,1.957,1491,1.957,1513,2.35,1521,2.35,1523,1.154,1551,2.125,1554,2.35,1623,1.253,1639,1.154,1640,3.259,1645,1.154,1647,1.957,1649,3.625,1652,5.17,1653,1.385,1654,3.505,1655,2.691,1656,4.917,1657,2.767,1658,2.691,1659,4.128,1660,1.385,1661,4.674,1662,2.691,1663,2.35,1664,2.35,1665,2.691,1666,2.35,1667,2.35,1668,2.691,1669,3.651,1670,2.35,1671,3.604,1672,2.35,1673,2.35,1674,2.125,1675,2.125,1676,2.691,1677,1.587,1678,2.691,1679,2.691,1680,4.128,1681,4.128,1682,3.604,1683,2.691,1684,2.767,1685,2.125,1686,2.691,1687,2.691,1688,2.691,1689,1.587,1690,2.691,1691,2.691,1692,1.587,1693,2.35,1694,2.35,1695,2.691,1696,1.587,1697,2.35,1698,1.587,1699,2.691,1700,1.587,1701,2.691,1702,4.128,1703,2.35,1704,3.604,1705,1.957,1706,1.587,1707,2.691,1708,3.06,1709,1.587,1710,1.587,1711,3.002,1712,2.125,1713,2.35,1714,2.35,1715,1.587,1716,2.125,1717,2.35,1718,2.35,1719,2.35,1720,2.35,1721,2.35,1722,2.35,1723,2.35,1724,1.385,1725,1.385,1726,1.957,1727,1.385,1728,1.253,1729,1.385,1730,1.385,1731,1.385,1732,2.125,1733,1.385,1734,1.385,1735,1.385,1736,1.385,1737,2.691,1738,4.128,1739,3.505,1740,3.505,1741,1.253,1742,2.35,1743,2.35,1744,2.35,1745,2.691,1746,1.587,1747,2.691,1748,1.587,1749,1.587,1750,1.587,1751,1.385,1752,1.587,1753,2.35,1754,1.587,1755,1.385,1756,1.385,1757,1.385,1758,1.385,1759,1.587,1760,1.587,1761,1.587,1762,2.691,1763,1.587,1764,1.587,1765,1.587,1766,1.587,1767,1.587,1768,1.587,1769,1.587,1770,1.253,1771,2.35,1772,3.06,1773,2.35,1774,2.35,1775,2.35,1776,3.604,1777,2.35,1778,1.385,1779,3.892,1780,3.06,1781,2.767,1782,2.767,1783,3.604,1784,1.385,1785,1.385,1786,3.604,1787,2.767,1788,1.253,1789,2.35,1790,1.385,1791,2.35,1792,1.385,1793,1.385,1794,1.253,1795,1.385,1796,1.385,1797,1.385,1798,3.06,1799,1.587,1800,2.767,1801,2.228,1802,1.587,1803,2.35,1804,1.253,1805,1.385,1806,1.385,1807,3.06,1808,3.06,1809,1.385,1810,1.385,1811,1.385,1812,2.35,1813,1.253,1814,3.06,1815,3.604,1816,1.385,1817,1.385,1818,1.385,1819,1.587,1820,2.548,1821,2.125,1822,1.385,1823,1.385,1824,1.075,1825,2.35,1826,1.385,1827,1.385,1828,1.385,1829,1.587,1830,2.691,1831,1.587,1832,1.587,1833,1.587,1834,1.587,1835,1.587,1836,1.385,1837,2.691,1838,1.587,1839,1.587,1840,2.125,1841,2.373,1842,2.35,1843,2.691,1844,1.385,1845,1.385,1846,1.253,1847,1.385]],["title/components/LoginUsernameComponent.html",[203,1.17,404,1.651]],["body/components/LoginUsernameComponent.html",[3,0.069,4,0.062,5,0.126,9,0.185,10,1.769,11,0.48,12,2.605,19,0.932,22,0.083,23,0.221,24,1.862,26,0.794,29,1.953,32,0.444,35,2.64,36,2.308,38,1.26,40,1.101,41,1.635,42,0.674,43,0.013,44,0.914,45,0.204,46,0.317,47,1.802,48,0.943,51,1.738,52,1.064,53,1.821,54,2.413,55,1.914,56,1.149,61,1.833,64,3.545,67,0.693,68,1.535,73,1.101,74,1.528,78,1.251,89,3.16,90,0.907,94,2.409,96,1.639,103,1.833,112,1.176,116,0.643,117,2.191,118,0.459,120,1.182,125,1.026,126,1.124,127,1.246,133,0.069,134,0.294,135,1.689,136,0.906,139,0.964,160,1.412,161,2.433,162,2.545,163,0.54,165,0.54,167,2.833,171,3.302,175,0.459,177,1.03,198,0.005,199,0.005,203,1.215,204,2.775,221,1.36,224,2.446,240,1.064,242,0.763,254,0.794,266,1.139,313,0.906,320,3.1,326,1.32,361,0.872,362,1.592,363,1.026,364,1.026,365,1.026,366,1.026,369,1.139,371,0.943,372,3.547,373,3.399,374,1.662,376,1.662,379,3.774,383,1.124,384,1.124,385,3.437,389,1.592,390,1.264,391,1.026,392,1.833,393,1.026,394,1.026,395,0.872,396,1.026,397,0.615,398,1.662,399,0.839,400,1.026,401,0.839,402,2.888,403,1.026,404,1.971,405,1.026,406,1.714,407,1.026,408,0.872,409,0.78,410,1.652,411,1.026,412,0.872,413,1.026,414,0.872,415,1.026,416,0.872,417,1.026,418,1.026,419,0.872,420,1.026,421,1.026,422,1.026,435,1.914,439,4.725,454,3.1,455,1.32,456,1.32,474,1.51,536,2.656,544,1.32,546,2.296,553,1.246,561,1.182,564,3.1,566,3.405,573,3.849,574,3.849,582,3.442,584,2.019,599,2.446,600,4.006,607,1.064,615,2.278,623,2.866,627,3.1,648,3.702,742,1.22,749,2.775,754,2.214,760,2.019,764,1.592,765,1.026,794,3.884,795,1.124,796,3.838,798,2.696,799,1.406,800,3.21,801,1.51,802,4.09,803,3.579,804,3.884,806,0.943,807,1.246,808,2.413,809,3.528,810,1.406,811,3.962,812,1.406,813,2.545,814,1.914,815,2.446,816,1.51,817,2.278,831,4.521,833,3.1,852,2.446,853,2.775,868,2.214,869,1.971,878,3.774,882,2.278,886,2.278,901,1.821,913,1.78,916,2.656,918,2.656,934,1.813,956,1.813,966,2.64,967,4.007,968,3.839,969,4.301,974,1.406,976,3.083,979,1.738,980,2.139,981,2.656,983,2.937,984,3.998,989,3.1,991,2.656,992,1.51,996,3.839,997,3.406,1008,1.246,1012,2.278,1015,2.019,1158,2.095,1261,0.983,1325,2.446,1332,3.628,1336,2.139,1337,2.139,1338,2.139,1339,2.139,1344,3.302,1349,2.446,1351,3.884,1352,3.302,1353,2.139,1354,2.139,1355,2.278,1356,2.278,1360,1.51,1361,1.406,1362,1.406,1364,1.182,1369,1.406,1372,1.51,1373,1.406,1378,2.446,1379,2.872,1380,1.406,1381,2.446,1383,1.51,1391,2.656,1414,3.774,1417,4.244,1418,3.895,1439,3.083,1465,2.446,1478,2.446,1491,2.446,1499,2.937,1523,1.51,1623,1.639,1639,1.51,1640,2.656,1645,1.51,1647,2.446,1649,4.793,1652,5.13,1656,5.491,1657,3.348,1660,1.813,1661,5.273,1663,2.937,1666,2.937,1667,2.937,1669,4.17,1670,2.937,1671,4.257,1672,2.937,1673,2.937,1674,2.656,1675,2.656,1693,2.937,1694,2.937,1697,2.937,1704,2.937,1708,3.702,1711,3.545,1712,2.656,1713,2.937,1714,2.937,1716,2.656,1717,2.937,1718,2.937,1719,2.937,1720,2.937,1721,2.937,1722,2.937,1723,2.937,1724,1.813,1725,1.813,1726,2.446,1727,1.813,1728,1.639,1729,1.813,1730,1.813,1731,1.813,1732,2.656,1733,1.813,1734,1.813,1735,1.813,1736,1.813,1741,1.639,1742,1.813,1743,1.813,1744,2.937,1751,1.813,1770,1.639,1771,2.937,1772,3.702,1773,2.937,1776,2.937,1778,1.813,1779,4.17,1780,3.702,1781,3.348,1782,3.348,1783,4.257,1784,1.813,1785,1.813,1786,4.257,1787,3.348,1788,1.639,1789,2.937,1790,1.813,1791,2.937,1792,1.813,1793,1.813,1794,1.639,1795,1.813,1796,1.813,1797,1.813,1798,3.702,1800,3.348,1801,2.696,1803,2.937,1804,1.639,1805,1.813,1806,1.813,1807,2.937,1808,2.937,1809,1.813,1810,1.813,1811,1.813,1812,1.813,1815,1.813,1817,1.813,1820,3.083,1821,2.656,1822,1.813,1823,2.937,1824,1.406,1825,2.937,1826,1.813,1827,1.813,1828,1.813,1836,1.813,1840,3.348,1841,4.259,1842,3.702,1844,1.813,1845,1.813,1846,2.656,1847,4.677,1848,1.813,1849,4.24,1850,3.364,1851,4.876,1852,3.364,1853,2.076,1854,2.076,1855,2.076,1856,2.076,1857,2.076,1858,2.076,1859,2.937,1860,2.076,1861,2.076,1862,2.076,1863,2.076,1864,2.076,1865,3.364,1866,1.813,1867,2.076,1868,2.076,1869,2.076]],["title/interfaces/Logout$Params.html",[228,0.069,698,2.766]],["body/interfaces/Logout$Params.html",[3,0.173,4,0.155,5,0.155,9,0.227,11,0.647,19,0.805,22,0.209,23,0.431,41,1.867,43,0.013,45,0.155,47,1.494,48,1.021,56,1.044,67,0.852,78,1.413,94,2.575,99,2.108,101,2.799,103,1.959,113,1.355,116,0.732,119,1.706,133,0.218,135,1.96,139,1.494,163,1.867,165,2.02,175,1.451,177,1.596,198,0.01,199,0.01,228,0.088,230,1.079,235,1.404,236,1.548,237,3.399,242,0.659,244,1.944,245,2.148,246,3.29,247,1.596,248,2.822,249,1.765,250,2.275,251,2.755,252,2.275,253,2.161,254,1.23,255,1.959,256,1.494,257,2.822,259,2.693,260,3.39,262,2.693,263,2.299,264,1.891,265,1.544,266,2.432,267,2.575,268,2.351,269,2.693,270,2.693,271,2.275,273,2.367,275,2.822,276,2.822,281,2.822,282,2.222,283,2.822,284,2.822,285,2.108,286,2.108,287,2.275,288,2.822,289,3.889,290,2.108,291,2.275,292,1.706,293,2.822,294,1.765,295,2.822,296,2.822,297,2.575,409,2.921,698,4.864,1022,3.129,1870,4.116,1871,4.551,1872,6.563]],["title/components/LogoutDialogComponent.html",[203,1.17,408,1.714]],["body/components/LogoutDialogComponent.html",[3,0.119,4,0.107,5,0.107,9,0.259,10,2.35,11,0.761,19,0.797,22,0.144,23,0.335,26,1.204,29,2.152,32,0.767,38,1.466,40,1.671,41,1.684,42,0.719,43,0.013,44,1.114,45,0.204,46,0.56,48,0.781,50,3.887,56,1.466,61,2.674,63,4.709,67,0.972,68,2.039,73,2.119,74,2.319,75,4.031,78,0.957,89,3.367,94,2.936,116,0.481,117,3.071,118,0.793,133,0.119,134,0.508,135,1.327,198,0.008,199,0.008,203,1.704,221,2.064,240,1.616,242,0.645,313,1.565,361,1.506,362,2.416,363,1.772,364,1.772,365,1.772,366,1.772,371,1.629,372,3.959,373,3.793,374,2.522,376,2.522,385,4.394,389,2.416,390,1.919,391,1.772,392,2.434,393,1.772,394,1.772,395,1.506,396,1.772,397,1.062,398,2.522,399,1.45,400,1.772,401,1.45,402,1.852,403,1.772,404,1.45,405,1.772,406,1.45,407,1.772,408,2.719,409,2.812,410,1.398,411,1.772,412,1.506,413,1.772,414,1.506,415,1.772,416,1.506,417,1.772,418,1.772,419,1.506,420,1.772,421,1.772,422,1.772,460,2.28,491,5.067,546,2.764,623,2.667,738,2.831,739,5.605,742,1.852,743,5.19,744,4.457,745,5.976,746,5.19,747,6.211,749,3.686,750,3.131,751,5.976,752,4.457,753,5.655,754,2.319,755,4.709,756,4.693,757,5.19,758,4.026,759,5.19,760,3.568,761,6.096,762,5.779,767,5.655,768,5.113,769,5.113,771,4.386,774,4.457,775,4.457,776,2.429,777,4.457,778,3.131,779,3.131,781,3.131,782,3.131,783,3.457,785,1.942,786,3.131,787,3.131,788,3.131,789,4.457,790,3.712,791,3.245,792,4.457,793,4.457,794,2.429,795,1.942,796,2.637,797,3.131,798,2.28,799,2.429,800,2.522,801,2.607,802,3.457,803,2.041,804,2.429,805,2.831,806,1.629,807,2.152,808,2.041,809,3.071,810,2.429,811,2.041,812,2.429,813,3.887,814,2.905,815,2.607,816,3.712,817,3.457,818,3.131,1873,6.532,1874,5.105,1875,5.404,1876,5.404,1877,3.586,1878,6.477,1879,3.586,1880,3.586,1881,6.477,1882,5.105,1883,5.105,1884,5.105,1885,3.586]],["title/injectables/LogoutService.html",[0,0.903,1329,2.451]],["body/injectables/LogoutService.html",[0,1.36,2,1.837,3,0.156,4,0.141,5,0.141,9,0.268,10,2.634,11,0.761,12,3.508,19,0.814,22,0.189,24,1.351,26,1.452,29,2.074,32,1.009,35,3.709,36,3.437,38,1.372,40,2.014,41,1.6,42,0.945,43,0.013,44,0.884,45,0.141,46,0.444,47,1.764,48,0.954,51,3.179,52,2.298,53,3.932,54,3.502,55,3.502,61,2.729,67,1.006,68,2.081,78,1.547,103,2.313,116,0.645,118,1.042,124,3.722,125,2.329,126,2.553,131,1.906,132,1.772,133,0.156,134,0.668,135,1.6,136,2.057,161,3.508,198,0.009,199,0.009,369,2.458,409,3.155,435,3.502,553,2.83,564,3.912,573,4.858,575,6.34,583,4.858,584,4.358,596,5.617,623,2.398,754,2.795,764,2.912,830,3.722,831,5.513,852,4.474,853,3.502,924,5.372,950,3.722,1329,3.693,1363,4.116,1859,4.116,1886,4.116,1887,5.372,1888,5.372,1889,6.153,1890,6.153,1891,7.261,1892,6.153,1893,7.261,1894,6.34,1895,7.261,1896,4.714,1897,4.714,1898,7.261,1899,7.261,1900,4.714,1901,4.858,1902,4.714]],["title/injectables/MainViewCommunicationsService.html",[0,0.903,1461,2.969]],["body/injectables/MainViewCommunicationsService.html",[0,1.444,2,2.016,3,0.172,4,0.154,5,0.154,9,0.225,11,0.78,15,4.75,19,0.843,22,0.207,23,0.429,29,2.126,32,1.532,38,1.434,40,2.138,41,1.698,43,0.013,45,0.195,47,1.872,48,0.858,73,2.138,78,1.224,89,3.558,90,1.398,99,3.04,100,5.092,111,5.217,112,2.086,113,1.955,116,0.674,118,1.144,119,1.693,120,2.945,131,2.092,132,1.945,133,0.172,134,0.733,198,0.01,199,0.01,218,5.703,240,2.379,243,2.673,368,5.703,369,2.545,406,3.04,410,3.085,623,2.546,764,3.092,871,3.921,918,5.157,1461,4.75,1475,5.157,1502,5.703,1524,5.936,1525,6.421,1526,5.936,1903,4.518,1904,6.532,1905,6.532,1906,7.158,1907,7.158,1908,6.532,1909,5.175,1910,6.532,1911,6.532,1912,6.532]],["title/interfaces/Message.html",[228,0.069,901,2.211]],["body/interfaces/Message.html",[3,0.194,4,0.175,5,0.175,9,0.255,11,0.577,22,0.235,23,0.463,43,0.013,45,0.246,73,1.918,78,1.099,93,4.628,133,0.194,149,3.716,161,3.566,198,0.01,199,0.01,220,3.336,228,0.099,230,1.214,235,1.254,242,1.059,566,4.252,608,2.742,617,5.125,618,5.502,846,4.628,901,3.819,1104,4.057,1323,5.117,1353,3.726,1913,5.117,1914,5.861,1915,5.861,1916,7.853,1917,6.856,1918,7.853]],["title/interfaces/OperatorsModel.html",[228,0.069,1061,2.969]],["body/interfaces/OperatorsModel.html",[3,0.182,4,0.163,5,0.163,9,0.238,11,0.539,19,0.614,22,0.219,23,0.444,43,0.013,44,1.438,45,0.249,46,0.809,52,1.733,73,1.792,133,0.182,198,0.01,199,0.01,228,0.092,230,1.134,235,1.172,236,1.292,242,1.082,358,4.819,608,2.628,1010,1.676,1061,4.92,1092,6.057,1093,5.578,1094,5.578,1095,5.578,1096,5.578,1097,4.366,1098,5.578,1099,5.578,1100,5.578,1395,3.481,1397,5.105,1705,3.981,1919,4.78]],["title/injectables/OperatorsService.html",[0,0.903,321,2.451]],["body/injectables/OperatorsService.html",[0,1.316,2,1.748,3,0.149,4,0.134,5,0.134,22,0.18,23,0.391,24,1.707,26,1.405,32,0.96,38,1.485,42,1.339,43,0.013,44,1.253,45,0.238,46,0.698,67,0.973,90,0.96,101,2.888,112,1.244,116,0.76,118,0.991,119,1.468,130,1.571,131,1.813,132,1.686,133,0.149,134,0.635,163,1.738,165,2.052,175,1.316,198,0.009,199,0.009,219,5.264,242,0.753,244,2.109,245,2.544,246,2.599,247,1.373,249,1.518,250,1.957,251,2.5,252,1.957,253,2.124,254,1.904,256,2.041,265,1.328,268,2.544,282,2.673,291,1.957,292,1.949,300,3.37,304,2.428,321,3.574,328,4.527,330,4.249,340,2.428,557,4.527,645,4.666,671,2.818,672,4.052,673,4.527,676,3.785,679,3.785,681,2.851,685,3.736,686,5.465,687,3.37,688,4.033,689,4.822,690,4.822,691,4.822,692,3.574,695,4.033,696,3.574,703,4.033,704,2.818,706,2.552,707,3.037,708,2.851,711,3.037,713,2.123,715,3.037,716,3.037,1017,2.552,1018,2.692,1019,4.033,1023,5.199,1920,3.916,1921,6.684,1922,7.121,1923,4.485,1924,5.955,1925,4.485,1926,5.955,1927,4.485,1928,4.485,1929,5.955,1930,4.485,1931,4.485]],["title/pipes/OptionsPipe.html",[287,1.782,427,2.766]],["body/pipes/OptionsPipe.html",[3,0.175,4,0.157,5,0.157,9,0.288,10,2.621,11,0.712,12,3.281,14,3.13,26,1.245,29,1.776,32,1.129,38,1.057,40,1.727,41,1.372,42,1.057,43,0.013,44,1.354,45,0.157,46,0.497,48,0.869,50,3.969,52,2.093,56,1.594,61,2.486,67,1.081,72,5.281,78,1.354,88,3.584,116,0.497,118,1.167,133,0.175,134,0.747,135,1.719,175,1.167,198,0.01,199,0.01,242,1.032,287,2.886,294,2.239,369,2.694,371,2.397,427,4.479,607,2.286,613,6.611,623,2.577,629,5.222,742,1.915,769,5.222,791,4.205,947,5.775,1354,4.814,1475,5.222,1556,5.775,1685,5.222,1824,3.574,1932,4.167,1933,4.608,1934,6.614,1935,6.614,1936,6.614,1937,5.278,1938,7.572,1939,6.614,1940,6.614,1941,7.957,1942,5.222,1943,6.614,1944,6.614,1945,6.614,1946,5.775,1947,5.278,1948,5.278,1949,5.278,1950,5.278]],["title/interfaces/OrderOperatorsModel.html",[228,0.069,1041,2.969]],["body/interfaces/OrderOperatorsModel.html",[3,0.192,4,0.173,5,0.173,9,0.252,11,0.57,13,2.341,22,0.232,23,0.459,43,0.013,44,1.411,45,0.209,46,0.736,48,0.761,78,1.085,133,0.192,198,0.01,199,0.01,228,0.097,230,1.199,235,1.239,236,1.366,607,1.832,979,4.04,1010,1.772,1018,3.475,1026,3.921,1036,3.295,1041,5.091,1089,3.295,1090,3.135,1093,5.473,1094,5.473,1095,5.473,1096,5.473,1097,4.283,1098,5.473,1099,5.473,1100,5.473,1951,3.921,1952,5.296,1953,5.097,1954,5.097]],["title/interfaces/OrderQualityattributeModel.html",[228,0.069,1046,2.969]],["body/interfaces/OrderQualityattributeModel.html",[3,0.187,4,0.168,5,0.168,9,0.245,11,0.555,13,2.278,14,2.667,19,0.632,22,0.226,23,0.452,43,0.013,45,0.205,46,0.73,48,0.74,78,1.056,133,0.187,141,3.675,142,4.729,143,4.729,144,4.729,145,4.729,146,4.729,147,4.729,148,4.729,149,3.521,150,4.729,151,4.465,152,4.465,198,0.01,199,0.01,228,0.095,230,1.167,235,1.206,236,1.329,241,1.563,607,1.783,979,4.003,1010,1.725,1036,3.207,1044,3.382,1046,5.008,1089,3.207,1090,3.051,1951,3.816,1952,5.248,1953,5.038,1954,5.038]],["title/interfaces/OrderQualityphaseModel.html",[228,0.069,1050,2.969]],["body/interfaces/OrderQualityphaseModel.html",[3,0.18,4,0.162,5,0.162,9,0.236,11,0.534,19,0.607,22,0.217,23,0.441,43,0.013,45,0.2,46,0.72,48,0.712,52,1.715,78,1.016,133,0.18,141,3.611,149,3.46,198,0.01,199,0.01,228,0.091,230,1.122,235,1.16,236,1.278,241,1.503,607,1.715,719,4.647,800,3.611,884,2.565,979,3.949,1010,1.659,1036,3.084,1048,3.253,1050,4.889,1089,3.084,1090,2.934,1101,4.951,1102,4.951,1103,4.951,1104,3.777,1105,4.951,1106,4.951,1107,4.951,1108,4.951,1109,4.951,1110,4.951,1111,4.951,1112,4.951,1113,4.951,1951,3.67,1952,5.177,1953,4.951,1954,4.951]],["title/interfaces/OrderQualitysavelogModel.html",[228,0.069,1054,2.969]],["body/interfaces/OrderQualitysavelogModel.html",[3,0.198,4,0.178,5,0.178,9,0.26,11,0.589,19,0.67,22,0.239,23,0.468,43,0.013,45,0.213,46,0.744,48,0.785,78,1.12,133,0.198,198,0.011,199,0.011,228,0.101,230,1.238,235,1.279,236,1.41,240,1.891,241,1.658,607,1.891,979,4.083,1001,5.168,1010,1.829,1036,3.401,1052,3.587,1054,5.189,1089,3.401,1090,3.236,1097,4.342,1104,3.942,1114,5.548,1115,5.548,1951,4.048,1952,5.353,1953,5.168,1954,5.168]],["title/classes/Parameter.html",[134,0.578,1120,2.211]],["body/classes/Parameter.html",[3,0.075,4,0.068,5,0.068,9,0.099,22,0.091,23,0.237,24,1.471,26,0.852,29,1.881,32,0.773,38,1.122,42,1.254,43,0.013,44,1.255,45,0.194,46,0.34,67,0.371,68,1.471,87,2.58,88,3.169,90,1.791,112,0.629,113,1.821,116,0.214,133,0.075,134,0.92,139,2.292,160,2.994,163,1.627,165,0.939,175,1.686,177,0.694,198,0.005,199,0.005,215,3.231,228,0.038,242,1.036,244,0.672,245,1.473,247,0.694,249,1.523,253,1.035,254,0.535,255,0.853,256,1.471,263,0.795,264,1.633,265,1.07,268,1.182,278,1.291,282,0.768,285,1.46,286,1.46,290,2.707,292,2.191,359,1.291,390,0.853,392,0.853,397,1.333,600,2.651,655,1.172,671,2.13,685,1.074,687,2.651,704,1.074,713,1.074,732,2.92,742,0.823,785,1.228,806,1.03,857,2.436,868,2.544,869,1.819,913,1.889,1116,1.228,1117,1.361,1118,3.231,1119,1.228,1120,4.212,1121,2.561,1122,4.669,1123,2.561,1124,2.626,1125,3.079,1126,3.793,1129,1.361,1130,4.018,1132,2.701,1133,4.018,1135,2.168,1136,2.168,1137,3.757,1138,1.361,1139,1.361,1140,1.361,1141,2.701,1142,1.361,1143,1.361,1144,2.168,1145,1.361,1146,1.866,1147,1.361,1148,1.361,1149,1.361,1150,2.168,1151,1.361,1152,1.361,1153,1.361,1154,1.361,1155,1.956,1156,1.361,1157,1.361,1158,1.121,1159,2.168,1160,1.361,1161,3.079,1162,3.079,1163,1.361,1164,3.9,1165,3.636,1166,3.9,1167,2.168,1168,1.361,1169,3.582,1170,2.701,1171,4.345,1172,2.701,1173,1.361,1174,1.361,1175,2.168,1176,2.168,1177,1.361,1178,2.168,1179,1.228,1180,2.701,1181,2.168,1182,1.361,1183,4.205,1184,3.9,1185,1.291,1186,3.079,1187,1.361,1188,1.361,1189,1.361,1190,1.361,1191,1.361,1192,1.361,1193,1.172,1194,3.079,1195,1.361,1196,1.361,1197,1.361,1198,2.168,1199,2.168,1200,1.361,1201,1.361,1202,2.701,1203,1.291,1204,1.361,1205,1.361,1206,1.361,1207,1.361,1208,1.361,1209,1.361,1210,1.361,1211,1.361,1212,3.362,1213,1.361,1214,1.361,1215,1.361,1216,1.361,1217,1.228,1218,1.361,1219,2.168,1220,3.079,1221,3.079,1222,2.168,1223,1.361,1224,1.361,1225,2.701,1226,1.361,1227,1.361,1228,2.701,1229,2.701,1230,1.361,1231,2.168,1232,1.361,1233,1.361,1234,1.361,1235,1.361,1236,1.361,1237,1.361,1238,1.361,1239,1.361,1240,1.361,1241,1.361,1242,2.168,1243,1.361,1244,1.291,1245,1.361,1246,1.361,1247,1.361,1248,1.361,1249,1.361,1250,1.361,1251,1.361,1252,1.361,1253,1.361,1254,1.361,1255,1.361,1256,1.361,1257,1.361,1258,1.361,1259,1.361,1260,1.361,1261,2.651,1262,1.361,1263,1.361,1264,2.168,1265,2.701,1266,3.582,1267,1.361,1268,1.361,1269,1.361,1270,1.361,1271,1.361,1272,3.9,1273,2.701,1274,2.168,1275,1.361,1276,3.362,1277,1.361,1278,1.361,1279,1.361,1280,1.361,1281,2.92,1282,3.582,1283,1.361,1284,1.361,1285,1.361,1286,1.361,1287,1.361,1288,1.361,1289,1.361,1290,1.361,1291,1.361,1292,1.361,1293,1.361,1294,1.361,1295,1.361,1296,1.361,1297,1.361,1298,1.361,1299,2.168,1300,1.291,1301,1.361,1302,1.361,1303,1.361,1304,1.361,1305,1.361,1306,1.361,1307,1.361,1308,1.361,1309,1.361,1310,2.168,1311,1.361,1312,1.361,1313,1.361,1314,1.361,1315,1.361,1316,1.361,1317,1.361,1318,1.361,1319,1.361,1320,1.361,1955,2.268,1956,4.5,1957,2.268]],["title/classes/ParameterCodec.html",[134,0.578,1146,2.11]],["body/classes/ParameterCodec.html",[3,0.075,4,0.068,5,0.068,9,0.099,22,0.091,24,1.471,26,0.853,29,1.505,32,0.486,38,1.029,42,1.342,43,0.013,44,1.218,45,0.187,46,0.483,67,0.839,68,1.471,87,2.58,88,3.317,90,1.782,113,1.822,116,0.214,133,0.075,134,0.887,139,2.292,160,2.994,163,1.628,165,0.94,175,1.686,177,0.695,198,0.005,199,0.005,215,3.233,228,0.038,242,1.044,244,0.673,245,1.474,247,0.695,249,1.525,253,1.036,254,0.536,255,0.854,256,1.471,263,0.796,264,1.634,265,0.673,268,1.183,278,1.292,282,0.769,285,1.461,286,1.461,290,2.708,292,2.192,359,2.057,390,0.854,392,0.854,397,1.334,600,2.652,655,1.173,671,2.131,685,1.075,687,2.653,704,1.075,713,1.075,732,2.922,742,1.311,785,1.23,806,1.031,857,2.438,868,2.045,869,1.821,913,1.891,1116,1.23,1117,1.363,1118,3.035,1119,1.23,1120,4.213,1121,2.563,1122,4.541,1123,2.563,1125,2.703,1126,3.519,1129,1.363,1130,4.02,1132,2.169,1133,3.758,1135,2.169,1136,2.703,1137,3.758,1138,2.169,1139,2.169,1140,2.169,1141,3.081,1142,2.169,1143,2.169,1144,2.703,1145,2.169,1146,2.326,1147,2.169,1148,1.363,1149,2.169,1150,2.169,1151,2.169,1152,1.363,1153,2.169,1154,1.363,1155,1.957,1156,1.363,1157,1.363,1158,1.122,1159,2.169,1160,1.363,1161,2.169,1162,2.169,1163,1.363,1164,3.901,1165,3.636,1166,3.901,1167,2.169,1168,1.363,1169,3.583,1170,2.703,1171,4.346,1172,2.703,1173,1.363,1174,1.363,1175,2.169,1176,2.169,1177,1.363,1178,2.169,1179,1.23,1180,2.703,1181,2.169,1182,1.363,1183,4.206,1184,3.901,1185,1.292,1186,3.081,1187,1.363,1188,1.363,1189,1.363,1190,1.363,1191,1.363,1192,1.363,1193,1.173,1194,3.081,1195,1.363,1196,1.363,1197,1.363,1198,2.169,1199,2.169,1200,1.363,1201,1.363,1202,2.703,1203,1.292,1204,1.363,1205,1.363,1206,1.363,1207,1.363,1208,1.363,1209,1.363,1210,1.363,1211,1.363,1212,3.364,1213,1.363,1214,1.363,1215,1.363,1216,1.363,1217,1.23,1218,1.363,1219,2.169,1220,3.081,1221,3.081,1222,2.169,1223,1.363,1224,1.363,1225,2.703,1226,1.363,1227,1.363,1228,2.703,1229,2.703,1230,1.363,1231,2.169,1232,1.363,1233,1.363,1234,1.363,1235,1.363,1236,1.363,1237,1.363,1238,1.363,1239,1.363,1240,1.363,1241,1.363,1242,2.169,1243,1.363,1244,1.292,1245,1.363,1246,1.363,1247,1.363,1248,1.363,1249,1.363,1250,1.363,1251,1.363,1252,1.363,1253,1.363,1254,1.363,1255,1.363,1256,1.363,1257,1.363,1258,1.363,1259,1.363,1260,1.363,1261,2.653,1262,1.363,1263,1.363,1264,2.169,1265,2.703,1266,3.583,1267,1.363,1268,1.363,1269,1.363,1270,1.363,1271,1.363,1272,3.901,1273,2.703,1274,2.169,1275,1.363,1276,3.364,1277,1.363,1278,1.363,1279,1.363,1280,1.363,1281,2.922,1282,3.583,1283,1.363,1284,1.363,1285,1.363,1286,1.363,1287,1.363,1288,1.363,1289,1.363,1290,1.363,1291,1.363,1292,1.363,1293,1.363,1294,1.363,1295,1.363,1296,1.363,1297,1.363,1298,1.363,1299,2.169,1300,1.292,1301,1.363,1302,1.363,1303,1.363,1304,1.363,1305,1.363,1306,1.363,1307,1.363,1308,1.363,1309,1.363,1310,2.169,1311,1.363,1312,1.363,1313,1.363,1314,1.363,1315,1.363,1316,1.363,1317,1.363,1318,1.363,1319,1.363,1320,1.363,1958,3.615,1959,3.615,1960,3.615,1961,3.615,1962,2.271,1963,2.271,1964,2.271,1965,2.271]],["title/interfaces/ParameterOptions.html",[228,0.069,1126,2.211]],["body/interfaces/ParameterOptions.html",[3,0.078,4,0.07,5,0.07,9,0.102,22,0.094,23,0.243,24,1.498,29,1.529,32,0.502,42,1.141,43,0.013,44,0.98,45,0.17,46,0.492,68,1.498,87,2.605,88,3.203,90,1.782,113,1.838,116,0.221,133,0.078,134,0.898,139,2.301,160,3.019,163,1.648,165,0.964,175,1.696,177,0.718,198,0.005,199,0.005,215,3.278,228,0.039,230,0.486,242,1.025,244,0.694,245,1.505,247,0.718,249,1.557,253,1.063,254,0.553,255,0.881,256,1.498,263,0.822,264,1.669,265,0.694,268,1.213,278,1.334,282,0.794,285,1.499,286,1.499,290,2.736,292,2.215,359,1.334,390,0.881,392,0.881,397,1.362,600,2.7,655,1.211,671,2.177,685,1.11,687,2.695,704,1.11,713,1.11,732,2.975,742,0.851,785,1.27,806,1.065,857,2.49,868,2.586,869,1.859,913,1.931,1116,1.27,1118,1.27,1119,1.27,1120,4.21,1121,2.617,1122,4.605,1123,2.617,1125,2.76,1126,3.664,1129,1.407,1130,4.062,1132,2.225,1133,3.806,1135,2.225,1136,2.225,1137,3.806,1138,1.407,1139,1.407,1140,1.407,1141,2.76,1142,1.407,1143,1.407,1144,2.225,1145,1.407,1146,1.916,1147,1.407,1148,1.407,1149,1.407,1150,2.225,1151,1.407,1152,1.407,1153,1.407,1154,1.407,1155,2.008,1156,2.225,1157,2.225,1158,2.582,1159,3.417,1160,1.407,1161,2.225,1162,2.225,1163,1.407,1164,3.946,1165,3.657,1166,3.946,1167,2.225,1168,1.407,1169,3.634,1170,2.76,1171,4.38,1172,2.76,1173,1.407,1174,1.407,1175,2.225,1176,2.225,1177,1.407,1178,2.225,1179,1.27,1180,2.76,1181,2.225,1182,1.407,1183,4.244,1184,3.946,1185,1.334,1186,3.137,1187,1.407,1188,1.407,1189,1.407,1190,1.407,1191,1.407,1192,1.407,1193,1.211,1194,3.137,1195,1.407,1196,1.407,1197,1.407,1198,2.225,1199,2.225,1200,1.407,1201,1.407,1202,2.76,1203,1.334,1204,1.407,1205,1.407,1206,1.407,1207,1.407,1208,1.407,1209,1.407,1210,1.407,1211,1.407,1212,3.417,1213,1.407,1214,1.407,1215,1.407,1216,1.407,1217,1.27,1218,1.407,1219,2.225,1220,3.137,1221,3.137,1222,2.225,1223,1.407,1224,1.407,1225,2.76,1226,1.407,1227,1.407,1228,2.76,1229,2.76,1230,1.407,1231,2.225,1232,1.407,1233,1.407,1234,1.407,1235,1.407,1236,1.407,1237,1.407,1238,1.407,1239,1.407,1240,1.407,1241,1.407,1242,2.225,1243,1.407,1244,1.334,1245,1.407,1246,1.407,1247,1.407,1248,1.407,1249,1.407,1250,1.407,1251,1.407,1252,1.407,1253,1.407,1254,1.407,1255,1.407,1256,1.407,1257,1.407,1258,1.407,1259,1.407,1260,1.407,1261,2.695,1262,1.407,1263,1.407,1264,2.225,1265,2.76,1266,3.634,1267,1.407,1268,1.407,1269,1.407,1270,1.407,1271,1.407,1272,3.946,1273,2.76,1274,2.225,1275,1.407,1276,3.417,1277,1.407,1278,1.407,1279,1.407,1280,1.407,1281,2.975,1282,3.634,1283,1.407,1284,1.407,1285,1.407,1286,1.407,1287,1.407,1288,1.407,1289,1.407,1290,1.407,1291,1.407,1292,1.407,1293,1.407,1294,1.407,1295,1.407,1296,1.407,1297,1.407,1298,1.407,1299,2.225,1300,1.334,1301,1.407,1302,1.407,1303,1.407,1304,1.407,1305,1.407,1306,1.407,1307,1.407,1308,1.407,1309,1.407,1310,2.225,1311,1.407,1312,1.407,1313,1.407,1314,1.407,1315,1.407,1316,1.407,1317,1.407,1318,1.407,1319,1.407,1320,1.407]],["title/classes/PathParameter.html",[134,0.578,1179,2.211]],["body/classes/PathParameter.html",[3,0.075,4,0.067,5,0.067,9,0.098,22,0.09,23,0.236,24,1.464,26,0.847,29,1.877,32,0.768,38,1.191,42,1.298,43,0.013,44,1.283,45,0.199,46,0.421,67,0.587,68,1.464,87,2.573,88,3.16,90,1.79,112,0.624,113,1.817,116,0.212,133,0.075,134,0.884,139,2.289,160,2.987,163,1.622,165,0.933,175,1.683,177,0.689,198,0.005,199,0.005,215,3.22,228,0.038,242,1.037,244,0.666,245,1.465,247,0.689,249,1.515,253,1.029,254,0.531,255,0.846,256,1.464,263,0.788,264,1.624,265,0.666,268,1.174,278,1.281,282,0.762,285,1.451,286,1.451,290,2.7,292,2.288,359,1.281,390,0.846,392,0.846,397,1.326,600,2.639,655,1.163,671,2.417,685,1.065,687,2.641,704,1.698,706,2.907,713,1.065,732,2.907,742,0.816,785,1.218,806,1.022,857,2.424,868,2.033,869,1.81,913,1.879,1116,1.218,1117,1.351,1118,2.424,1119,1.218,1120,4.291,1121,2.547,1122,4.663,1123,3.175,1124,2.609,1125,3.065,1126,3.785,1128,3.534,1129,1.351,1130,4.008,1132,2.686,1133,4.008,1135,2.154,1136,2.154,1137,3.745,1138,1.351,1139,1.351,1140,1.351,1141,2.686,1142,1.351,1143,1.351,1144,2.154,1145,1.351,1146,1.854,1147,1.351,1148,1.351,1149,1.351,1150,2.154,1151,1.351,1152,1.351,1153,1.351,1154,1.351,1155,1.943,1156,1.351,1157,1.351,1158,1.112,1159,2.154,1160,1.351,1161,2.154,1162,2.154,1163,1.351,1164,3.888,1165,3.63,1166,3.888,1167,2.154,1168,1.351,1169,3.569,1170,2.686,1171,4.336,1172,2.686,1173,1.351,1174,1.351,1175,2.154,1176,2.154,1177,1.351,1178,2.154,1179,1.943,1180,2.686,1181,2.154,1182,2.154,1183,4.195,1184,3.888,1185,1.281,1186,3.065,1187,1.351,1188,1.351,1189,1.351,1190,1.351,1191,1.351,1192,1.351,1193,1.163,1194,3.065,1195,1.351,1196,1.351,1197,1.351,1198,2.154,1199,2.154,1200,1.351,1201,1.351,1202,2.686,1203,1.281,1204,1.351,1205,1.351,1206,1.351,1207,1.351,1208,1.351,1209,1.351,1210,1.351,1211,1.351,1212,3.349,1213,1.351,1214,1.351,1215,1.351,1216,1.351,1217,1.218,1218,1.351,1219,2.154,1220,3.065,1221,3.065,1222,2.154,1223,1.351,1224,1.351,1225,2.686,1226,1.351,1227,1.351,1228,2.686,1229,2.686,1230,1.351,1231,2.154,1232,1.351,1233,1.351,1234,1.351,1235,1.351,1236,1.351,1237,1.351,1238,1.351,1239,1.351,1240,1.351,1241,1.351,1242,2.154,1243,1.351,1244,1.281,1245,1.351,1246,1.351,1247,1.351,1248,1.351,1249,1.351,1250,1.351,1251,1.351,1252,1.351,1253,1.351,1254,1.351,1255,1.351,1256,1.351,1257,1.351,1258,1.351,1259,1.351,1260,1.351,1261,2.641,1262,1.351,1263,1.351,1264,2.154,1265,2.686,1266,3.569,1267,1.351,1268,1.351,1269,1.351,1270,1.351,1271,1.351,1272,3.888,1273,2.686,1274,2.154,1275,1.351,1276,3.349,1277,1.351,1278,1.351,1279,1.351,1280,1.351,1281,2.907,1282,3.569,1283,1.351,1284,1.351,1285,1.351,1286,1.351,1287,1.351,1288,1.351,1289,1.351,1290,1.351,1291,1.351,1292,1.351,1293,1.351,1294,1.351,1295,1.351,1296,1.351,1297,1.351,1298,1.351,1299,2.154,1300,1.281,1301,1.351,1302,1.351,1303,1.351,1304,1.351,1305,1.351,1306,1.351,1307,1.351,1308,1.351,1309,1.351,1310,2.154,1311,1.351,1312,1.351,1313,1.351,1314,1.351,1315,1.351,1316,1.351,1317,1.351,1318,1.351,1319,1.351,1320,1.351,1966,2.25,1967,2.25,1968,2.25]],["title/components/PhasesComponent.html",[203,1.17,412,1.714]],["body/components/PhasesComponent.html",[3,0.067,4,0.061,5,0.125,6,1.376,9,0.231,10,1.747,11,0.326,12,1.502,13,0.822,14,0.962,19,0.901,20,3.275,22,0.081,23,0.217,24,1.788,26,0.78,29,1.858,32,0.435,35,2.607,36,2.279,37,3.744,38,1.199,40,1.082,41,1.764,42,0.965,43,0.013,44,1.064,45,0.198,46,0.453,47,1.9,48,0.951,49,2.61,51,3.222,52,1.797,53,1.79,54,1.881,55,1.881,56,1.199,57,2.74,59,2.74,61,2.134,62,1.337,67,0.787,68,1.715,76,2.239,78,0.783,82,4.204,84,3.501,87,1.81,90,1.134,95,2.657,109,1.605,112,0.917,113,1.764,115,1.478,116,0.607,117,2.159,118,0.449,120,1.157,122,1.292,123,1.376,125,1.004,126,1.1,127,1.22,133,0.067,134,0.288,135,1.724,136,0.887,139,2.098,140,2.263,141,2.957,149,2.833,154,2.263,155,3.075,156,3.075,157,3.075,158,3.378,159,3.241,160,2.224,161,1.502,162,1.22,163,0.528,164,0.962,165,0.528,166,0.923,167,2.064,168,1.1,170,0.923,177,1.012,198,0.005,199,0.005,201,1.605,203,1.198,204,3.773,211,2.61,214,1.376,219,1.376,221,1.337,240,1.046,242,0.815,254,0.479,313,0.887,322,3.744,340,1.79,361,0.853,362,1.565,363,1.004,364,1.004,365,1.004,366,1.004,369,2.184,371,0.923,372,3.529,373,3.381,374,1.633,376,1.633,379,3.744,383,1.1,384,1.1,385,2.74,389,2.279,390,1.243,391,1.004,392,1.992,393,1.004,394,1.004,395,0.853,396,1.004,397,1.238,398,1.633,399,0.822,400,1.004,401,0.822,402,1.747,403,1.004,404,0.822,405,1.004,406,0.822,407,1.004,408,0.853,409,1.571,410,0.792,411,1.004,412,2.021,413,1.004,414,0.853,415,1.004,416,0.853,417,1.004,418,1.004,419,0.853,420,1.004,421,1.004,422,1.004,454,3.061,455,1.292,456,1.292,553,1.22,561,1.157,582,2.89,607,1.974,608,1.576,610,2.61,612,2.378,615,2.239,623,2.065,636,2.887,719,4.215,742,1.199,749,2.74,754,2.579,760,1.984,765,1.633,795,1.1,796,2.487,798,1.292,800,2.957,808,1.157,809,2.159,831,1.376,833,1.292,844,2.83,853,1.881,859,2.404,869,1.947,878,2.89,884,3.425,901,1.79,913,2.021,932,1.478,966,1.79,967,1.22,969,1.157,972,1.775,974,2.239,977,4.626,979,1.05,984,1.292,989,1.292,996,2.657,1008,1.984,1012,1.376,1025,2.213,1027,1.376,1101,4.053,1102,4.053,1103,4.053,1104,3.092,1105,4.053,1106,4.053,1107,4.49,1108,4.053,1109,4.595,1110,4.053,1111,4.053,1112,4.053,1113,4.053,1158,1.004,1165,2.508,1325,2.404,1326,1.775,1329,3.744,1332,3.261,1336,2.102,1337,2.102,1338,2.102,1339,2.102,1349,2.404,1351,2.239,1352,3.261,1353,2.102,1354,2.102,1355,2.239,1356,2.83,1360,1.478,1361,1.376,1362,1.376,1364,2.74,1371,1.775,1372,1.478,1373,1.376,1374,3.039,1375,1.775,1378,2.404,1379,2.83,1380,2.239,1381,2.404,1382,2.61,1383,1.478,1384,3.039,1385,2.61,1386,1.605,1387,1.605,1388,1.478,1389,1.478,1399,1.376,1407,2.61,1417,2.102,1418,3.852,1439,2.404,1483,2.887,1490,2.887,1491,1.478,1493,3.299,1509,1.775,1510,2.239,1625,1.775,1627,1.775,1645,1.478,1664,3.649,1669,2.404,1674,2.61,1675,2.61,1682,1.775,1703,2.887,1711,2.404,1716,1.605,1753,1.775,1755,1.775,1756,1.775,1757,1.775,1758,1.775,1770,1.605,1787,1.605,1794,1.605,1801,1.292,1888,2.887,1952,1.376,1953,2.239,1954,1.376,1969,1.775,1970,3.306,1971,3.306,1972,3.306,1973,3.306,1974,3.306,1975,3.306,1976,4.179,1977,3.306,1978,3.306,1979,3.306,1980,3.306,1981,3.306,1982,3.306,1983,3.306,1984,2.887,1985,2.033,1986,2.033,1987,3.306,1988,2.033,1989,3.306,1990,3.306,1991,3.306,1992,2.033,1993,3.306,1994,2.033,1995,3.306,1996,3.306,1997,1.605,1998,2.033,1999,2.033,2000,2.033,2001,2.033,2002,2.033,2003,2.033,2004,2.033,2005,2.033,2006,2.033,2007,3.306,2008,2.033,2009,2.033,2010,2.033,2011,2.033,2012,2.033,2013,2.033,2014,2.033,2015,3.306,2016,3.306,2017,3.306,2018,4.179,2019,2.033,2020,3.306,2021,3.306,2022,3.306,2023,2.033,2024,2.033,2025,2.033,2026,3.306,2027,3.306,2028,2.61,2029,3.306,2030,2.033,2031,2.033,2032,4.815,2033,2.033,2034,3.801,2035,2.033,2036,2.033,2037,2.033,2038,2.033,2039,2.033,2040,3.306,2041,3.306,2042,3.306,2043,2.033,2044,2.033,2045,3.306,2046,2.033,2047,2.033,2048,4.815,2049,4.179,2050,2.033,2051,3.306,2052,2.033,2053,2.033,2054,2.033,2055,2.033,2056,3.306,2057,3.306,2058,3.306,2059,4.815,2060,3.306,2061,3.306,2062,2.033,2063,3.306,2064,3.306,2065,3.306,2066,2.61,2067,3.306]],["title/injectables/QualityAttributeService.html",[0,0.903,34,2.596]],["body/injectables/QualityAttributeService.html",[0,1.288,2,1.692,3,0.144,4,0.129,5,0.129,9,0.189,13,2.356,14,2.758,22,0.174,23,0.382,24,1.67,26,1.375,32,0.929,34,3.705,38,1.469,42,1.318,43,0.013,44,1.233,45,0.237,46,0.69,48,0.766,67,0.953,90,0.929,101,2.857,112,1.205,116,0.755,118,0.96,119,1.421,130,1.522,131,1.756,132,1.632,133,0.144,134,0.615,163,1.71,165,2.037,175,1.288,198,0.009,199,0.009,242,0.737,244,2.082,245,2.523,246,2.543,247,1.329,249,1.47,250,1.895,251,2.447,252,1.895,253,2.101,254,1.892,256,2.015,265,1.286,268,2.523,282,2.653,291,1.895,292,1.907,300,3.327,304,2.351,328,4.469,330,4.181,340,2.351,557,4.469,671,2.758,672,4,673,4.454,676,3.705,679,3.705,681,2.761,685,3.709,686,5.433,687,3.327,688,3.947,689,4.761,690,4.761,691,4.761,692,3.498,695,3.947,696,3.498,703,3.947,704,2.758,706,2.471,707,2.941,708,2.761,711,2.941,713,2.055,715,2.941,716,2.941,1017,2.471,1044,2.606,1063,3.947,1082,5.222,1083,4.237,1087,5.088,1369,3.947,1510,3.947,1984,5.088,2068,5.331,2069,3.792,2070,5.828,2071,6.137,2072,5.828,2073,6.577,2074,6.088,2075,7.029,2076,4.343,2077,5.828,2078,4.343,2079,5.828,2080,4.343,2081,4.343,2082,4.601,2083,4.343,2084,4.343]],["title/injectables/QualityPhaseService.html",[0,0.903,322,2.451]],["body/injectables/QualityPhaseService.html",[0,1.292,2,1.699,3,0.145,4,0.13,5,0.13,9,0.19,19,0.655,22,0.175,23,0.383,24,1.675,26,1.379,32,0.933,38,1.471,42,1.32,43,0.013,44,1.235,45,0.237,46,0.691,67,0.955,76,3.958,90,0.933,101,2.861,103,2.197,112,1.21,116,0.756,118,0.964,119,1.427,130,1.528,131,1.763,132,1.639,133,0.145,134,0.618,163,1.713,165,2.039,175,1.292,198,0.009,199,0.009,200,3.443,242,0.739,244,2.085,245,2.526,246,2.55,247,1.335,249,1.476,250,1.903,251,2.453,252,1.903,253,2.104,254,1.894,256,2.018,265,1.291,268,2.526,282,2.656,291,1.903,292,1.912,294,1.978,300,3.332,304,2.361,322,3.507,328,4.476,330,4.19,340,2.361,557,4.476,607,1.849,671,2.766,672,4.007,673,4.464,676,3.715,679,3.715,681,2.772,685,3.713,686,5.437,687,3.332,688,3.958,689,4.768,690,4.768,691,4.768,692,3.507,695,3.958,696,3.507,703,3.958,704,2.766,706,2.482,707,2.953,708,2.772,711,2.953,713,2.064,715,2.953,716,2.953,884,2.766,1017,2.482,1048,2.617,1065,3.958,1075,5.228,1076,4.249,1081,5.102,1367,4.249,2068,5.338,2082,4.614,2085,5.844,2086,6.591,2087,6.094,2088,7.041,2089,4.361,2090,5.844,2091,4.361,2092,5.844,2093,4.361,2094,4.361,2095,4.361,2096,4.361]],["title/injectables/QualitySaveLogService.html",[0,0.903,323,2.596]],["body/injectables/QualitySaveLogService.html",[0,0.883,2,1.004,3,0.085,4,0.077,5,0.077,9,0.112,11,0.393,22,0.103,23,0.262,24,1.144,26,0.942,31,4.72,32,0.551,38,1.511,42,1.396,43,0.013,44,1.306,45,0.244,46,0.683,67,1.11,78,0.748,90,1.178,101,3.018,112,1.527,116,0.729,118,0.57,119,0.843,130,1.399,131,1.042,132,0.969,133,0.085,134,0.365,163,1.914,165,2.139,175,1.501,198,0.006,199,0.006,229,4.449,232,4.537,233,4.004,240,1.263,242,0.753,243,2.843,244,1.63,245,2.641,246,2.963,247,0.789,249,0.873,250,1.125,251,2.5,252,1.125,253,1.707,254,1.949,256,2.203,258,1.745,265,0.763,268,2.666,282,2.786,291,2.402,292,2.222,299,3.486,300,2.605,304,1.395,323,2.538,328,4.886,330,4.68,340,1.395,557,4.886,628,3.486,671,1.89,672,3.132,673,4.985,676,2.538,679,2.538,681,1.638,685,3.895,686,5.653,687,3.637,688,4.597,689,5.205,690,5.205,691,5.205,692,4.074,695,4.597,696,4.074,703,4.597,704,3.213,706,1.467,707,1.745,708,1.638,711,1.745,713,2.605,715,3.727,716,3.727,764,1.89,860,2.704,998,4.449,1005,4.72,1007,3.486,1017,1.467,1052,1.547,1067,2.704,1068,4.449,1069,2.903,1074,3.486,1364,2.272,2068,5.484,2082,5.36,2097,2.25,2098,3.993,2099,4.887,2100,4.887,2101,4.887,2102,4.887,2103,5.067,2104,5.504,2105,5.504,2106,5.187,2107,5.504,2108,5.504,2109,2.577,2110,3.993,2111,2.577,2112,3.993,2113,2.577,2114,3.993,2115,2.577,2116,3.993,2117,2.577,2118,3.993,2119,2.577,2120,3.993,2121,2.577,2122,3.993,2123,4.449,2124,2.577,2125,3.993,2126,2.577,2127,2.577,2128,2.577,2129,2.577,2130,3.486,2131,2.577,2132,2.577,2133,2.577,2134,2.577,2135,2.577,2136,2.577,2137,2.577,2138,2.577,2139,2.577]],["title/interfaces/QualityattributeModel.html",[70,2.324,228,0.069]],["body/interfaces/QualityattributeModel.html",[3,0.165,4,0.149,5,0.149,9,0.217,11,0.693,19,0.879,22,0.2,23,0.419,43,0.013,45,0.249,46,0.808,52,2.226,70,3.631,72,3.377,73,2.302,74,3.195,88,2.36,90,1.365,128,4.056,129,3.377,133,0.233,141,3.664,142,4.715,143,4.715,144,4.715,145,4.715,146,4.715,147,4.715,148,4.715,149,3.51,150,4.715,151,4.451,152,4.451,198,0.009,199,0.009,228,0.118,230,1.032,235,1.505,236,1.66,241,1.952,242,1.073,358,4.223,607,1.578,608,2.755,1010,1.526,1395,4.473,1396,5.023,1397,4.473,1398,5.115,1399,4.765]],["title/interfaces/QualityphaseModel.html",[59,2.324,228,0.069]],["body/interfaces/QualityphaseModel.html",[3,0.163,4,0.146,5,0.146,9,0.214,11,0.483,19,0.708,20,2.423,22,0.196,23,0.414,43,0.013,45,0.253,46,0.816,52,1.552,59,3.593,133,0.163,141,3.641,149,3.489,198,0.009,199,0.009,228,0.083,230,1.016,235,1.05,236,1.157,241,1.361,242,1.062,358,4.686,608,2.814,719,4.686,800,3.641,1010,1.502,1025,1.912,1101,4.992,1102,4.992,1103,4.992,1104,3.808,1105,4.992,1106,4.992,1107,4.992,1108,4.992,1109,4.992,1110,4.992,1111,4.992,1112,4.992,1113,4.992,1395,3.118,1397,4.964,2034,6.164,2140,4.283,2141,7.372]],["title/interfaces/QualitysavelogModel.html",[228,0.069,243,2.11]],["body/interfaces/QualitysavelogModel.html",[3,0.196,4,0.176,5,0.176,9,0.257,11,0.581,19,0.793,22,0.236,23,0.464,43,0.013,45,0.24,46,0.794,48,0.774,52,1.865,73,1.929,133,0.196,198,0.01,199,0.01,228,0.099,230,1.22,235,1.261,236,1.39,240,1.865,241,1.635,242,1.033,243,3.656,266,1.995,358,4.552,608,2.674,1001,5.328,1010,1.804,1025,2.297,1097,4.477,1104,4.064,1114,5.72,1115,5.72,1395,3.747,1397,4.822,2142,5.146,2143,5.894]],["title/classes/QueryParameter.html",[134,0.578,1217,2.211]],["body/classes/QueryParameter.html",[3,0.075,4,0.067,5,0.067,9,0.098,22,0.09,23,0.236,24,1.464,26,0.847,29,1.877,32,0.768,38,1.192,42,1.298,43,0.013,44,1.283,45,0.199,46,0.422,67,0.587,68,1.464,87,2.574,88,3.161,90,1.79,112,0.625,113,1.817,116,0.212,133,0.075,134,0.884,139,2.289,160,2.988,163,1.685,165,0.933,175,1.683,177,0.689,198,0.005,199,0.005,215,3.221,228,0.038,242,1.031,244,0.667,245,1.465,247,0.689,249,1.516,253,1.029,254,0.531,255,0.846,256,1.464,263,0.789,264,1.625,265,0.667,268,1.175,278,1.281,282,0.762,285,1.452,286,1.452,290,2.7,292,2.186,359,1.281,390,0.846,392,0.846,397,1.326,600,2.639,655,1.163,671,2.418,685,1.066,687,2.642,704,1.066,706,2.908,713,1.066,732,2.908,742,0.817,785,1.219,806,1.023,857,2.766,868,2.034,869,1.81,913,1.88,1116,1.219,1117,1.351,1118,2.424,1119,1.219,1120,4.291,1121,2.548,1122,4.664,1123,3.176,1124,2.61,1125,3.066,1126,3.786,1128,3.535,1129,1.351,1130,4.009,1132,2.687,1133,4.009,1134,1.966,1135,2.155,1136,2.155,1137,4.11,1138,1.351,1139,1.351,1140,1.351,1141,2.687,1142,1.351,1143,1.351,1144,2.155,1145,1.351,1146,1.855,1147,1.351,1148,1.351,1149,1.351,1150,2.155,1151,1.351,1152,1.351,1153,1.351,1154,1.351,1155,1.944,1156,1.351,1157,1.351,1158,1.112,1159,2.155,1160,1.351,1161,2.155,1162,2.155,1163,1.351,1164,3.889,1165,3.631,1166,3.889,1167,2.155,1168,1.351,1169,3.57,1170,2.687,1171,4.337,1172,2.687,1173,1.351,1174,1.351,1175,2.155,1176,2.155,1177,1.351,1178,2.155,1179,1.219,1180,2.687,1181,2.155,1182,1.351,1183,4.196,1184,3.889,1185,1.281,1186,3.066,1187,1.351,1188,1.351,1189,1.351,1190,1.351,1191,1.351,1192,1.351,1193,1.163,1194,3.066,1195,1.351,1196,1.351,1197,1.351,1198,2.155,1199,2.155,1200,1.351,1201,1.351,1202,2.687,1203,1.281,1204,1.351,1205,1.351,1206,1.351,1207,1.351,1208,1.351,1209,1.351,1210,1.351,1211,1.351,1212,3.35,1213,1.351,1214,1.351,1215,1.351,1216,1.351,1217,1.944,1218,2.155,1219,2.155,1220,3.066,1221,3.066,1222,2.155,1223,1.351,1224,1.351,1225,2.687,1226,1.351,1227,1.351,1228,2.687,1229,2.687,1230,1.351,1231,2.155,1232,1.351,1233,1.351,1234,1.351,1235,1.351,1236,1.351,1237,1.351,1238,1.351,1239,1.351,1240,1.351,1241,1.351,1242,2.155,1243,1.351,1244,1.281,1245,1.351,1246,1.351,1247,1.351,1248,1.351,1249,1.351,1250,1.351,1251,1.351,1252,1.351,1253,1.351,1254,1.351,1255,1.351,1256,1.351,1257,1.351,1258,1.351,1259,1.351,1260,1.351,1261,2.642,1262,1.351,1263,1.351,1264,2.155,1265,2.687,1266,3.57,1267,1.351,1268,1.351,1269,1.351,1270,1.351,1271,1.351,1272,3.889,1273,2.687,1274,2.155,1275,1.351,1276,3.35,1277,1.351,1278,1.351,1279,1.351,1280,1.351,1281,2.908,1282,3.57,1283,1.351,1284,1.351,1285,1.351,1286,1.351,1287,1.351,1288,1.351,1289,1.351,1290,1.351,1291,1.351,1292,1.351,1293,1.351,1294,1.351,1295,1.351,1296,1.351,1297,1.351,1298,1.351,1299,2.155,1300,1.281,1301,1.351,1302,1.351,1303,1.351,1304,1.351,1305,1.351,1306,1.351,1307,1.351,1308,1.351,1309,1.351,1310,2.155,1311,1.351,1312,1.351,1313,1.351,1314,1.351,1315,1.351,1316,1.351,1317,1.351,1318,1.351,1319,1.351,1320,1.351,2144,2.252,2145,2.252]],["title/classes/RequestBuilder.html",[134,0.578,255,1.535]],["body/classes/RequestBuilder.html",[3,0.069,4,0.062,5,0.062,9,0.09,22,0.083,23,0.22,24,1.992,26,0.79,29,1.831,32,0.717,38,1.455,42,1.455,43,0.013,44,1.344,45,0.225,46,0.611,67,0.935,68,1.799,87,2.505,88,3.07,90,1.79,112,1.348,113,1.864,116,0.194,133,0.069,134,0.853,139,2.263,160,2.918,163,1.566,165,1.389,175,1.655,177,0.632,198,0.005,199,0.005,215,3.097,228,0.035,242,1.045,244,0.612,245,1.383,247,0.632,249,1.937,253,1.211,254,0.487,255,1.259,256,1.531,263,1.703,264,1.533,265,0.612,268,1.096,278,1.175,282,1.134,285,1.354,286,1.354,290,2.622,292,2.275,359,1.175,390,0.776,392,0.776,397,1.251,600,2.511,655,1.73,671,2,685,2.528,687,2.528,692,2.917,704,0.977,713,0.977,732,3.572,742,0.749,776,2.268,785,1.118,806,0.938,857,3.097,868,1.919,869,1.708,913,1.774,1116,1.118,1117,1.239,1118,3.978,1119,1.118,1120,4.171,1121,3.256,1122,4.675,1123,2.404,1125,2.536,1126,3.883,1129,1.239,1130,3.893,1132,2.01,1133,3.616,1135,2.536,1136,2.01,1137,3.616,1138,1.239,1139,1.239,1140,1.239,1141,2.536,1142,1.239,1143,1.239,1144,2.01,1145,1.239,1146,1.73,1147,1.239,1148,1.239,1149,1.239,1150,2.01,1151,1.239,1152,1.239,1153,1.239,1154,1.239,1155,1.813,1156,1.239,1157,1.239,1158,1.02,1159,2.01,1160,1.239,1161,2.01,1162,2.01,1163,1.239,1164,3.767,1165,3.599,1166,3.767,1167,2.01,1168,1.239,1169,3.433,1170,2.536,1171,4.242,1172,2.536,1173,1.239,1174,1.239,1175,2.01,1176,2.01,1177,1.239,1178,2.01,1179,1.118,1180,2.536,1181,2.01,1182,1.239,1183,4.092,1184,3.767,1185,1.175,1186,2.917,1187,1.239,1188,1.239,1189,1.239,1190,1.239,1191,1.239,1192,1.239,1193,1.067,1194,2.917,1195,1.239,1196,1.239,1197,1.239,1198,2.01,1199,2.01,1200,1.239,1201,1.239,1202,2.536,1203,1.175,1204,1.239,1205,1.239,1206,1.239,1207,1.239,1208,1.239,1209,1.239,1210,1.239,1211,1.239,1212,3.206,1213,1.239,1214,1.239,1215,1.239,1216,1.239,1217,1.118,1218,1.239,1219,2.01,1220,2.917,1221,2.917,1222,2.01,1223,1.239,1224,1.239,1225,2.536,1226,1.239,1227,1.239,1228,2.536,1229,2.536,1230,1.239,1231,2.01,1232,1.239,1233,1.239,1234,1.239,1235,1.239,1236,1.239,1237,1.239,1238,1.239,1239,1.239,1240,1.239,1241,1.239,1242,2.01,1243,2.01,1244,2.766,1245,2.01,1246,2.536,1247,2.536,1248,2.536,1249,2.536,1250,2.536,1251,3.206,1252,2.01,1253,1.239,1254,1.239,1255,2.01,1256,1.239,1257,1.239,1258,2.01,1259,1.239,1260,1.239,1261,2.852,1262,2.01,1263,2.01,1264,2.917,1265,2.536,1266,3.433,1267,1.239,1268,1.239,1269,1.239,1270,1.239,1271,1.239,1272,3.767,1273,2.536,1274,2.01,1275,1.239,1276,3.206,1277,1.239,1278,1.239,1279,1.239,1280,1.239,1281,2.766,1282,3.433,1283,1.239,1284,1.239,1285,1.239,1286,2.01,1287,1.239,1288,2.01,1289,2.01,1290,2.01,1291,1.239,1292,1.239,1293,1.239,1294,1.239,1295,1.239,1296,1.239,1297,1.239,1298,1.239,1299,2.01,1300,1.175,1301,1.239,1302,1.239,1303,1.239,1304,1.239,1305,1.239,1306,1.239,1307,1.239,1308,1.239,1309,1.239,1310,2.01,1311,1.239,1312,1.239,1313,1.239,1314,1.239,1315,1.239,1316,1.239,1317,1.239,1318,1.239,1319,1.239,1320,1.239,2146,3.349,2147,2.065,2148,3.349,2149,2.065,2150,2.065,2151,2.065,2152,2.065,2153,2.065,2154,2.065,2155,2.065,2156,2.065,2157,2.065,2158,1.803,2159,2.065,2160,2.065,2161,2.065,2162,2.065]],["title/pipes/SafePipe.html",[287,1.782,428,2.766]],["body/pipes/SafePipe.html",[3,0.179,4,0.161,5,0.161,9,0.292,10,2.646,11,0.752,12,3.312,13,2.18,19,0.879,26,1.272,29,1.8,38,1.08,40,1.764,41,1.402,42,1.08,43,0.013,44,1.367,45,0.161,46,0.508,48,0.881,56,1.572,61,2.519,67,1.096,73,2.193,99,2.949,116,0.631,118,1.192,133,0.179,134,0.764,135,1.742,136,2.353,175,1.192,198,0.01,199,0.01,242,0.992,287,2.925,369,2.269,371,2.449,389,3.714,428,4.539,434,4.257,435,3.068,742,1.956,1025,2.612,1158,3.603,1165,3.172,1344,4.539,1684,6.024,1685,6.315,1824,3.651,1866,5.852,1932,4.257,1942,5.292,1946,5.852,2163,5.852,2164,4.708,2165,7.294,2166,6.703,2167,6.703,2168,5.392,2169,7.63,2170,6.703,2171,6.703,2172,5.392,2173,6.703,2174,6.703,2175,5.392,2176,5.392]],["title/components/SidenavComponent.html",[203,1.17,414,1.714]],["body/components/SidenavComponent.html",[3,0.121,4,0.108,5,0.108,9,0.284,10,2.365,11,0.642,12,2.961,19,0.926,22,0.146,24,1.043,26,1.217,29,1.919,32,0.779,38,1.2,40,1.688,41,1.341,42,0.729,43,0.013,44,1.123,45,0.108,46,0.343,47,1.478,48,1.018,51,3.368,52,2.063,56,1.033,61,2.45,62,2.085,67,0.843,68,1.868,78,1.469,79,4.74,89,2.836,95,3.279,112,1.431,116,0.614,118,0.804,133,0.121,134,0.515,135,1.341,136,1.588,139,1.478,161,2.961,198,0.008,199,0.008,203,1.717,221,2.636,240,1.632,241,1.431,294,1.746,313,1.588,361,1.528,362,2.441,363,1.797,364,1.797,365,1.797,366,1.797,371,1.652,372,3.968,373,3.802,374,2.548,376,2.548,389,2.441,390,1.939,391,1.797,392,2.45,393,1.797,394,1.797,395,1.528,396,1.797,397,1.775,398,2.548,399,1.471,400,1.797,401,1.471,402,1.871,403,1.797,404,1.471,405,1.797,406,1.471,407,1.797,408,2.165,409,3.106,410,1.418,411,1.797,412,1.528,413,1.797,414,2.737,415,1.797,416,1.528,417,1.797,418,1.797,419,1.528,420,1.797,421,1.797,422,1.797,460,2.313,491,2.464,492,2.646,546,1.97,564,3.279,566,1.97,583,4.072,584,3.913,596,3.75,615,3.493,627,4.144,739,5.245,754,2.342,771,4.415,783,3.493,791,4.144,795,1.97,796,3.095,803,2.935,808,2.071,809,3.555,811,2.935,814,2.071,860,3.493,878,3.096,879,4.503,966,2.793,967,2.184,968,3.279,969,3.41,979,1.88,980,2.313,993,3.177,996,2.313,997,3.279,1015,3.913,1193,2.664,1329,4.411,1389,2.646,1462,5.147,1604,4.072,1605,4.072,1606,5.147,1608,5.643,1639,2.646,1649,3.493,1705,3.75,1779,2.646,1800,2.873,1801,2.313,1804,2.873,1813,2.873,1841,2.464,1875,4.072,1876,4.072,1887,5.692,1894,4.503,1901,4.731,1997,2.873,2066,2.873,2177,3.177,2178,6.519,2179,6.009,2180,6.519,2181,5.158,2182,5.992,2183,5.158,2184,5.692,2185,5.692,2186,3.639,2187,3.639,2188,5.158,2189,5.158,2190,5.158,2191,5.158,2192,3.639,2193,5.692,2194,6.241,2195,6.241,2196,5.692,2197,3.639,2198,4.503,2199,4.503,2200,4.503,2201,4.503,2202,4.503,2203,3.177,2204,3.639,2205,2.873,2206,3.177]],["title/components/SplashScreenComponent.html",[203,1.17,416,1.714]],["body/components/SplashScreenComponent.html",[3,0.119,4,0.107,5,0.107,9,0.222,10,1.854,11,0.701,19,0.839,22,0.205,23,0.335,26,1.206,29,2.045,32,0.769,38,1.426,40,1.673,41,1.85,42,0.72,43,0.013,44,1.115,45,0.193,46,0.338,47,1.465,48,0.852,56,1.299,67,0.587,68,1.465,74,2.944,89,2.419,90,1.387,91,4.035,112,1.798,116,0.481,117,3.074,118,0.794,133,0.119,134,0.509,135,0.934,136,1.568,167,3.383,198,0.008,199,0.008,203,1.705,221,2.066,240,1.617,242,0.646,265,1.514,267,2.525,313,1.568,361,1.508,362,2.419,363,1.775,364,1.775,365,1.775,366,1.775,371,1.631,372,3.96,373,3.891,374,2.525,376,2.525,389,2.419,390,1.921,391,1.775,392,2.436,393,1.775,394,1.775,395,1.508,396,1.775,397,1.064,398,2.525,399,1.452,400,1.775,401,1.452,402,1.854,403,1.775,404,1.452,405,1.775,406,2.406,407,1.775,408,1.508,409,1.35,410,2.319,411,1.775,412,1.508,413,1.775,414,1.508,415,1.775,416,2.721,417,4.076,418,1.775,419,1.508,420,1.775,421,1.775,422,1.775,508,2.836,517,5.782,544,4.525,546,3.222,608,2.121,623,1.992,742,1.854,749,3.689,754,2.944,768,4.035,796,3.538,800,1.775,803,4.334,807,3.068,808,2.044,809,2.64,813,3.068,814,3.386,821,4.463,859,3.716,869,1.452,871,3.068,885,3.716,913,2.146,966,3.708,967,3.068,968,3.782,969,3.386,979,1.856,980,2.284,984,3.249,989,5.06,997,2.284,1185,2.044,1193,3.348,1261,2.419,1364,2.909,1398,2.612,1414,4.395,1417,3.249,1438,4.463,1465,3.716,1478,3.716,1493,5.117,1523,2.612,1559,3.136,1630,4.035,1647,4.326,1657,4.697,1684,4.035,1726,2.612,1732,4.035,1741,2.836,1788,2.836,1801,2.284,1820,4.326,1841,2.433,2205,4.035,2207,6.394,2208,3.136,2209,6.214,2210,5.95,2211,5.111,2212,5.95,2213,5.95,2214,5.111,2215,5.95,2216,3.592,2217,5.111,2218,5.111,2219,5.111,2220,7.118,2221,3.592,2222,3.592,2223,5.111,2224,5.111,2225,5.111,2226,5.111,2227,3.592,2228,5.111,2229,3.592,2230,3.592,2231,3.592,2232,3.592,2233,5.111,2234,3.592,2235,3.592,2236,5.195,2237,3.592,2238,3.592,2239,5.111,2240,3.592,2241,3.592,2242,3.592,2243,3.592,2244,3.592,2245,3.136,2246,3.592,2247,3.592,2248,3.592,2249,3.592,2250,5.111,2251,3.592,2252,3.592]],["title/injectables/ThemeService.html",[0,0.903,1328,2.766]],["body/injectables/ThemeService.html",[0,1.498,2,2.139,3,0.182,4,0.164,5,0.164,9,0.295,11,0.756,19,0.76,22,0.22,26,1.599,29,1.974,32,1.573,38,1.358,40,2.218,42,1.1,43,0.013,44,1.029,45,0.164,46,0.517,47,1.942,48,0.89,56,1.358,61,2.548,67,0.897,68,1.573,78,1.439,112,1.88,116,0.517,118,1.214,131,2.219,132,2.063,133,0.182,134,0.777,135,1.427,198,0.01,199,0.01,220,3.857,595,5.441,598,5.351,602,5.351,623,2.641,668,5.918,669,6.228,754,3.078,758,5.2,863,6.062,868,3.339,869,2.74,871,4.068,882,4.59,913,2.845,1328,4.59,1407,5.351,1510,4.59,1669,4.928,1711,4.928,2253,4.793,2254,5.918,2255,5.489,2256,6.778,2257,5.489,2258,6.778,2259,6.778]],["title/components/ToolbarComponent.html",[203,1.17,419,1.714]],["body/components/ToolbarComponent.html",[3,0.073,4,0.065,5,0.065,9,0.24,10,1.827,11,0.496,12,2.287,13,1.422,19,0.911,22,0.088,23,0.231,24,1.77,26,0.83,29,2.193,32,0.47,35,2.383,36,2.383,38,1.491,40,1.151,41,1.529,42,0.882,43,0.013,44,1.033,45,0.211,46,0.414,47,1.947,48,1.042,51,3.316,52,1.861,53,1.904,54,2.002,55,2.002,56,1.009,61,2.554,62,1.422,65,2.557,67,0.961,68,2.058,74,2.671,76,4.601,78,1.459,85,3.071,89,2.923,90,1.258,91,3.975,102,2.236,112,1.781,113,0.914,116,0.624,117,2.274,118,0.485,125,1.084,126,1.188,133,0.073,134,0.311,135,1.606,136,0.958,139,1.008,161,1.597,167,2.174,198,0.005,199,0.005,203,1.579,204,2.865,220,1.249,235,0.753,239,3.475,240,1.113,241,0.976,242,0.877,273,0.997,294,1.705,313,0.958,361,0.921,362,1.665,363,2.174,364,1.084,365,1.084,366,1.084,369,1.191,371,0.997,372,3.595,373,3.444,374,1.738,376,1.738,381,1.596,385,3.347,386,4.396,389,2.383,390,1.322,391,1.084,392,1.893,393,1.084,394,1.084,395,0.921,396,1.084,397,1.632,398,1.738,399,0.887,400,1.084,401,0.887,402,1.276,403,1.084,404,0.887,405,1.084,406,0.887,407,1.084,408,1.477,409,2.699,410,0.855,411,1.084,412,0.921,413,1.084,414,0.921,415,1.084,416,0.921,417,1.084,418,1.084,419,2.114,420,2.722,421,1.084,422,1.084,460,1.395,468,1.916,469,3.843,491,1.486,492,1.596,544,2.236,546,1.188,547,1.916,561,1.249,566,1.188,584,3.022,591,3.983,595,4.183,596,2.557,598,1.733,602,1.733,607,1.113,615,3.983,616,3.071,617,2.382,618,1.596,623,2.292,627,3.738,669,2.777,739,4.601,742,1.276,749,2.865,754,2.671,758,2.382,771,2.382,783,2.382,790,2.557,791,3.201,795,3.184,796,3.038,803,2.002,806,0.997,807,2.642,808,1.249,809,2.847,811,1.249,812,1.486,813,1.317,814,1.249,826,3.843,827,3.843,829,4.396,830,1.733,832,5.393,833,2.798,834,4.396,848,2.777,856,4.396,857,3.184,858,2.557,859,2.557,860,2.382,863,3.975,865,3.071,866,2.777,867,4.396,868,1.597,869,1.422,871,1.317,874,4.396,876,5.134,877,3.071,882,2.382,883,3.071,884,1.665,885,3.661,886,4.348,887,4.396,899,1.916,952,1.916,953,3.071,954,1.733,957,4.811,958,1.916,959,1.916,963,1.916,966,1.904,967,2.111,968,2.798,969,3.136,973,1.916,992,1.596,996,1.395,1015,3.022,1193,1.817,1261,1.039,1327,4.348,1328,4.348,1329,3.853,1334,5.069,1335,3.071,1347,3.071,1364,2.505,1365,1.733,1366,1.733,1389,1.596,1399,1.486,1401,3.843,1406,5.134,1410,3.071,1411,3.071,1462,3.975,1468,3.071,1484,3.071,1510,1.486,1543,4.396,1604,2.777,1605,2.777,1606,3.975,1608,4.643,1630,1.733,1649,2.382,1705,3.661,1712,2.777,1726,1.596,1779,3.2,1781,2.777,1782,2.777,1801,3.503,1813,1.733,1814,1.916,1816,1.916,1820,1.596,1821,1.733,1824,1.486,1840,1.733,1841,1.486,1846,1.733,1875,2.777,1876,2.777,1901,3.475,1917,3.071,1942,3.975,1997,1.733,2034,4.643,2066,1.733,2071,3.071,2179,3.843,2184,4.396,2185,4.396,2193,4.396,2194,5.134,2195,5.134,2196,4.396,2198,3.071,2199,3.071,2200,3.071,2201,3.071,2202,3.071,2203,1.916,2205,1.733,2206,3.071,2209,3.071,2245,1.916,2254,3.843,2260,1.916,2261,5.035,2262,4.402,2263,3.517,2264,4.402,2265,4.402,2266,4.402,2267,4.402,2268,6.622,2269,5.51,2270,3.517,2271,3.517,2272,3.517,2273,2.194,2274,3.517,2275,3.517,2276,2.194,2277,2.194,2278,3.517,2279,3.517,2280,2.194,2281,2.194,2282,2.194,2283,5.035,2284,2.194,2285,2.194,2286,5.881,2287,2.194,2288,5.035,2289,3.517,2290,3.517,2291,3.517,2292,2.194,2293,2.194,2294,2.194,2295,2.194,2296,3.517,2297,2.194,2298,3.517,2299,3.517,2300,3.517,2301,3.517,2302,3.517,2303,3.517,2304,5.035,2305,2.194,2306,2.194,2307,2.194,2308,2.194,2309,2.194,2310,3.517,2311,2.194,2312,2.194,2313,2.194,2314,3.517,2315,3.517,2316,2.194,2317,2.194,2318,2.194,2319,4.402,2320,2.194,2321,3.517,2322,2.194,2323,3.517,2324,2.194,2325,2.194,2326,2.194,2327,2.194,2328,2.194,2329,2.194,2330,2.194,2331,2.194,2332,2.194,2333,2.194,2334,2.194,2335,2.194,2336,2.194]],["title/interfaces/Update$Params.html",[228,0.069,2123,2.766]],["body/interfaces/Update$Params.html",[3,0.165,4,0.148,5,0.148,9,0.216,11,0.627,19,0.904,22,0.199,23,0.418,41,1.826,43,0.013,45,0.19,47,1.424,48,1.006,56,0.995,67,0.812,73,2.424,78,1.193,99,2.009,101,2.737,103,1.868,108,4.465,113,1.292,116,0.738,119,1.626,130,1.741,133,0.211,135,1.926,139,1.424,163,1.826,164,3.506,165,1.991,175,1.407,177,1.521,198,0.009,199,0.009,228,0.084,230,1.029,231,2.828,232,2.828,233,3.159,235,1.362,236,1.502,237,3.324,240,2.423,241,2.055,242,0.936,243,3.826,244,1.885,245,2.083,246,3.232,247,1.521,248,2.69,249,1.682,250,2.168,251,2.673,252,2.168,253,2.123,254,1.172,255,1.868,256,1.424,257,2.69,258,3.365,259,2.567,260,3.288,262,2.567,263,2.23,264,1.803,265,1.471,266,2.378,267,2.454,268,2.299,269,2.567,270,2.567,271,2.168,273,2.256,275,2.69,276,2.69,279,2.982,280,2.982,281,2.69,282,2.155,283,2.69,284,2.69,285,2.009,286,2.009,287,2.168,288,2.69,289,3.803,290,2.009,291,2.168,292,1.626,293,2.69,294,1.682,295,2.69,296,2.69,297,2.454,1022,2.982,2123,4.757,2130,4.338,2337,3.923,2338,4.338,2339,4.338,2340,6.366,2341,4.969]],["title/coverage.html",[2342,4.88]],["body/coverage.html",[0,1.778,1,2.462,5,0.101,6,3.318,7,2.673,8,2.956,31,2.293,34,2.152,36,1.602,37,2.032,43,0.013,45,0.101,59,1.927,70,1.927,113,0.88,122,2.152,125,1.673,128,2.152,129,3.898,134,0.988,167,2.42,171,4.533,198,0.007,199,0.007,200,3.868,203,2.237,219,2.293,228,0.142,229,2.293,231,4.442,232,4.273,233,4.436,234,3.868,243,1.749,254,1.488,255,1.273,256,1.808,273,3.462,287,2.138,300,1.602,301,3.868,302,3.868,308,2.293,320,2.152,321,2.032,322,2.032,323,2.152,361,1.421,367,2.956,395,1.421,397,1.451,399,1.369,401,1.369,402,1.228,404,1.369,406,1.369,408,1.421,409,1.273,410,1.319,412,1.421,414,1.421,416,1.421,419,1.421,427,2.293,428,2.293,430,2.673,439,2.462,475,2.462,479,2.956,482,2.673,491,2.293,502,2.462,517,2.673,525,2.673,561,1.927,562,2.956,645,2.032,670,2.956,672,1.927,683,2.293,698,2.293,720,2.956,721,2.956,737,2.956,738,3.868,820,2.956,838,2.462,901,1.833,903,2.673,904,2.673,966,4.609,976,2.462,998,2.293,999,3.868,1005,2.293,1008,2.032,1009,2.956,1010,2.533,1014,3.868,1016,2.462,1018,3.786,1019,2.293,1024,3.989,1039,2.462,1041,2.462,1043,2.462,1044,3.786,1045,2.462,1046,2.462,1047,2.462,1048,3.786,1049,2.462,1050,2.462,1051,2.462,1052,3.786,1053,2.462,1054,2.462,1061,2.462,1063,2.293,1065,2.293,1067,2.293,1068,2.293,1069,3.562,1070,3.868,1075,2.293,1076,3.562,1077,3.868,1082,2.293,1083,3.562,1084,3.868,1088,4.272,1116,1.833,1118,3.989,1119,3.989,1120,1.833,1126,1.833,1146,1.749,1155,1.833,1179,1.833,1203,1.927,1217,1.833,1321,2.956,1327,2.293,1328,2.293,1329,2.032,1396,2.293,1400,2.956,1414,2.032,1415,2.956,1443,4.277,1444,2.956,1461,2.462,1524,2.673,1525,3.868,1526,2.673,1551,2.673,1622,2.956,1648,3.868,1652,3.868,1653,2.956,1775,2.956,1777,2.956,1818,5.508,1848,2.956,1870,3.868,1873,2.956,1886,2.956,1903,2.956,1913,2.956,1919,2.956,1920,2.956,1933,2.956,1951,4.272,1969,2.956,2028,2.673,2068,4.185,2069,2.956,2074,2.673,2087,2.673,2097,2.956,2103,2.462,2106,2.673,2123,2.293,2140,2.956,2142,2.956,2163,2.956,2164,2.956,2177,2.956,2207,2.956,2208,2.956,2253,2.956,2260,2.956,2337,3.868,2342,2.956,2343,3.386,2344,3.386,2345,3.386,2346,6.308,2347,8.044,2348,8.044,2349,7.722,2350,7.368,2351,6.308,2352,3.386,2353,3.386,2354,3.386,2355,4.277,2356,4.899,2357,5.756,2358,5.756,2359,3.386,2360,3.386,2361,3.386,2362,4.899,2363,5.756,2364,3.386,2365,3.386,2366,4.899,2367,3.386,2368,3.386,2369,3.386,2370,6.693,2371,5.756,2372,3.386,2373,3.386,2374,4.899,2375,3.386,2376,3.386,2377,6.693,2378,3.386,2379,3.386,2380,3.386,2381,3.386]],["title/dependencies.html",[312,3.329,2382,2.686]],["body/dependencies.html",[43,0.013,118,1.37,119,2.027,198,0.011,199,0.011,312,4.196,383,3.947,384,3.354,434,5.756,435,4.149,474,4.504,507,5.409,508,4.891,512,5.409,514,5.409,515,5.409,553,3.718,1617,5.409,1728,4.891,2383,8.452,2384,6.195,2385,7.29,2386,6.195,2387,6.195,2388,6.195,2389,6.195,2390,6.195,2391,6.195,2392,6.195,2393,6.195,2394,6.195]],["title/miscellaneous/functions.html",[2395,2.163,2396,4.292]],["body/miscellaneous/functions.html",[9,0.324,13,1.936,14,2.266,19,0.95,20,3.07,22,0.131,31,3.243,41,2.166,42,1.517,43,0.012,44,1.419,45,0.226,46,0.713,47,2.135,48,1.097,52,1.038,56,1.517,57,1.867,62,2.286,67,1.218,73,2.034,78,1.491,99,3.012,101,3.153,103,2.8,108,2.086,163,2.104,165,1.937,198,0.007,199,0.007,219,3.243,229,3.243,231,3.927,232,3.537,233,3.594,234,3.78,237,3.526,240,2.311,241,1.977,242,1.023,244,2.417,245,2.648,253,2.393,259,3.848,260,4.18,261,2.59,262,3.848,263,2.835,264,2.703,265,2.206,266,2.821,267,3.68,268,2.648,269,3.848,270,3.848,271,3.251,272,2.386,274,2.865,402,2.255,409,2.125,430,2.59,520,2.865,525,3.78,566,1.777,645,2.874,683,3.243,692,4.471,698,3.243,884,1.553,998,3.243,999,3.78,1000,2.59,1002,2.865,1003,2.865,1005,3.243,1014,2.59,1015,1.969,1020,2.865,1025,2.203,1068,3.243,1069,2.386,1070,3.78,1071,2.865,1075,3.243,1076,2.386,1077,3.78,1078,4.18,1079,2.865,1082,3.243,1083,2.386,1084,3.78,1085,2.865,1648,2.59,1650,2.865,1870,2.59,1871,2.865,2074,3.78,2087,3.78,2103,3.481,2106,3.78,2123,3.243,2337,3.78,2338,2.865,2339,2.865,2395,2.086,2396,2.865,2397,5.654,2398,3.281,2399,5.654,2400,3.281,2401,3.281,2402,3.281]],["title/index.html",[22,0.136,2403,3.402,2404,3.402]],["body/index.html",[4,0.173,43,0.01,44,1.088,102,3.69,113,1.509,198,0.01,199,0.01,203,2.16,326,3.69,356,5.068,534,5.068,540,5.068,696,4.523,742,2.106,1013,5.068,1244,4.454,1388,5.099,2103,4.221,2236,5.068,2382,4.583,2405,7.013,2406,5.805,2407,7.536,2408,7.536,2409,5.068,2410,5.805,2411,5.805,2412,8.014,2413,8.237,2414,5.805,2415,5.805,2416,5.805,2417,5.805,2418,5.805,2419,5.805,2420,5.805,2421,5.805,2422,7.536,2423,5.805,2424,5.805,2425,5.805,2426,5.805,2427,5.805,2428,7.013,2429,7.013,2430,7.827,2431,5.805,2432,7.013,2433,7.013,2434,5.805,2435,8.143,2436,5.805,2437,5.805,2438,5.805,2439,7.013,2440,5.805,2441,5.805,2442,5.805,2443,7.536,2444,5.805,2445,5.805,2446,5.805,2447,4.583,2448,5.805,2449,5.805]],["title/modules.html",[311,3.554]],["body/modules.html",[43,0.011,198,0.011,199,0.011,310,4.791,311,4.189,354,4.463,429,4.463,435,4.3,2450,7.557,2451,7.557,2452,7.945,2453,6.59,2454,6.59]],["title/interfaces/optionType.html",[228,0.069,1396,2.766]],["body/interfaces/optionType.html",[3,0.188,4,0.169,5,0.169,9,0.247,11,0.735,19,0.908,22,0.227,23,0.454,43,0.013,45,0.242,52,2.362,70,3.233,72,4.687,73,2.443,74,3.39,88,2.689,90,1.704,128,4.94,129,3.847,133,0.248,141,2.806,142,3.611,143,3.611,144,3.611,145,3.611,146,3.611,147,3.611,148,3.611,149,2.689,150,3.611,151,3.409,152,3.409,198,0.01,199,0.01,228,0.126,230,1.176,235,1.597,236,1.761,241,2.071,242,1.06,358,3.409,607,2.19,608,2.607,1010,1.739,1395,4.746,1396,5.055,1397,3.611,1398,4.13,1399,3.847]],["title/overview.html",[2447,4.413]],["body/overview.html",[2,2.075,34,4.61,43,0.013,198,0.01,199,0.01,230,1.102,300,3.432,309,3.385,310,6.148,311,3.385,312,3.606,313,2.323,314,4.203,315,4.203,316,4.203,317,3.871,318,4.648,319,4.648,320,4.61,321,4.353,322,4.353,323,4.61,324,5.25,325,3.871,326,3.385,354,5.879,361,3.396,362,2.52,395,3.045,399,2.932,401,2.932,404,2.932,406,2.932,408,3.045,410,2.826,412,3.045,414,3.045,416,3.045,419,3.045,423,4.648,424,4.648,425,4.648,426,4.648,427,4.911,428,4.911,429,4.911,552,3.871,990,4.648,1117,3.195,1367,3.871,1369,3.606,1393,4.203,1774,4.648,1932,4.203,2028,4.203,2355,4.648,2447,4.203]],["title/properties.html",[23,0.323,2382,2.686]],["body/properties.html",[23,0.44,43,0.012,198,0.011,199,0.011,2409,5.854,2455,6.704]],["title/routes.html",[552,4.064]],["body/routes.html",[43,0.011,198,0.011,199,0.011,552,4.898]],["title/miscellaneous/typealiases.html",[2395,2.163,2456,4.916]],["body/miscellaneous/typealiases.html",[22,0.261,38,1.308,43,0.012,45,0.195,165,1.697,198,0.011,199,0.011,251,3.156,253,2.269,254,1.54,1165,3.09,2158,6.563,2395,4.151,2457,6.529,2458,6.529,2459,7.516,2460,6.529,2461,6.529]],["title/miscellaneous/variables.html",[2395,2.163,2462,4.292]],["body/miscellaneous/variables.html",[22,0.264,43,0.012,90,1.412,112,1.831,113,1.716,198,0.011,199,0.011,1118,3.574,1119,4.095,1146,3.41,1155,4.095,2395,4.196,2462,5.763,2463,6.6]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionType.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":167,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2455,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":2394,"title":{},"body":{"dependencies.html":{}}}],["0.2em",{"_index":812,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["0.3em",{"_index":1628,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["0.5",{"_index":2218,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["0.5em",{"_index":2066,"title":{},"body":{"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["0.5s",{"_index":2241,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["0.75em",{"_index":1624,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["0.8",{"_index":1839,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["0/1",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["0ms",{"_index":2325,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["0px",{"_index":1780,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["1",{"_index":1364,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"injectables/QualitySaveLogService.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["1.2em",{"_index":1869,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["1.5em",{"_index":810,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["1.ts",{"_index":1070,"title":{},"body":{"interfaces/Fetch_1$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["1/1",{"_index":2349,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2352,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2346,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2348,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2351,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2378,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1817,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["100",{"_index":966,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["1000",{"_index":2234,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["1000px",{"_index":1844,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["100px",{"_index":799,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["10px",{"_index":1815,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["11",{"_index":2031,"title":{},"body":{"components/PhasesComponent.html":{}}}],["12",{"_index":2028,"title":{},"body":{"components/PhasesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["1200px",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["120px",{"_index":2250,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["13/13",{"_index":2375,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":2368,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1842,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["15.0.0",{"_index":2388,"title":{},"body":{"dependencies.html":{}}}],["150px",{"_index":2062,"title":{},"body":{"components/PhasesComponent.html":{}}}],["15em",{"_index":797,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["15px",{"_index":1825,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["16",{"_index":2355,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16.2.0",{"_index":2383,"title":{},"body":{"dependencies.html":{}}}],["16.2.2",{"_index":2410,"title":{},"body":{"index.html":{}}}],["16.2.6",{"_index":2385,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":1885,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["17/17",{"_index":2374,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":819,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{}}}],["1920px",{"_index":1645,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["1a1b2e",{"_index":2237,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["1em",{"_index":795,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["1fr",{"_index":1834,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["1px",{"_index":1807,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["2",{"_index":1367,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"injectables/QualityPhaseService.html":{},"overview.html":{}}}],["2.3.0",{"_index":2392,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":1805,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["2.ts",{"_index":1077,"title":{},"body":{"interfaces/Fetch_2$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["2/2",{"_index":2369,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":976,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"coverage.html":{}}}],["20px",{"_index":815,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["22",{"_index":2042,"title":{},"body":{"components/PhasesComponent.html":{}}}],["22/22",{"_index":2373,"title":{},"body":{"coverage.html":{}}}],["240px",{"_index":1835,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["25",{"_index":1818,"title":{},"body":{"components/LoginPinComponent.html":{},"coverage.html":{}}}],["250ms",{"_index":1811,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["25px",{"_index":1819,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["270px",{"_index":994,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2em",{"_index":1625,"title":{},"body":{"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["3",{"_index":1369,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/QualityAttributeService.html":{},"overview.html":{}}}],["3.ts",{"_index":1084,"title":{},"body":{"interfaces/Fetch_3$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["3/3",{"_index":2380,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2365,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":536,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["3000",{"_index":548,"title":{},"body":{"modules/AppModule.html":{}}}],["30gg",{"_index":2021,"title":{},"body":{"components/PhasesComponent.html":{}}}],["30px",{"_index":1814,"title":{},"body":{"components/LoginPinComponent.html":{},"components/ToolbarComponent.html":{}}}],["32px",{"_index":2242,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["33",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":990,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["35deg",{"_index":2330,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["37",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["370px",{"_index":995,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3em",{"_index":1804,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{}}}],["4",{"_index":1393,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"overview.html":{}}}],["4/4",{"_index":2377,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2366,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":983,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["400px",{"_index":1836,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["401",{"_index":1385,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["40px",{"_index":1781,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/ToolbarComponent.html":{}}}],["45",{"_index":1799,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["48px",{"_index":2206,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["4em",{"_index":2244,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["5",{"_index":1551,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"coverage.html":{}}}],["5/5",{"_index":2350,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":171,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"coverage.html":{}}}],["500",{"_index":817,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["500px",{"_index":992,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/ToolbarComponent.html":{}}}],["50px",{"_index":1800,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{}}}],["5500",{"_index":1560,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["5em",{"_index":1802,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["5px",{"_index":1640,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["6",{"_index":1774,"title":{},"body":{"components/LoginPinComponent.html":{},"overview.html":{}}}],["6/16",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":2379,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2364,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":987,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{}}}],["600px",{"_index":1845,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["60px",{"_index":1813,"title":{},"body":{"components/LoginPinComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["66",{"_index":2363,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1775,"title":{},"body":{"components/LoginPinComponent.html":{},"coverage.html":{}}}],["7.8.0",{"_index":2390,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2371,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":993,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidenavComponent.html":{}}}],["700px",{"_index":991,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["70px",{"_index":973,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["8",{"_index":1776,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["8.0.0",{"_index":2389,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2370,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":1843,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["80px",{"_index":1647,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{}}}],["86",{"_index":2367,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1646,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["9",{"_index":1777,"title":{},"body":{"components/LoginPinComponent.html":{},"coverage.html":{}}}],["9/9",{"_index":2376,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1626,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["9000003/qualityattribute/fetch",{"_index":1087,"title":{},"body":{"interfaces/Fetch_3$Params.html":{},"injectables/QualityAttributeService.html":{}}}],["9000004/qualitysavelog/add",{"_index":299,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/QualitySaveLogService.html":{}}}],["9000004/qualitysavelog/fetch",{"_index":1074,"title":{},"body":{"interfaces/Fetch_1$Params.html":{},"injectables/QualitySaveLogService.html":{}}}],["9000004/qualitysavelog/remove",{"_index":1007,"title":{},"body":{"interfaces/Delete$Params.html":{},"injectables/QualitySaveLogService.html":{}}}],["9000004/qualitysavelog/update",{"_index":2130,"title":{},"body":{"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{}}}],["9000005/qualityphase/fetch",{"_index":1081,"title":{},"body":{"interfaces/Fetch_2$Params.html":{},"injectables/QualityPhaseService.html":{}}}],["9000006/operators/fetch",{"_index":1023,"title":{},"body":{"interfaces/Fetch$Params.html":{},"injectables/OperatorsService.html":{}}}],["900px",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/ToolbarComponent.html":{}}}],["_bodycontent",{"_index":1249,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["_bodycontenttype",{"_index":1250,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["_header",{"_index":1248,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["_path",{"_index":1246,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["_query",{"_index":1247,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["_rooturl",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["abbiano",{"_index":601,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["absolute",{"_index":1821,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/ToolbarComponent.html":{}}}],["abstract",{"_index":1160,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["accedere",{"_index":2198,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["accedi",{"_index":1773,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["accept",{"_index":286,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{}}}],["access",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["accesso",{"_index":1390,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["accessors",{"_index":570,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"injectables/LoadingService.html":{}}}],["accetta",{"_index":923,"title":{},"body":{"components/DashboardComponent.html":{}}}],["account",{"_index":1207,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["acquisire",{"_index":611,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{}}}],["actions",{"_index":1540,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["activatedroute",{"_index":836,"title":{},"body":{"components/DashboardComponent.html":{}}}],["active",{"_index":121,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/IframeInitializerService.html":{}}}],["activeattributes",{"_index":25,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["activeattributesservice",{"_index":1,"title":{"injectables/ActiveAttributesService.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{},"coverage.html":{}}}],["activeelement",{"_index":2049,"title":{},"body":{"components/PhasesComponent.html":{}}}],["activeelement?.classlist.add(\"selected",{"_index":2052,"title":{},"body":{"components/PhasesComponent.html":{}}}],["activeelement?.textcontent",{"_index":2051,"title":{},"body":{"components/PhasesComponent.html":{}}}],["activelanguage",{"_index":1401,"title":{},"body":{"injectables/LanguageService.html":{},"components/ToolbarComponent.html":{}}}],["activelogs",{"_index":1448,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["activephase",{"_index":66,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{}}}],["activephase.m_product_category_id",{"_index":153,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["activephaseservice",{"_index":37,"title":{"injectables/ActivePhaseService.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{},"coverage.html":{}}}],["actual_component",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["actualqualityvalue",{"_index":1565,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["ad",{"_index":16,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{}}}],["ad_client_id",{"_index":1113,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["ad_org_id",{"_index":1112,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["ad_reference_id",{"_index":148,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["ad_user_id",{"_index":1100,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{}}}],["add",{"_index":2103,"title":{},"body":{"injectables/QualitySaveLogService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["add$params",{"_index":229,"title":{"interfaces/Add$Params.html":{}},"body":{"interfaces/Add$Params.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["add$response",{"_index":2104,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["add$response(params",{"_index":2112,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["add(http",{"_index":274,"title":{},"body":{"interfaces/Add$Params.html":{},"miscellaneous/functions.html":{}}}],["add(params",{"_index":2110,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["add(this.http",{"_index":2132,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["add.path",{"_index":277,"title":{},"body":{"interfaces/Add$Params.html":{}}}],["add.ts",{"_index":234,"title":{},"body":{"interfaces/Add$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpath",{"_index":2099,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["adeqa",{"_index":2236,"title":{},"body":{"components/SplashScreenComponent.html":{},"index.html":{}}}],["adesuitetoken",{"_index":164,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{},"interfaces/Update$Params.html":{}}}],["aggiorna",{"_index":21,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["aggiornare",{"_index":108,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["aggiornato",{"_index":2338,"title":{},"body":{"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["aggiungere",{"_index":261,"title":{},"body":{"interfaces/Add$Params.html":{},"components/LoginPinComponent.html":{},"miscellaneous/functions.html":{}}}],["aggiungo",{"_index":917,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aggiunta",{"_index":1555,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["agli",{"_index":1702,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["ai",{"_index":2199,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["al",{"_index":94,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Fetch$Params.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{}}}],["alcun",{"_index":1769,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["aliases",{"_index":2457,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":807,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["all'aggiornamento",{"_index":2341,"title":{},"body":{"interfaces/Update$Params.html":{}}}],["all'applicazione",{"_index":1915,"title":{},"body":{"interfaces/Message.html":{}}}],["all'autenticazione",{"_index":55,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{}}}],["all'avvio",{"_index":91,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["all'eliminazione",{"_index":1006,"title":{},"body":{"interfaces/Delete$Params.html":{}}}],["all'inizializzazione",{"_index":1331,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["all'inserimento",{"_index":298,"title":{},"body":{"interfaces/Add$Params.html":{}}}],["all'interno",{"_index":845,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{}}}],["all'ottenimento",{"_index":1073,"title":{},"body":{"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{}}}],["all'ultimo",{"_index":589,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["alla",{"_index":64,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["alle",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{},"pipes/OptionsPipe.html":{}}}],["allo",{"_index":1426,"title":{},"body":{"injectables/LoadingService.html":{}}}],["allow",{"_index":1300,"title":{},"body":{"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["allowing",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["along",{"_index":1262,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["already",{"_index":352,"title":{},"body":{"modules/ApiModule.html":{}}}],["alreadyserialized",{"_index":1186,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["altre",{"_index":1892,"title":{},"body":{"injectables/LogoutService.html":{}}}],["anche",{"_index":1894,"title":{},"body":{"injectables/LogoutService.html":{},"components/SidenavComponent.html":{}}}],["angular",{"_index":2407,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1728,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2384,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":899,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["angular/cdk/scrolling",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":247,"title":{},"body":{"interfaces/Add$Params.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{}}}],["angular/common/locales/it",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":2386,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":118,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1617,"title":{},"body":{"components/LogViewerComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["angular/material/form",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"components/ToolbarComponent.html":{}}}],["angular/material/snack",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["angular/material/table",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"pipes/SafePipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1727,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["animate('0.25s",{"_index":1734,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["animationduration",{"_index":2215,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["animations",{"_index":1729,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["annulla",{"_index":770,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{}}}],["api",{"_index":340,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/OperatorsService.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["apiconfiguration",{"_index":300,"title":{"injectables/ApiConfiguration.html":{}},"body":{"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{},"overview.html":{}}}],["apiconfiguration.rooturl",{"_index":729,"title":{},"body":{"injectables/BaseService.html":{}}}],["apiconfigurationparams",{"_index":308,"title":{"interfaces/ApiConfigurationParams.html":{}},"body":{"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"coverage.html":{}}}],["apimodule",{"_index":310,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules.html":{},"overview.html":{}}}],["apimodule.forroot",{"_index":307,"title":{},"body":{"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{}}}],["app",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["app.component",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["app/api/models",{"_index":1758,"title":{},"body":{"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["appartiene",{"_index":1768,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["appcomponent",{"_index":361,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1791,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["appena",{"_index":1509,"title":{},"body":{"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["append",{"_index":1123,"title":{},"body":{"classes/HeaderParameter.html":{},"components/LoginPinComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["append(headers",{"_index":1129,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["append(input",{"_index":1676,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["append(params",{"_index":1218,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["append(path",{"_index":1182,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["appendere",{"_index":1678,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["appending",{"_index":1157,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["application",{"_index":534,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["application/json",{"_index":282,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{}}}],["application/x",{"_index":1268,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["appmodule",{"_index":354,"title":{"modules/AppModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":429,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arial",{"_index":2327,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["array",{"_index":87,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["array.join(separator",{"_index":1177,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["array.push(`${key}=${propval",{"_index":1174,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["array.push(key",{"_index":1175,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["array.push(propval",{"_index":1176,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["arraybuffer",{"_index":1293,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["arrays",{"_index":1192,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["artifacts",{"_index":2424,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1953,"title":{},"body":{"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{}}}],["assenza",{"_index":842,"title":{},"body":{"components/DashboardComponent.html":{}}}],["assets",{"_index":1339,"title":{},"body":{"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["assets/i18n",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["atta",{"_index":1670,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["attesa",{"_index":2224,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["attiva",{"_index":57,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"interfaces/FilterQualityattributeModel.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{},"miscellaneous/functions.html":{}}}],["attivi",{"_index":15,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"injectables/MainViewCommunicationsService.html":{}}}],["attivo",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/ToolbarComponent.html":{}}}],["attribute",{"_index":77,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{}}}],["attribute.ad_reference_id",{"_index":184,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.attributedescription",{"_index":185,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.attributename",{"_index":186,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.attributename).filter(attribute",{"_index":1587,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["attribute.attributeseqno",{"_index":187,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.attributevalue",{"_index":188,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{}}}],["attribute.attributevaluetype",{"_index":189,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.c_project_attribute_group_id",{"_index":190,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.groupdescription",{"_index":191,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.groupname",{"_index":192,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.m_product_category_id",{"_index":193,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.m_product_id",{"_index":194,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.optionvalue?.type",{"_index":195,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.optionvalue?.value.tostring",{"_index":178,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attribute.service",{"_index":345,"title":{},"body":{"modules/ApiModule.html":{}}}],["attribute.service.ts",{"_index":2069,"title":{},"body":{"injectables/QualityAttributeService.html":{},"coverage.html":{}}}],["attribute.service.ts:21",{"_index":2076,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["attribute.service.ts:27",{"_index":2081,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["attribute.service.ts:35",{"_index":2080,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["attribute.service.ts:45",{"_index":2078,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["attribute/fetch",{"_index":1083,"title":{},"body":{"interfaces/Fetch_3$Params.html":{},"injectables/QualityAttributeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["attributedescription",{"_index":147,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["attributename",{"_index":152,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"components/LogViewerComponent.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["attributes",{"_index":109,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["attributes.map((attribute",{"_index":1535,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["attributes.service",{"_index":1522,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["attributes.service.ts",{"_index":8,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"coverage.html":{}}}],["attributes.service.ts:109",{"_index":107,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attributes.service.ts:117",{"_index":98,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attributes.service.ts:21",{"_index":39,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attributes.service.ts:37",{"_index":60,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attributes.service.ts:71",{"_index":71,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["attributes.slice",{"_index":1537,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["attributes/active",{"_index":7,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{},"coverage.html":{}}}],["attributeseqno",{"_index":146,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["attributevalue",{"_index":151,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"components/LogViewerComponent.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["attributevaluetype",{"_index":150,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["attributi",{"_index":14,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterQualityattributeModel.html":{},"components/LogViewerComponent.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderQualityattributeModel.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"miscellaneous/functions.html":{}}}],["attributo",{"_index":74,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/JsonList.html":{},"injectables/LoadingService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"interfaces/QualityattributeModel.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/optionType.html":{}}}],["attuale",{"_index":1490,"title":{},"body":{"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["attualmente",{"_index":65,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"components/LogViewerComponent.html":{},"components/ToolbarComponent.html":{}}}],["autenticato",{"_index":616,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/ToolbarComponent.html":{}}}],["autenticazione",{"_index":564,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/SidenavComponent.html":{}}}],["auth",{"_index":124,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/IframeInitializerService.html":{},"injectables/LogoutService.html":{}}}],["authenticationservice",{"_index":320,"title":{"injectables/AuthenticationService.html":{}},"body":{"modules/ApiModule.html":{},"injectables/AuthenticationService.html":{},"components/LoginUsernameComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authinformationsservice",{"_index":36,"title":{"injectables/AuthInformationsService.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["authinfoservice",{"_index":35,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{}}}],["authservice",{"_index":1851,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["auto",{"_index":811,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["automatically",{"_index":2417,"title":{},"body":{"index.html":{}}}],["automaticamente",{"_index":1982,"title":{},"body":{"components/PhasesComponent.html":{}}}],["autorizzato",{"_index":1386,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["aux",{"_index":1567,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["aux.actions",{"_index":1569,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["aux.c_projectphase_quality_log_id",{"_index":1570,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["available",{"_index":2454,"title":{},"body":{"modules.html":{}}}],["avesse",{"_index":576,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["avvenuta",{"_index":1611,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["avvenuto",{"_index":1435,"title":{},"body":{"injectables/LoadingService.html":{}}}],["azioni",{"_index":1539,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["background",{"_index":803,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["backgroundcolor",{"_index":1798,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["bar",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["barra",{"_index":878,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{}}}],["basa",{"_index":1337,"title":{},"body":{"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["base",{"_index":265,"title":{},"body":{"interfaces/Add$Params.html":{},"modules/ApiModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SplashScreenComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["baseservice",{"_index":672,"title":{"injectables/BaseService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{}}}],["baseservice:18",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["basis",{"_index":1803,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["black",{"_index":801,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["blink",{"_index":1553,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["blinklogid",{"_index":1449,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["blob",{"_index":1265,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["block",{"_index":1846,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/ToolbarComponent.html":{}}}],["body",{"_index":165,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["body(value",{"_index":1263,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["boolean",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/LoadingService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["booleana",{"_index":1711,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"injectables/ThemeService.html":{}}}],["booleano",{"_index":870,"title":{},"body":{"components/DashboardComponent.html":{}}}],["booleantranslated",{"_index":1595,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["bootstrap",{"_index":315,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":1779,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["both",{"_index":1201,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["bottom",{"_index":997,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{}}}],["box",{"_index":1827,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["break",{"_index":1608,"title":{},"body":{"components/LogViewerComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["breaking",{"_index":1637,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["browse",{"_index":2452,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"pipes/SafePipe.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":1785,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["build",{"_index":1244,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"index.html":{}}}],["build(options",{"_index":1290,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["builder",{"_index":257,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["builder.ts",{"_index":1119,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:10",{"_index":1964,"title":{},"body":{"classes/ParameterCodec.html":{}}}],["builder.ts:129",{"_index":2144,"title":{},"body":{"classes/QueryParameter.html":{}}}],["builder.ts:134",{"_index":2145,"title":{},"body":{"classes/QueryParameter.html":{}}}],["builder.ts:14",{"_index":1965,"title":{},"body":{"classes/ParameterCodec.html":{}}}],["builder.ts:18",{"_index":1962,"title":{},"body":{"classes/ParameterCodec.html":{}}}],["builder.ts:188",{"_index":1127,"title":{},"body":{"classes/HeaderParameter.html":{}}}],["builder.ts:193",{"_index":1131,"title":{},"body":{"classes/HeaderParameter.html":{}}}],["builder.ts:212",{"_index":2151,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:213",{"_index":2152,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:214",{"_index":2150,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:215",{"_index":2149,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:216",{"_index":2148,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:219",{"_index":2155,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:22",{"_index":1963,"title":{},"body":{"classes/ParameterCodec.html":{}}}],["builder.ts:220",{"_index":2154,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:221",{"_index":2153,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:227",{"_index":2161,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:234",{"_index":2162,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:241",{"_index":2160,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:248",{"_index":2156,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:298",{"_index":2159,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:314",{"_index":2157,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["builder.ts:39",{"_index":1955,"title":{},"body":{"classes/Parameter.html":{}}}],["builder.ts:40",{"_index":1956,"title":{},"body":{"classes/Parameter.html":{}}}],["builder.ts:50",{"_index":1957,"title":{},"body":{"classes/Parameter.html":{}}}],["builder.ts:79",{"_index":1966,"title":{},"body":{"classes/PathParameter.html":{}}}],["builder.ts:84",{"_index":1967,"title":{},"body":{"classes/PathParameter.html":{}}}],["builds",{"_index":1288,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["button",{"_index":802,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["button:hover",{"_index":1806,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["buttons",{"_index":805,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["c",{"_index":2025,"title":{},"body":{"components/PhasesComponent.html":{}}}],["c_bpartner_id",{"_index":1105,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["c_phase_id",{"_index":1101,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["c_project_attribute_group_id",{"_index":145,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["c_projectline_id",{"_index":1111,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["c_projectphase_id",{"_index":1104,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"interfaces/Message.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{}}}],["c_projectphase_quality_log_id",{"_index":1001,"title":{},"body":{"interfaces/Delete$Params.html":{},"interfaces/FilterQualitysavelogModel.html":{},"components/LogViewerComponent.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/QualitysavelogModel.html":{}}}],["calc(100",{"_index":972,"title":{},"body":{"components/DashboardComponent.html":{},"components/PhasesComponent.html":{}}}],["calc(40",{"_index":985,"title":{},"body":{"components/DashboardComponent.html":{}}}],["calc(60",{"_index":988,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cambiamenti",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cambiamento",{"_index":105,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{}}}],["cambiare",{"_index":886,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/LanguageService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/ToolbarComponent.html":{}}}],["cambio",{"_index":18,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{}}}],["campo",{"_index":1704,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["cancel",{"_index":748,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{}}}],["cancellare",{"_index":1690,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["capabilities",{"_index":2441,"title":{},"body":{"index.html":{}}}],["capire",{"_index":876,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["caratteristiche",{"_index":1395,"title":{},"body":{"interfaces/JsonList.html":{},"interfaces/OperatorsModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"interfaces/optionType.html":{}}}],["caratterizzano",{"_index":1512,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["card",{"_index":2048,"title":{},"body":{"components/PhasesComponent.html":{}}}],["card\")[0",{"_index":2046,"title":{},"body":{"components/PhasesComponent.html":{}}}],["card\")[0].classlist.remove(\"selected",{"_index":2047,"title":{},"body":{"components/PhasesComponent.html":{}}}],["caricamenti",{"_index":1438,"title":{},"body":{"injectables/LoadingService.html":{},"components/SplashScreenComponent.html":{}}}],["caricamento",{"_index":1417,"title":{},"body":{"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SplashScreenComponent.html":{}}}],["carta",{"_index":2054,"title":{},"body":{"components/PhasesComponent.html":{}}}],["carte",{"_index":1971,"title":{},"body":{"components/PhasesComponent.html":{}}}],["case",{"_index":1606,"title":{},"body":{"components/LogViewerComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["casella",{"_index":1681,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["cases",{"_index":1190,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["caso",{"_index":1344,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"pipes/SafePipe.html":{}}}],["categoria",{"_index":2072,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["center",{"_index":544,"title":{},"body":{"modules/AppModule.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["cerca",{"_index":572,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["change",{"_index":2419,"title":{},"body":{"index.html":{}}}],["changeactivelanguage",{"_index":2270,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["changeactivelanguage(language",{"_index":2272,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["changedetectorref",{"_index":832,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["changedetectorref.detectchanges",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["changelanguage",{"_index":1402,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage(language",{"_index":1404,"title":{},"body":{"injectables/LanguageService.html":{}}}],["characterdata",{"_index":2013,"title":{},"body":{"components/PhasesComponent.html":{}}}],["che",{"_index":11,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"interfaces/optionType.html":{}}}],["check",{"_index":2446,"title":{},"body":{"index.html":{}}}],["checked",{"_index":2319,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["checkmark:before",{"_index":2326,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["chiamata",{"_index":1703,"title":{},"body":{"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["chiamate",{"_index":262,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["chiaro",{"_index":598,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["chiave",{"_index":1941,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["chiavi",{"_index":1939,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["childlist",{"_index":2012,"title":{},"body":{"components/PhasesComponent.html":{}}}],["chiusura",{"_index":760,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{}}}],["choice",{"_index":2438,"title":{},"body":{"index.html":{}}}],["ci",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["cifra",{"_index":1707,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["class",{"_index":134,"title":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["classe",{"_index":10,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["classes",{"_index":1117,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"overview.html":{}}}],["clear",{"_index":568,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{}}}],["clearuser",{"_index":569,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["cli",{"_index":2408,"title":{},"body":{"index.html":{}}}],["clicca",{"_index":1981,"title":{},"body":{"components/PhasesComponent.html":{}}}],["cliccato",{"_index":1990,"title":{},"body":{"components/PhasesComponent.html":{}}}],["cluster_apimodule",{"_index":318,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_apimodule_providers",{"_index":319,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1013,"title":{},"body":{"interfaces/ErrorModel.html":{},"index.html":{}}}],["codec",{"_index":1139,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["codice",{"_index":104,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{}}}],["colonne",{"_index":1488,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["color",{"_index":800,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{},"components/SplashScreenComponent.html":{}}}],["column",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{}}}],["column.attributename",{"_index":1614,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["columnname",{"_index":1952,"title":{},"body":{"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{}}}],["columns",{"_index":1831,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["come",{"_index":84,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["comes",{"_index":539,"title":{},"body":{"modules/AppModule.html":{}}}],["comma",{"_index":1237,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["command",{"_index":2439,"title":{},"body":{"index.html":{}}}],["communications.service",{"_index":1527,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["communications.service.ts",{"_index":1903,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{},"coverage.html":{}}}],["communications.service.ts:16",{"_index":1909,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{}}}],["communications.service.ts:21",{"_index":1908,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{}}}],["communications/main",{"_index":1526,"title":{},"body":{"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"coverage.html":{}}}],["comparire",{"_index":1716,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["complete",{"_index":1770,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["completino",{"_index":2225,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["completo",{"_index":1893,"title":{},"body":{"injectables/LogoutService.html":{}}}],["component",{"_index":203,"title":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"injectables/ActivePhaseService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["componente",{"_index":1478,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{}}}],["components",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["components/confirm",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["components/dashboard/dashboard.component",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/log",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/logout",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["components/phases/phases.component",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidenav/sidenav.component",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["components/splash",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["components/toolbar/toolbar.component",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["comunicazione",{"_index":1905,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{}}}],["con",{"_index":627,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["condizioni",{"_index":2019,"title":{},"body":{"components/PhasesComponent.html":{}}}],["conferma",{"_index":740,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{}}}],["config",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["configuration",{"_index":304,"title":{},"body":{"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["configuration.ts",{"_index":302,"title":{},"body":{"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"coverage.html":{}}}],["configuration.ts:12",{"_index":306,"title":{},"body":{"injectables/ApiConfiguration.html":{}}}],["confirm",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["confirmdatadialogcomponent",{"_index":395,"title":{"components/ConfirmDataDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["consente",{"_index":882,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["conserva",{"_index":1889,"title":{},"body":{"injectables/LogoutService.html":{}}}],["const",{"_index":139,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/Add$Params.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{}}}],["constrains",{"_index":2461,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["constructor(activeattributesservice",{"_index":1460,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["constructor(authinfoservice",{"_index":830,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/LogoutService.html":{},"components/ToolbarComponent.html":{}}}],["constructor(config",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["constructor(dialogref",{"_index":750,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["constructor(formbuilder",{"_index":1660,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["constructor(loadingservice",{"_index":2216,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["constructor(logoutservice",{"_index":2186,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(name",{"_index":1125,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["constructor(private",{"_index":136,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["constructor(public",{"_index":785,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"classes/HeaderParameter.html":{},"components/LogoutDialogComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["constructor(qualityattributeservice",{"_index":33,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["constructor(rooturl",{"_index":2147,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["constructor(snackbar",{"_index":1326,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/PhasesComponent.html":{}}}],["constructor(translateservice",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{}}}],["contain",{"_index":2205,"title":{},"body":{"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["container",{"_index":965,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{}}}],["contenente",{"_index":1942,"title":{},"body":{"pipes/OptionsPipe.html":{},"pipes/SafePipe.html":{},"components/ToolbarComponent.html":{}}}],["contenete",{"_index":270,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["contenitrice",{"_index":921,"title":{},"body":{"components/DashboardComponent.html":{}}}],["content",{"_index":1261,"title":{},"body":{"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["contenttype",{"_index":1264,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["contenuto",{"_index":1714,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["contesto",{"_index":269,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["context",{"_index":268,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["context).pipe",{"_index":715,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["contiene",{"_index":214,"title":{},"body":{"injectables/ActivePhaseService.html":{},"injectables/AuthInformationsService.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["controlli",{"_index":2085,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["controllo",{"_index":1513,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{}}}],["correctly",{"_index":1140,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["corresponding",{"_index":1204,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["correttamente",{"_index":1612,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["cos",{"_index":1695,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["costruttore",{"_index":40,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["costruzione",{"_index":1671,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["coverage",{"_index":2342,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creazione",{"_index":1697,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["criteri",{"_index":1028,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{}}}],["criteria",{"_index":168,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["crud",{"_index":2143,"title":{},"body":{"interfaces/QualitysavelogModel.html":{}}}],["cui",{"_index":294,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"pipes/OptionsPipe.html":{},"injectables/QualityPhaseService.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{}}}],["current",{"_index":1289,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["cursor",{"_index":1809,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["custom",{"_index":1138,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["customer",{"_index":1110,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["da",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/ToolbarComponent.html":{}}}],["dai",{"_index":1756,"title":{},"body":{"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["dal",{"_index":925,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dall'applicazione",{"_index":920,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dall'utente",{"_index":1680,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["dalla",{"_index":1347,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/ToolbarComponent.html":{}}}],["dark",{"_index":669,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["darkblue",{"_index":1822,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["dashboard",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{}}}],["dashboard'},{'name",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["dashboard.component.html",{"_index":824,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":823,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":399,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["data.c_projectphase_id",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data.c_projectphase_id.tostring",{"_index":1370,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["data.lang",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data.m_product_id",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data.theme",{"_index":937,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{}}}],["data.token",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{}}}],["data.user_id",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{}}}],["data.username",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{}}}],["datalist",{"_index":179,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["date",{"_index":2034,"title":{},"body":{"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{},"components/ToolbarComponent.html":{}}}],["date().getfullyear",{"_index":2032,"title":{},"body":{"components/PhasesComponent.html":{}}}],["date().getmonth",{"_index":2027,"title":{},"body":{"components/PhasesComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":2058,"title":{},"body":{"components/PhasesComponent.html":{}}}],["date:'mmmm",{"_index":2320,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["date:'yyyy",{"_index":2322,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":2067,"title":{},"body":{"components/PhasesComponent.html":{}}}],["date:\\'mmmm",{"_index":2335,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["date:\\'yyyy",{"_index":2336,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["dati",{"_index":765,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["dato",{"_index":1504,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["declarations",{"_index":314,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["decodekey",{"_index":1958,"title":{},"body":{"classes/ParameterCodec.html":{}}}],["decodekey(key",{"_index":1151,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["decodeuricomponent(key",{"_index":1152,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["decodeuricomponent(value",{"_index":1154,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["decodevalue",{"_index":1959,"title":{},"body":{"classes/ParameterCodec.html":{}}}],["decodevalue(value",{"_index":1153,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["decorators",{"_index":778,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["deepobject",{"_index":1226,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["default",{"_index":112,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultexplode",{"_index":1162,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["defaultlanguage",{"_index":527,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstyle",{"_index":1161,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["defined",{"_index":38,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["defines",{"_index":1156,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["definisce",{"_index":236,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"interfaces/JsonList.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"interfaces/Update$Params.html":{},"interfaces/optionType.html":{}}}],["definiti",{"_index":1338,"title":{},"body":{"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["degli",{"_index":50,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"interfaces/Fetch_3$Params.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{},"pipes/OptionsPipe.html":{}}}],["dei",{"_index":764,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Fetch_1$Params.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/QualitySaveLogService.html":{}}}],["del",{"_index":623,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["delete",{"_index":1005,"title":{},"body":{"interfaces/Delete$Params.html":{},"components/LogViewerComponent.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["delete$params",{"_index":998,"title":{"interfaces/Delete$Params.html":{}},"body":{"interfaces/Delete$Params.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["delete$response",{"_index":2105,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["delete$response(params",{"_index":2116,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["delete(http",{"_index":1003,"title":{},"body":{"interfaces/Delete$Params.html":{},"miscellaneous/functions.html":{}}}],["delete(params",{"_index":2114,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["delete(selectedlog",{"_index":1466,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["delete(this.http",{"_index":2134,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["delete.path",{"_index":1004,"title":{},"body":{"interfaces/Delete$Params.html":{}}}],["delete.ts",{"_index":999,"title":{},"body":{"interfaces/Delete$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["deletedialog",{"_index":1454,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["deletedialog(selectedlog",{"_index":1470,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["deletedialog.afterclosed().subscribe((result",{"_index":1603,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["deletepath",{"_index":2100,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["dell'animazione",{"_index":1721,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["dell'applicazione",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["dell'elemento",{"_index":1989,"title":{},"body":{"components/PhasesComponent.html":{}}}],["dell'id",{"_index":632,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["dell'identificativo",{"_index":635,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["dell'immagine",{"_index":1723,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["dell'inizializzazione",{"_index":1322,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["dell'interfaccia",{"_index":2226,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["dell'opzione",{"_index":769,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{},"pipes/OptionsPipe.html":{}}}],["dell'utente",{"_index":596,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/LogoutService.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["della",{"_index":41,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["delle",{"_index":607,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{},"injectables/QualityPhaseService.html":{},"interfaces/QualityattributeModel.html":{},"components/ToolbarComponent.html":{},"interfaces/optionType.html":{}}}],["dello",{"_index":2209,"title":{},"body":{"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["dentro",{"_index":915,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dependencies",{"_index":312,"title":{"dependencies.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["desc",{"_index":1954,"title":{},"body":{"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{}}}],["description",{"_index":9,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{},"interfaces/optionType.html":{}}}],["descrive",{"_index":777,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["descrizione",{"_index":761,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["desktop",{"_index":1847,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["dettate",{"_index":1755,"title":{},"body":{"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["dev",{"_index":2414,"title":{},"body":{"index.html":{}}}],["deve",{"_index":885,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["development",{"_index":2411,"title":{},"body":{"index.html":{}}}],["di",{"_index":19,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{},"injectables/QualityPhaseService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{},"interfaces/optionType.html":{}}}],["dialog",{"_index":739,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["dialog'},{'name",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["dialog.component",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"components/LogViewerComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["dialog.component.html",{"_index":744,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["dialog.component.scss",{"_index":743,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["dialog.component.ts",{"_index":738,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:17",{"_index":752,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":775,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":780,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":1879,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":773,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1880,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":772,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1877,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":766,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{}}}],["dialog/confirm",{"_index":502,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"coverage.html":{}}}],["dialog/logout",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":745,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["dichiarazioni",{"_index":1753,"title":{},"body":{"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["direction",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{}}}],["directive",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["directives",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2423,"title":{},"body":{"index.html":{}}}],["directly",{"_index":727,"title":{},"body":{"injectables/BaseService.html":{}}}],["directory",{"_index":2427,"title":{},"body":{"index.html":{}}}],["disable",{"_index":337,"title":{},"body":{"modules/ApiModule.html":{}}}],["display",{"_index":967,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["displayedcolumns",{"_index":1450,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["disponibile",{"_index":1984,"title":{},"body":{"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{}}}],["disponibili",{"_index":1543,"title":{},"body":{"components/LogViewerComponent.html":{},"components/ToolbarComponent.html":{}}}],["dist",{"_index":2426,"title":{},"body":{"index.html":{}}}],["distruttore",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["diversi",{"_index":2191,"title":{},"body":{"components/SidenavComponent.html":{}}}],["dm",{"_index":617,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"interfaces/Message.html":{},"components/ToolbarComponent.html":{}}}],["document.body.classlist.add('theme",{"_index":2259,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.body.classlist.remove('theme",{"_index":668,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/ThemeService.html":{}}}],["document.getelementbyid(\"pin",{"_index":1748,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["document.getelementbyid(id",{"_index":2050,"title":{},"body":{"components/PhasesComponent.html":{}}}],["document.getelementsbyclassname(\"selected",{"_index":2045,"title":{},"body":{"components/PhasesComponent.html":{}}}],["document.getelementsbyclassname('phase').item(0",{"_index":2005,"title":{},"body":{"components/PhasesComponent.html":{}}}],["document.getelementsbyclassname('phase')[0",{"_index":2008,"title":{},"body":{"components/PhasesComponent.html":{}}}],["documentation",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["domsanitizer",{"_index":2173,"title":{},"body":{"pipes/SafePipe.html":{}}}],["dopo",{"_index":115,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["dots.svg",{"_index":2252,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["downloads",{"_index":1298,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["drawer",{"_index":975,"title":{},"body":{"components/DashboardComponent.html":{}}}],["due",{"_index":1887,"title":{},"body":{"injectables/LogoutService.html":{},"components/SidenavComponent.html":{}}}],["durante",{"_index":605,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/LanguageService.html":{}}}],["durata",{"_index":2219,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["duration",{"_index":547,"title":{},"body":{"modules/AppModule.html":{},"components/ToolbarComponent.html":{}}}],["dynamic",{"_index":2387,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":89,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["e2e",{"_index":2436,"title":{},"body":{"index.html":{}}}],["each",{"_index":1194,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["ease",{"_index":1735,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["ed",{"_index":594,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LogViewerComponent.html":{}}}],["edge",{"_index":1793,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["edit",{"_index":1455,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["edit(selectedlog",{"_index":1473,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["effettuare",{"_index":267,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"components/SplashScreenComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["element.value.length",{"_index":1750,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["element.value.substring(0",{"_index":1749,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["element[column.attributevalue",{"_index":1615,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["elementi",{"_index":1593,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["elimina",{"_index":2180,"title":{},"body":{"components/SidenavComponent.html":{}}}],["eliminando",{"_index":1899,"title":{},"body":{"injectables/LogoutService.html":{}}}],["eliminare",{"_index":1000,"title":{},"body":{"interfaces/Delete$Params.html":{},"components/LogViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["eliminato",{"_index":1002,"title":{},"body":{"interfaces/Delete$Params.html":{},"miscellaneous/functions.html":{}}}],["emette",{"_index":114,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{}}}],["emissioni",{"_index":908,"title":{},"body":{"components/DashboardComponent.html":{}}}],["en",{"_index":1411,"title":{},"body":{"injectables/LanguageService.html":{},"components/ToolbarComponent.html":{}}}],["enabled",{"_index":530,"title":{},"body":{"modules/AppModule.html":{}}}],["encoded",{"_index":1271,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["encodekey",{"_index":1960,"title":{},"body":{"classes/ParameterCodec.html":{}}}],["encodekey(key",{"_index":1147,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["encoder",{"_index":1306,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["encodeuricomponent(key",{"_index":1148,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["encodeuricomponent(p[0])}=${encodeuricomponent(p[1])}`).join",{"_index":1278,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["encodeuricomponent(value",{"_index":1150,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["encodevalue",{"_index":1961,"title":{},"body":{"classes/ParameterCodec.html":{}}}],["encodevalue(value",{"_index":1149,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["end",{"_index":2435,"title":{},"body":{"index.html":{}}}],["end_plan",{"_index":1109,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["end_plan_date",{"_index":2022,"title":{},"body":{"components/PhasesComponent.html":{}}}],["end_plan_date.setfullyear(nextyear",{"_index":2038,"title":{},"body":{"components/PhasesComponent.html":{}}}],["end_plan_date.setmonth(nextmonth",{"_index":2037,"title":{},"body":{"components/PhasesComponent.html":{}}}],["end_plan_date.toisostring().replace(\"t",{"_index":2043,"title":{},"body":{"components/PhasesComponent.html":{}}}],["end_plan_operator",{"_index":2016,"title":{},"body":{"components/PhasesComponent.html":{}}}],["endrow",{"_index":170,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["entry",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/ToolbarComponent.html":{}}}],["entrypoint",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["equals",{"_index":155,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["error",{"_index":1380,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["error('apimodule",{"_index":351,"title":{},"body":{"modules/ApiModule.html":{}}}],["error('you",{"_index":355,"title":{},"body":{"modules/ApiModule.html":{}}}],["error.error",{"_index":1382,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["error.error.description",{"_index":1578,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["error.status",{"_index":1384,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["errordescription",{"_index":1381,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["errore",{"_index":1012,"title":{},"body":{"interfaces/ErrorModel.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["errori",{"_index":2171,"title":{},"body":{"pipes/SafePipe.html":{}}}],["errormodel",{"_index":1008,"title":{"interfaces/ErrorModel.html":{}},"body":{"interfaces/ErrorModel.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"coverage.html":{}}}],["errormodel).description",{"_index":1383,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["es",{"_index":1410,"title":{},"body":{"injectables/LanguageService.html":{},"components/ToolbarComponent.html":{}}}],["esci",{"_index":1878,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["esegue",{"_index":1323,"title":{},"body":{"injectables/IframeInitializerService.html":{},"interfaces/Message.html":{}}}],["eseguire",{"_index":103,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"injectables/LogoutService.html":{},"injectables/QualityPhaseService.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["eseguito",{"_index":577,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["eslint",{"_index":336,"title":{},"body":{"modules/ApiModule.html":{}}}],["essere",{"_index":1484,"title":{},"body":{"components/LogViewerComponent.html":{},"components/ToolbarComponent.html":{}}}],["estrarre",{"_index":2301,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["etichetta",{"_index":1355,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["event",{"_index":790,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogoutDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.data",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event.source",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eventi",{"_index":755,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["evidenziare",{"_index":1482,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["evidenziata",{"_index":1558,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["evita",{"_index":599,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["evitare",{"_index":217,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["ex",{"_index":1674,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["example",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["except",{"_index":1189,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["execute",{"_index":2432,"title":{},"body":{"index.html":{}}}],["exit",{"_index":1875,"title":{},"body":{"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["expected",{"_index":1292,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["explode",{"_index":1159,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["export",{"_index":133,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"interfaces/optionType.html":{}}}],["exports",{"_index":317,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/HeaderParameter.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["eye",{"_index":1797,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["fa",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fadeinout",{"_index":1722,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["fallback",{"_index":728,"title":{},"body":{"injectables/BaseService.html":{}}}],["fallimento",{"_index":1496,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["fallito",{"_index":1675,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["false",{"_index":869,"title":{},"body":{"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["family",{"_index":2245,"title":{},"body":{"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["far",{"_index":1491,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["fare",{"_index":218,"title":{},"body":{"injectables/ActivePhaseService.html":{},"injectables/MainViewCommunicationsService.html":{}}}],["fase",{"_index":20,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterQualityattributeModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{},"miscellaneous/functions.html":{}}}],["fasi",{"_index":884,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"injectables/QualityPhaseService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["fatto",{"_index":1507,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["fetch",{"_index":219,"title":{},"body":{"injectables/ActivePhaseService.html":{},"injectables/OperatorsService.html":{},"components/PhasesComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fetch$params",{"_index":645,"title":{"interfaces/Fetch$Params.html":{}},"body":{"injectables/AuthInformationsService.html":{},"interfaces/Fetch$Params.html":{},"components/LoginPinComponent.html":{},"injectables/OperatorsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fetch$response",{"_index":1922,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["fetch$response(params",{"_index":1926,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["fetch(http",{"_index":1020,"title":{},"body":{"interfaces/Fetch$Params.html":{},"miscellaneous/functions.html":{}}}],["fetch(params",{"_index":1924,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["fetch(this.http",{"_index":1930,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["fetch.path",{"_index":1021,"title":{},"body":{"interfaces/Fetch$Params.html":{}}}],["fetch_1",{"_index":2106,"title":{},"body":{"injectables/QualitySaveLogService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fetch_1$params",{"_index":1068,"title":{"interfaces/Fetch_1$Params.html":{}},"body":{"interfaces/Fetch_1$Params.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fetch_1$response",{"_index":2107,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["fetch_1$response(params",{"_index":2120,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["fetch_1(http",{"_index":1071,"title":{},"body":{"interfaces/Fetch_1$Params.html":{},"miscellaneous/functions.html":{}}}],["fetch_1(params",{"_index":2118,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["fetch_1(this.http",{"_index":2136,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["fetch_1.path",{"_index":1072,"title":{},"body":{"interfaces/Fetch_1$Params.html":{}}}],["fetch_1path",{"_index":2101,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["fetch_2",{"_index":2087,"title":{},"body":{"injectables/QualityPhaseService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fetch_2$params",{"_index":1075,"title":{"interfaces/Fetch_2$Params.html":{}},"body":{"interfaces/Fetch_2$Params.html":{},"injectables/QualityPhaseService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fetch_2$response",{"_index":2088,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["fetch_2$response(params",{"_index":2092,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["fetch_2(http",{"_index":1079,"title":{},"body":{"interfaces/Fetch_2$Params.html":{},"miscellaneous/functions.html":{}}}],["fetch_2(params",{"_index":2090,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["fetch_2(this.http",{"_index":2095,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["fetch_2.path",{"_index":1080,"title":{},"body":{"interfaces/Fetch_2$Params.html":{}}}],["fetch_2path",{"_index":2086,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["fetch_3",{"_index":2074,"title":{},"body":{"injectables/QualityAttributeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fetch_3$params",{"_index":1082,"title":{"interfaces/Fetch_3$Params.html":{}},"body":{"interfaces/Fetch_3$Params.html":{},"injectables/QualityAttributeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fetch_3$response",{"_index":2075,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["fetch_3$response(params",{"_index":2079,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["fetch_3(http",{"_index":1085,"title":{},"body":{"interfaces/Fetch_3$Params.html":{},"miscellaneous/functions.html":{}}}],["fetch_3(params",{"_index":2077,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["fetch_3(this.http",{"_index":2083,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["fetch_3.path",{"_index":1086,"title":{},"body":{"interfaces/Fetch_3$Params.html":{}}}],["fetch_3path",{"_index":2073,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["fetchattributes",{"_index":27,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["fetchattributes(activephase",{"_index":58,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["fetchpath",{"_index":1921,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["fetchrequestoperatorsmodel",{"_index":1016,"title":{"interfaces/FetchRequestOperatorsModel.html":{}},"body":{"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"coverage.html":{}}}],["fetchrequestqualityattributemodel",{"_index":1043,"title":{"interfaces/FetchRequestQualityattributeModel.html":{}},"body":{"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/Fetch_3$Params.html":{},"coverage.html":{}}}],["fetchrequestqualityphasemodel",{"_index":1047,"title":{"interfaces/FetchRequestQualityphaseModel.html":{}},"body":{"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/Fetch_2$Params.html":{},"coverage.html":{}}}],["fetchrequestqualitysavelogmodel",{"_index":1051,"title":{"interfaces/FetchRequestQualitysavelogModel.html":{}},"body":{"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"coverage.html":{}}}],["fetchresponseoperatorsmodel",{"_index":1019,"title":{"interfaces/FetchResponseOperatorsModel.html":{}},"body":{"interfaces/Fetch$Params.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"injectables/OperatorsService.html":{},"coverage.html":{}}}],["fetchresponsequalityattributemodel",{"_index":1063,"title":{"interfaces/FetchResponseQualityattributeModel.html":{}},"body":{"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/Fetch_3$Params.html":{},"injectables/QualityAttributeService.html":{},"coverage.html":{}}}],["fetchresponsequalityphasemodel",{"_index":1065,"title":{"interfaces/FetchResponseQualityphaseModel.html":{}},"body":{"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/Fetch_2$Params.html":{},"injectables/QualityPhaseService.html":{},"coverage.html":{}}}],["fetchresponsequalitysavelogmodel",{"_index":1067,"title":{"interfaces/FetchResponseQualitysavelogModel.html":{}},"body":{"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{}}}],["fff",{"_index":2243,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["field",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["fieldname",{"_index":140,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"interfaces/optionType.html":{}}}],["files",{"_index":2420,"title":{},"body":{"index.html":{}}}],["filter",{"_index":248,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["filter((r",{"_index":288,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["filterjsonoptions",{"_index":28,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["filterjsonoptions(attribute",{"_index":69,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["filteroperatorsmodel",{"_index":1039,"title":{"interfaces/FilterOperatorsModel.html":{}},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FilterOperatorsModel.html":{},"coverage.html":{}}}],["filterqualityattributemodel",{"_index":1045,"title":{"interfaces/FilterQualityattributeModel.html":{}},"body":{"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"coverage.html":{}}}],["filterqualityphasemodel",{"_index":1049,"title":{"interfaces/FilterQualityphaseModel.html":{}},"body":{"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"coverage.html":{}}}],["filterqualitysavelogmodel",{"_index":1053,"title":{"interfaces/FilterQualitysavelogModel.html":{}},"body":{"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"coverage.html":{}}}],["filtraggio",{"_index":1934,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["filtrando",{"_index":1091,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{}}}],["filtrare",{"_index":1030,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"components/LoginPinComponent.html":{}}}],["filtro",{"_index":1947,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["finale",{"_index":1032,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["fine",{"_index":2060,"title":{},"body":{"components/PhasesComponent.html":{}}}],["finire",{"_index":1033,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{}}}],["firefox",{"_index":1795,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["first",{"_index":540,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["firstcard",{"_index":2006,"title":{},"body":{"components/PhasesComponent.html":{}}}],["firstcard.click",{"_index":2009,"title":{},"body":{"components/PhasesComponent.html":{}}}],["firstlog.c_projectphase_quality_log_id",{"_index":1576,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["fit",{"_index":1623,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["fittizio",{"_index":1996,"title":{},"body":{"components/PhasesComponent.html":{}}}],["fixed",{"_index":2238,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["flex",{"_index":968,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["flusso",{"_index":1408,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/LoadingService.html":{}}}],["fn/authentication/login",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["fn/authentication/logout",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["fn/operators/fetch",{"_index":1929,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["fn/quality",{"_index":2082,"title":{},"body":{"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["fondamentali",{"_index":563,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["font",{"_index":813,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["form",{"_index":600,"title":{},"body":{"injectables/AuthInformationsService.html":{},"classes/HeaderParameter.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["form>button",{"_index":1812,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["formbuilder",{"_index":1661,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["formdata",{"_index":1281,"title":{},"body":{"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["formdata.append(key",{"_index":1283,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["formdata.push(entry",{"_index":1598,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["formdata.set(key",{"_index":1285,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["formdatavalue",{"_index":2146,"title":{},"body":{"classes/RequestBuilder.html":{}}}],["formdatavalue(value",{"_index":1286,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["formgroup",{"_index":1708,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["formsmodule",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalue",{"_index":1273,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["forroot",{"_index":331,"title":{},"body":{"modules/ApiModule.html":{}}}],["forroot(params",{"_index":332,"title":{},"body":{"modules/ApiModule.html":{}}}],["fosse",{"_index":1667,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["foto",{"_index":1099,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{}}}],["frame",{"_index":916,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["fredoka",{"_index":2246,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["frompage",{"_index":746,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["frompage.description",{"_index":793,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["frompage.title",{"_index":792,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["full",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["function",{"_index":273,"title":{},"body":{"interfaces/Add$Params.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"coverage.html":{}}}],["functions",{"_index":2396,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funge",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"injectables/MainViewCommunicationsService.html":{}}}],["funzionamento",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{}}}],["funzione",{"_index":259,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":2442,"title":{},"body":{"index.html":{}}}],["gap",{"_index":981,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["generale",{"_index":2179,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["generate",{"_index":2422,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2406,"title":{},"body":{"index.html":{}}}],["generato",{"_index":2300,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["gestione",{"_index":754,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["gestire",{"_index":51,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LoadingService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["gestisce",{"_index":12,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["getactiveattributes",{"_index":30,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["getactivephase",{"_index":206,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["getinsideframe",{"_index":894,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getloading",{"_index":1436,"title":{},"body":{"injectables/LoadingService.html":{}}}],["getrooturl",{"_index":724,"title":{},"body":{"injectables/BaseService.html":{}}}],["getter",{"_index":622,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"injectables/LoadingService.html":{}}}],["getting",{"_index":2403,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":620,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["getuserid",{"_index":630,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["getusername",{"_index":637,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["getusertheme",{"_index":641,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["gi",{"_index":224,"title":{},"body":{"injectables/ActivePhaseService.html":{},"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["giorno",{"_index":2299,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["gli",{"_index":13,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"pipes/SafePipe.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":303,"title":{},"body":{"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{}}}],["go",{"_index":2445,"title":{},"body":{"index.html":{}}}],["grafica",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["graficamente",{"_index":1483,"title":{},"body":{"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["grafico",{"_index":758,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogoutDialogComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["graph",{"_index":2453,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1826,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["greaterorequal",{"_index":158,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["green",{"_index":1580,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["grid",{"_index":1830,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["groupdescription",{"_index":144,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["groupname",{"_index":143,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["ha",{"_index":1429,"title":{},"body":{"injectables/LoadingService.html":{}}}],["handle",{"_index":1141,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["handles",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["hanno",{"_index":1591,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["header",{"_index":1121,"title":{},"body":{"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["header(name",{"_index":1258,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["headerparam",{"_index":1312,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["headerparam.append(httpheaders",{"_index":1314,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["headerparameter",{"_index":1116,"title":{"classes/HeaderParameter.html":{}},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{}}}],["headerparameter(name",{"_index":1260,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["headers",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/HeaderParameter.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["headers.append(this.name",{"_index":1242,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["height",{"_index":969,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["help",{"_index":2443,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1243,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["hh:mm",{"_index":2059,"title":{},"body":{"components/PhasesComponent.html":{}}}],["hide",{"_index":1656,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["highlight",{"_index":1456,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["highlight(selected",{"_index":1480,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["highlighted",{"_index":1451,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["horizontalposition",{"_index":543,"title":{},"body":{"modules/AppModule.html":{}}}],["html",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["html.pipe",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["html.pipe.ts",{"_index":2164,"title":{},"body":{"pipes/SafePipe.html":{},"coverage.html":{}}}],["html.pipe.ts:21",{"_index":2168,"title":{},"body":{"pipes/SafePipe.html":{}}}],["htmlelement",{"_index":2007,"title":{},"body":{"components/PhasesComponent.html":{}}}],["http",{"_index":253,"title":{},"body":{"interfaces/Add$Params.html":{},"modules/ApiModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["http.request",{"_index":283,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["http://localhost:4200",{"_index":2416,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":244,"title":{},"body":{"interfaces/Add$Params.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":357,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{}}}],["httpcontext",{"_index":245,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["httpheaders",{"_index":1130,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["httpheaders.append('accept",{"_index":1311,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["httpheaders.set('content",{"_index":1315,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["httploaderfactory",{"_index":525,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":520,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httpparametercodec",{"_index":1136,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["httpparams",{"_index":1137,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["httprequest",{"_index":1135,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["httprequest(this.method.touppercase",{"_index":1317,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["httpresponse",{"_index":246,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{}}}],["https://github.com/angular/angular/issues/18261",{"_index":1145,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["https://github.com/angular/angular/issues/20575",{"_index":360,"title":{},"body":{"modules/ApiModule.html":{}}}],["https://test.adesuite.com/faltracco/rest/openapi/operation",{"_index":305,"title":{},"body":{"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{}}}],["icon",{"_index":1639,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{}}}],["icone",{"_index":2190,"title":{},"body":{"components/SidenavComponent.html":{}}}],["iconmobilequery",{"_index":2264,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["icontains",{"_index":157,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["id",{"_index":610,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["identificativa",{"_index":1943,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["identificativo",{"_index":636,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/PhasesComponent.html":{}}}],["identifier",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":846,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"interfaces/Message.html":{}}}],["iframeinitializerservice",{"_index":838,"title":{"injectables/IframeInitializerService.html":{}},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"coverage.html":{}}}],["iframeinitservice",{"_index":837,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ignore",{"_index":1211,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["il",{"_index":78,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{},"injectables/QualitySaveLogService.html":{},"components/SidenavComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["img",{"_index":1816,"title":{},"body":{"components/LoginPinComponent.html":{},"components/ToolbarComponent.html":{}}}],["immesso",{"_index":1688,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["impiegasse",{"_index":1718,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["implements",{"_index":742,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["import",{"_index":116,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{}}}],["important",{"_index":1629,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["imports",{"_index":346,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imposta",{"_index":597,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["impostare",{"_index":1407,"title":{},"body":{"injectables/LanguageService.html":{},"components/PhasesComponent.html":{},"injectables/ThemeService.html":{}}}],["incorporarla",{"_index":880,"title":{},"body":{"components/DashboardComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{},"interfaces/optionType.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":871,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["indicare",{"_index":1428,"title":{},"body":{"injectables/LoadingService.html":{}}}],["indispensabili",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["individuare",{"_index":80,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"interfaces/optionType.html":{}}}],["informations.service",{"_index":126,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{}}}],["informations.service.ts",{"_index":562,"title":{},"body":{"injectables/AuthInformationsService.html":{},"coverage.html":{}}}],["informations.service.ts:103",{"_index":580,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:114",{"_index":587,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:16",{"_index":603,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:21",{"_index":609,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:26",{"_index":614,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:31",{"_index":571,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:46",{"_index":621,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:51",{"_index":631,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:56",{"_index":638,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:61",{"_index":642,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:67",{"_index":625,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:76",{"_index":634,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:85",{"_index":640,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations.service.ts:94",{"_index":644,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["informations/auth",{"_index":125,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["informazioni",{"_index":53,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{}}}],["inglese",{"_index":2290,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ingresso",{"_index":93,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"interfaces/Message.html":{}}}],["inherited",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/HeaderParameter.html":{},"injectables/OperatorsService.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{}}}],["initialize",{"_index":1324,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["initialize(data",{"_index":1340,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["initializer.service",{"_index":905,"title":{},"body":{"components/DashboardComponent.html":{}}}],["initializer.service.ts",{"_index":1321,"title":{},"body":{"injectables/IframeInitializerService.html":{},"coverage.html":{}}}],["initializer.service.ts:19",{"_index":1330,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["initializer.service.ts:40",{"_index":1350,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["initializer.service.ts:50",{"_index":1341,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["initializer/iframe",{"_index":904,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"coverage.html":{}}}],["iniziale",{"_index":1037,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"injectables/LoadingService.html":{}}}],["inizializza",{"_index":774,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["inizializzare",{"_index":1342,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["inizializzazione",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{},"components/PhasesComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["iniziare",{"_index":1038,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{}}}],["inizio",{"_index":2056,"title":{},"body":{"components/PhasesComponent.html":{}}}],["inject",{"_index":781,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":786,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["inline",{"_index":2331,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["inner",{"_index":1788,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{}}}],["inotcontains",{"_index":156,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["input",{"_index":1684,"title":{},"body":{"components/LoginPinComponent.html":{},"pipes/SafePipe.html":{},"components/SplashScreenComponent.html":{}}}],["input[type=\"password",{"_index":1786,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["inputs",{"_index":2214,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["inserimento",{"_index":1517,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["inserire",{"_index":238,"title":{},"body":{"interfaces/Add$Params.html":{}}}],["inseriti",{"_index":1445,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["inserito",{"_index":272,"title":{},"body":{"interfaces/Add$Params.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"miscellaneous/functions.html":{}}}],["inside",{"_index":898,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inside=true",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{}}}],["insideframe",{"_index":825,"title":{},"body":{"components/DashboardComponent.html":{}}}],["insideframe(inside",{"_index":961,"title":{},"body":{"components/DashboardComponent.html":{}}}],["instanceof",{"_index":290,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{}}}],["instead",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["interazioni",{"_index":2193,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["interfaccia",{"_index":235,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"interfaces/optionType.html":{}}}],["interface",{"_index":228,"title":{"interfaces/Add$Params.html":{},"interfaces/ApiConfigurationParams.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"interfaces/JsonList.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/ParameterOptions.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"interfaces/Update$Params.html":{},"interfaces/optionType.html":{}},"body":{"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"interfaces/JsonList.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"interfaces/optionType.html":{}}}],["interfaces",{"_index":230,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/ApiConfigurationParams.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"interfaces/JsonList.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/ParameterOptions.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"interfaces/Update$Params.html":{},"interfaces/optionType.html":{},"overview.html":{}}}],["inviare",{"_index":1476,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["isactive",{"_index":1097,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/QualitysavelogModel.html":{}}}],["isdark",{"_index":2265,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["isdevmode",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["isglobal",{"_index":1103,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["ismobileuser",{"_index":1095,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{}}}],["istante",{"_index":1505,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["italiano",{"_index":2289,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["items",{"_index":1630,"title":{},"body":{"components/LogViewerComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["json",{"_index":177,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/Add$Params.html":{},"modules/AppModule.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{}}}],["json.parse(actualqualityvalue.value",{"_index":1568,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["json.parse(json",{"_index":181,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["json.stringify(value",{"_index":1287,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["jsonlist",{"_index":128,"title":{"interfaces/JsonList.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/JsonList.html":{},"interfaces/QualityattributeModel.html":{},"coverage.html":{},"interfaces/optionType.html":{}}}],["justify",{"_index":2239,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["karma",{"_index":2434,"title":{},"body":{"index.html":{}}}],["key",{"_index":88,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"classes/HeaderParameter.html":{},"interfaces/JsonList.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"interfaces/QualityattributeModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/optionType.html":{}}}],["key,value,key,value",{"_index":1240,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["l",{"_index":1399,"title":{},"body":{"interfaces/JsonList.html":{},"components/PhasesComponent.html":{},"interfaces/QualityattributeModel.html":{},"components/ToolbarComponent.html":{},"interfaces/optionType.html":{}}}],["l'accesso",{"_index":578,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["l'aggiornamento/inserimento",{"_index":741,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{}}}],["l'anno",{"_index":2303,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["l'apertura",{"_index":1351,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["l'api",{"_index":296,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["l'applicazione",{"_index":2274,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["l'attributo",{"_index":92,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["l'autenticazione",{"_index":604,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["l'eliminazione",{"_index":1472,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["l'esecuzione",{"_index":1409,"title":{},"body":{"injectables/LanguageService.html":{}}}],["l'icona",{"_index":1712,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/ToolbarComponent.html":{}}}],["l'id",{"_index":593,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{}}}],["l'identificativo",{"_index":583,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/LogoutService.html":{},"components/SidenavComponent.html":{}}}],["l'interfaccia",{"_index":872,"title":{},"body":{"components/DashboardComponent.html":{}}}],["l'intestazione",{"_index":2261,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["l'opzione",{"_index":1944,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["l'ottenimento",{"_index":49,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/IframeInitializerService.html":{},"components/PhasesComponent.html":{}}}],["l'ultima",{"_index":1554,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{}}}],["l'ultimo",{"_index":1679,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["l'uso",{"_index":606,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["l'utente",{"_index":575,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/LogoutService.html":{}}}],["la",{"_index":56,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterQualityattributeModel.html":{},"injectables/IframeInitializerService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["label",{"_index":1185,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SplashScreenComponent.html":{}}}],["lampeggiare",{"_index":1508,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["lang",{"_index":1916,"title":{},"body":{"interfaces/Message.html":{}}}],["language",{"_index":1406,"title":{},"body":{"injectables/LanguageService.html":{},"components/ToolbarComponent.html":{}}}],["language/language.service",{"_index":1357,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["languages",{"_index":2266,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["languageservice",{"_index":1327,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["large",{"_index":1823,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["lastphase",{"_index":1452,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["lastvalue",{"_index":205,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["laterale",{"_index":879,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidenavComponent.html":{}}}],["lato",{"_index":1387,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["le",{"_index":52,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"interfaces/OperatorsModel.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{},"interfaces/optionType.html":{}}}],["left",{"_index":1801,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["legend",{"_index":313,"title":{},"body":{"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["lessorequal",{"_index":159,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["light",{"_index":2258,"title":{},"body":{"injectables/ThemeService.html":{}}}],["line",{"_index":2333,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["linename",{"_index":1106,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["linguaggi",{"_index":2286,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["linguaggio",{"_index":1334,"title":{},"body":{"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/ToolbarComponent.html":{}}}],["list",{"_index":1239,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["lista",{"_index":76,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"components/PhasesComponent.html":{},"injectables/QualityPhaseService.html":{},"components/ToolbarComponent.html":{}}}],["listener",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["literal",{"_index":776,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Login$Params.html":{},"components/LogoutDialogComponent.html":{},"classes/RequestBuilder.html":{}}}],["livello",{"_index":1672,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["lo",{"_index":1493,"title":{},"body":{"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{},"components/SplashScreenComponent.html":{}}}],["loaded",{"_index":353,"title":{},"body":{"modules/ApiModule.html":{}}}],["loader",{"_index":508,"title":{},"body":{"modules/AppModule.html":{},"components/SplashScreenComponent.html":{},"dependencies.html":{}}}],["loading",{"_index":1418,"title":{},"body":{"injectables/LoadingService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["loadingservice",{"_index":1414,"title":{"injectables/LoadingService.html":{}},"body":{"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{},"coverage.html":{}}}],["locale_id",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["localeit",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":573,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{}}}],["localstorage.getitem(\"adetoken",{"_index":648,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginUsernameComponent.html":{}}}],["localstorage.getitem('adetoken",{"_index":1737,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["localstorage.getitem('lang",{"_index":2311,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["localstorage.removeitem(\"adetoken",{"_index":664,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["localstorage.setitem(\"adetoken",{"_index":657,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["localstorage.setitem('lang",{"_index":1412,"title":{},"body":{"injectables/LanguageService.html":{}}}],["log",{"_index":240,"title":{},"body":{"interfaces/Add$Params.html":{},"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/FilterQualitysavelogModel.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualitysavelogModel.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["log.c_projectphase_quality_log_id",{"_index":1571,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["log.qualityvalue",{"_index":1566,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["log.service",{"_index":343,"title":{},"body":{"modules/ApiModule.html":{}}}],["log.service.ts",{"_index":2097,"title":{},"body":{"injectables/QualitySaveLogService.html":{},"coverage.html":{}}}],["log.service.ts:102",{"_index":2119,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:109",{"_index":2131,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:117",{"_index":2126,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:127",{"_index":2124,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:28",{"_index":2109,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:34",{"_index":2127,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:42",{"_index":2113,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:52",{"_index":2111,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:59",{"_index":2128,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:67",{"_index":2117,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:77",{"_index":2115,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:84",{"_index":2129,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log.service.ts:92",{"_index":2121,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["log/9000004",{"_index":233,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["log/fetch",{"_index":1069,"title":{},"body":{"interfaces/Fetch_1$Params.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logico",{"_index":1673,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["login",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["login$params",{"_index":683,"title":{"interfaces/Login$Params.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Login$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["login$response",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login$response(params",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(http",{"_index":1650,"title":{},"body":{"interfaces/Login$Params.html":{},"miscellaneous/functions.html":{}}}],["login(params",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(this.http",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.path",{"_index":1651,"title":{},"body":{"interfaces/Login$Params.html":{}}}],["login/pin",{"_index":559,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/username",{"_index":558,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loginpath",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpincomponent",{"_index":401,"title":{"components/LoginPinComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginusernamecomponent",{"_index":404,"title":{"components/LoginUsernameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logmodifier",{"_index":1479,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["logmodifiercomponent",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logmodifierloading",{"_index":1419,"title":{},"body":{"injectables/LoadingService.html":{}}}],["logo",{"_index":1841,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["logout",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logout$params",{"_index":698,"title":{"interfaces/Logout$Params.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Logout$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logout$response",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout$response(params",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout(http",{"_index":1871,"title":{},"body":{"interfaces/Logout$Params.html":{},"miscellaneous/functions.html":{}}}],["logout(params",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout(this.http",{"_index":717,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout.path",{"_index":1872,"title":{},"body":{"interfaces/Logout$Params.html":{}}}],["logout/logout.service",{"_index":1358,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["logoutdialog",{"_index":2200,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["logoutdialog.afterclosed().subscribe((result",{"_index":2202,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["logoutdialogcomponent",{"_index":408,"title":{"components/LogoutDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logoutpath",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logoutservice",{"_index":1329,"title":{"injectables/LogoutService.html":{}},"body":{"injectables/IframeInitializerService.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["logoutuserid",{"_index":1895,"title":{},"body":{"injectables/LogoutService.html":{}}}],["logs",{"_index":1453,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["logs.push(aux",{"_index":1572,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["logs.sort((firstlog",{"_index":1573,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["logtoupdate",{"_index":1581,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["logview",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{}}}],["logviewercomponent",{"_index":410,"title":{"components/LogViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logviewerloading",{"_index":1420,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loro",{"_index":1464,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["m_product_category_id",{"_index":141,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/optionType.html":{}}}],["m_product_id",{"_index":149,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"interfaces/Message.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/optionType.html":{}}}],["ma",{"_index":1890,"title":{},"body":{"injectables/LogoutService.html":{}}}],["maincontent",{"_index":971,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mainframe",{"_index":970,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mainviewcommunicationsservice",{"_index":1461,"title":{"injectables/MainViewCommunicationsService.html":{}},"body":{"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"coverage.html":{}}}],["mancano",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{}}}],["map",{"_index":249,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{}}}],["map((r",{"_index":291,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{}}}],["margin",{"_index":809,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["mat",{"_index":974,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["mat.define",{"_index":1619,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["mat.get",{"_index":1641,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["mat_dialog_data",{"_index":782,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":199,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionType.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1462,"title":{},"body":{"components/LogViewerComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["matdialogmodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":751,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["matformfieldmodule",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["matrix",{"_index":1187,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["matselectmodule",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglechange",{"_index":2283,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["matslidetogglemodule",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["mattablemodule",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":984,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SplashScreenComponent.html":{}}}],["media",{"_index":833,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{}}}],["media.matchmedia('(max",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["mediamatcher",{"_index":834,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["mediaquerylist",{"_index":874,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["men",{"_index":883,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["menu",{"_index":964,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mes_theme",{"_index":1093,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{}}}],["mes_theme_display",{"_index":1092,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{}}}],["mese",{"_index":2302,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["message",{"_index":901,"title":{"interfaces/Message.html":{}},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Message.html":{},"components/PhasesComponent.html":{},"coverage.html":{}}}],["messaggi",{"_index":1352,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["messaggio",{"_index":1353,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Message.html":{},"components/PhasesComponent.html":{}}}],["metadata",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["method",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/HeaderParameter.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"modules/ApiModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["metodo",{"_index":61,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["mette",{"_index":1904,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{}}}],["microsoft",{"_index":1792,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["min",{"_index":798,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{}}}],["minmax(0",{"_index":1833,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["miscellaneous",{"_index":2395,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1840,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/ToolbarComponent.html":{}}}],["mobilequery",{"_index":826,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["modalit",{"_index":1888,"title":{},"body":{"injectables/LogoutService.html":{},"components/PhasesComponent.html":{}}}],["mode",{"_index":887,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["model",{"_index":130,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{}}}],["model.ts",{"_index":1010,"title":{},"body":{"interfaces/ErrorModel.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"interfaces/JsonList.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"coverage.html":{},"interfaces/optionType.html":{}}}],["modella",{"_index":1914,"title":{},"body":{"interfaces/Message.html":{}}}],["modellate",{"_index":97,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["modelli",{"_index":1757,"title":{},"body":{"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["modello",{"_index":1089,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{}}}],["models/fetch",{"_index":1017,"title":{},"body":{"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["models/filter",{"_index":1040,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{}}}],["models/operators",{"_index":1062,"title":{},"body":{"interfaces/FetchResponseOperatorsModel.html":{}}}],["models/order",{"_index":1042,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{}}}],["models/qualityattribute",{"_index":1064,"title":{},"body":{"interfaces/FetchResponseQualityattributeModel.html":{}}}],["models/qualityphase",{"_index":1066,"title":{},"body":{"interfaces/FetchResponseQualityphaseModel.html":{}}}],["models/qualitysavelog",{"_index":258,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{}}}],["modern",{"_index":1784,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["modifica",{"_index":1518,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["modificare",{"_index":1475,"title":{},"body":{"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"pipes/OptionsPipe.html":{}}}],["modificata",{"_index":1556,"title":{},"body":{"components/LogViewerComponent.html":{},"pipes/OptionsPipe.html":{}}}],["modificato",{"_index":1485,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["modifier",{"_index":982,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modifier'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["modifier.component",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["modifier.component.ts",{"_index":2372,"title":{},"body":{"coverage.html":{}}}],["modifier/log",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["module",{"_index":309,"title":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":311,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":334,"title":{},"body":{"modules/ApiModule.html":{}}}],["more",{"_index":2444,"title":{},"body":{"index.html":{}}}],["mostrare",{"_index":1354,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{}}}],["moz",{"_index":1796,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["ms",{"_index":1794,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["multipart",{"_index":1280,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["multipart/form",{"_index":1279,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["multiple",{"_index":909,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mutationobserver(function",{"_index":2004,"title":{},"body":{"components/PhasesComponent.html":{}}}],["mydata",{"_index":747,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["n",{"_index":358,"title":{},"body":{"modules/ApiModule.html":{},"interfaces/JsonList.html":{},"interfaces/OperatorsModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"interfaces/optionType.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FilterOperatorsModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name[key",{"_index":1227,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["nasconde",{"_index":1713,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["nascondere",{"_index":877,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["nascondere/mostrare",{"_index":2228,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["nav",{"_index":2204,"title":{},"body":{"components/SidenavComponent.html":{}}}],["navigate",{"_index":2415,"title":{},"body":{"index.html":{}}}],["necessarie",{"_index":843,"title":{},"body":{"components/DashboardComponent.html":{}}}],["need",{"_index":356,"title":{},"body":{"modules/ApiModule.html":{},"index.html":{}}}],["negli",{"_index":86,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["nel",{"_index":771,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LoginPinComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["nell'applicazione",{"_index":1335,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/ToolbarComponent.html":{}}}],["nell'interfaccia",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nella",{"_index":1521,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{}}}],["new",{"_index":113,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/MainViewCommunicationsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1373,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["nextmonth",{"_index":2029,"title":{},"body":{"components/PhasesComponent.html":{}}}],["nextyear",{"_index":2033,"title":{},"body":{"components/PhasesComponent.html":{}}}],["ng",{"_index":2413,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":338,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":829,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngoninit",{"_index":749,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["ngx",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"dependencies.html":{}}}],["nodatarow",{"_index":1644,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["nome",{"_index":615,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["non",{"_index":844,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["none",{"_index":996,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["normale",{"_index":1720,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["note",{"_index":1094,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{}}}],["notifica",{"_index":1333,"title":{},"body":{"injectables/IframeInitializerService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{}}}],["notificare",{"_index":202,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["nowrap",{"_index":1632,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["null",{"_index":1165,"title":{},"body":{"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"miscellaneous/typealiases.html":{}}}],["nullo",{"_index":1866,"title":{},"body":{"components/LoginUsernameComponent.html":{},"pipes/SafePipe.html":{}}}],["number",{"_index":608,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/JsonList.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"components/SplashScreenComponent.html":{},"interfaces/optionType.html":{}}}],["numerica",{"_index":1686,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["numero",{"_index":1057,"title":{},"body":{"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{}}}],["numero_matricola",{"_index":1096,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{}}}],["nuova",{"_index":212,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["nuovi",{"_index":110,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["nuovo",{"_index":239,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthInformationsService.html":{},"components/ToolbarComponent.html":{}}}],["o",{"_index":1510,"title":{},"body":{"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["object",{"_index":215,"title":{},"body":{"injectables/ActivePhaseService.html":{},"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["object.keys(this.value",{"_index":1228,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["object.keys(value",{"_index":1170,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["objects",{"_index":1197,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["observable",{"_index":101,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["observer",{"_index":2003,"title":{},"body":{"components/PhasesComponent.html":{}}}],["observer.disconnect",{"_index":2010,"title":{},"body":{"components/PhasesComponent.html":{}}}],["observer.observe(document",{"_index":2011,"title":{},"body":{"components/PhasesComponent.html":{}}}],["occorre",{"_index":2194,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["occupa",{"_index":1874,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["odierna",{"_index":2298,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["oggetto",{"_index":99,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/MainViewCommunicationsService.html":{},"pipes/SafePipe.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["ogni",{"_index":17,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{}}}],["ondestroy",{"_index":822,"title":{},"body":{"components/DashboardComponent.html":{}}}],["one",{"_index":2247,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["oninit",{"_index":117,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["opacit",{"_index":2223,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["opacity",{"_index":1732,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{}}}],["opacitychange",{"_index":1657,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{}}}],["openfailsnackbar",{"_index":1457,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["openfailsnackbar(message",{"_index":1494,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["openlogoutdialog",{"_index":2184,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["openlogoutuserdialog",{"_index":2185,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["opensnackbar",{"_index":1325,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["opensnackbar(message",{"_index":1349,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["opensuccesssnackbar",{"_index":1458,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["opensuccesssnackbar(message",{"_index":1497,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["operation",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/HeaderParameter.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["operationpath",{"_index":1251,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["operations",{"_index":726,"title":{},"body":{"injectables/BaseService.html":{}}}],["operator",{"_index":154,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["operatore",{"_index":1705,"title":{},"body":{"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["operatori",{"_index":1026,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FilterOperatorsModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OrderOperatorsModel.html":{}}}],["operators",{"_index":1018,"title":{},"body":{"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FilterOperatorsModel.html":{},"injectables/OperatorsService.html":{},"interfaces/OrderOperatorsModel.html":{},"coverage.html":{}}}],["operatorsmodel",{"_index":1061,"title":{"interfaces/OperatorsModel.html":{}},"body":{"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/OperatorsModel.html":{},"coverage.html":{}}}],["operatorsservice",{"_index":321,"title":{"injectables/OperatorsService.html":{}},"body":{"modules/ApiModule.html":{},"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{},"injectables/OperatorsService.html":{},"coverage.html":{},"overview.html":{}}}],["option",{"_index":791,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{},"pipes/OptionsPipe.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["option.replaceall(key",{"_index":1948,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/ErrorModel.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["optional()@inject(mat_dialog_data",{"_index":779,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["options",{"_index":1122,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["options.accept",{"_index":1310,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["options.context",{"_index":1320,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["options.reportprogress",{"_index":1319,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["options.responsetype",{"_index":1318,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["optionspipe",{"_index":427,"title":{"pipes/OptionsPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/OptionsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["optionstrim",{"_index":1935,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["optiontype",{"_index":1396,"title":{"interfaces/optionType.html":{}},"body":{"interfaces/JsonList.html":{},"interfaces/QualityattributeModel.html":{},"coverage.html":{},"interfaces/optionType.html":{}}}],["optionvalue",{"_index":142,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/JsonList.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["opzione",{"_index":1940,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["opzioni",{"_index":72,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/JsonList.html":{},"pipes/OptionsPipe.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/optionType.html":{}}}],["orderby",{"_index":1027,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"components/PhasesComponent.html":{}}}],["orderoperatorsmodel",{"_index":1041,"title":{"interfaces/OrderOperatorsModel.html":{}},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{},"coverage.html":{}}}],["orderqualityattributemodel",{"_index":1046,"title":{"interfaces/OrderQualityattributeModel.html":{}},"body":{"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"coverage.html":{}}}],["orderqualityphasemodel",{"_index":1050,"title":{"interfaces/OrderQualityphaseModel.html":{}},"body":{"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"coverage.html":{}}}],["orderqualitysavelogmodel",{"_index":1054,"title":{"interfaces/OrderQualitysavelogModel.html":{}},"body":{"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"coverage.html":{}}}],["ordinare",{"_index":1036,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{}}}],["orizzontalmente",{"_index":1974,"title":{},"body":{"components/PhasesComponent.html":{}}}],["osserva",{"_index":1998,"title":{},"body":{"components/PhasesComponent.html":{}}}],["osservabile",{"_index":100,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{}}}],["ottenere",{"_index":62,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/AuthInformationsService.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["ottenuto",{"_index":1665,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["ottiene",{"_index":592,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["out",{"_index":326,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":1790,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["over",{"_index":890,"title":{},"body":{"components/DashboardComponent.html":{}}}],["overflow",{"_index":1627,"title":{},"body":{"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["overview",{"_index":2447,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":818,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["package",{"_index":2382,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":794,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["padre",{"_index":927,"title":{},"body":{"components/DashboardComponent.html":{}}}],["page",{"_index":2449,"title":{},"body":{"index.html":{}}}],["pagina",{"_index":1348,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{}}}],["pagine",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pairs",{"_index":1198,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["pairs.map(p",{"_index":1277,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["pairs.push([key",{"_index":1275,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["palette",{"_index":1618,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["palette($green",{"_index":1642,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["palette($red",{"_index":1643,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["palette(mat.$green",{"_index":1621,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["palette(mat.$red",{"_index":1620,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["panelclass",{"_index":1361,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["param",{"_index":135,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"pipes/OptionsPipe.html":{},"components/PhasesComponent.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{}}}],["parameter",{"_index":1120,"title":{"classes/Parameter.html":{}},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{}}}],["parameter:117",{"_index":1968,"title":{},"body":{"classes/PathParameter.html":{}}}],["parameter:40",{"_index":1128,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{}}}],["parameter:50",{"_index":1134,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/QueryParameter.html":{}}}],["parametercodec",{"_index":1146,"title":{"classes/ParameterCodec.html":{}},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parametercodecinstance",{"_index":1155,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parameteroptions",{"_index":1126,"title":{"interfaces/ParameterOptions.html":{}},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["parametri",{"_index":237,"title":{},"body":{"interfaces/Add$Params.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["parametro",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{}}}],["params",{"_index":163,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/Add$Params.html":{},"modules/ApiModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["params.adesuitetoken",{"_index":280,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Update$Params.html":{}}}],["params.append(`${this.name}[${key",{"_index":1230,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["params.append(key",{"_index":1234,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["params.append(this.name",{"_index":1221,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["params['inside",{"_index":912,"title":{},"body":{"components/DashboardComponent.html":{}}}],["parent",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["parentmodule",{"_index":349,"title":{},"body":{"modules/ApiModule.html":{}}}],["parsedjson",{"_index":180,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["parsedjson.key",{"_index":182,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["parsedjson.value",{"_index":183,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["part",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["parte",{"_index":1898,"title":{},"body":{"injectables/LogoutService.html":{}}}],["parziale",{"_index":1901,"title":{},"body":{"injectables/LogoutService.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["passaggio",{"_index":1910,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{}}}],["passare",{"_index":1694,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["passati",{"_index":1346,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["passing",{"_index":1301,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["passo",{"_index":590,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["password",{"_index":1649,"title":{},"body":{"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["path",{"_index":292,"title":{},"body":{"interfaces/Add$Params.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{}}}],["path(name",{"_index":1252,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["path.replace(`{${prefix}${this.name}${this.options.explode",{"_index":1209,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["path.replace(`{${this.name",{"_index":1208,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["pathmatch",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathparam",{"_index":1303,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["pathparam.append(path",{"_index":1305,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["pathparameter",{"_index":1179,"title":{"classes/PathParameter.html":{}},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{}}}],["pathparameter(name",{"_index":1254,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["per",{"_index":48,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"interfaces/QualitysavelogModel.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["perde",{"_index":1891,"title":{},"body":{"injectables/LogoutService.html":{}}}],["perform",{"_index":1316,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["permettono",{"_index":2098,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["phase",{"_index":211,"title":{},"body":{"injectables/ActivePhaseService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["phase.c_projectphase_id?.tostring",{"_index":1561,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["phase.end_plan",{"_index":2061,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phase.service",{"_index":123,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"modules/ApiModule.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["phase.service.ts",{"_index":200,"title":{},"body":{"injectables/ActivePhaseService.html":{},"injectables/QualityPhaseService.html":{},"coverage.html":{}}}],["phase.service.ts:17",{"_index":213,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["phase.service.ts:21",{"_index":2089,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["phase.service.ts:22",{"_index":207,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["phase.service.ts:27",{"_index":2094,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["phase.service.ts:33",{"_index":210,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["phase.service.ts:35",{"_index":2093,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["phase.service.ts:44",{"_index":208,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["phase.service.ts:45",{"_index":2091,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["phase.start_plan",{"_index":2057,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phase/active",{"_index":122,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{},"coverage.html":{}}}],["phase/fetch",{"_index":1076,"title":{},"body":{"interfaces/Fetch_2$Params.html":{},"injectables/QualityPhaseService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["phasename",{"_index":1108,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["phases",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{},"components/PhasesComponent.html":{}}}],["phases'},{'name",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["phases.component.html",{"_index":1977,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phases.component.scss",{"_index":1976,"title":{},"body":{"components/PhasesComponent.html":{}}}],["phasescomponent",{"_index":412,"title":{"components/PhasesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phasetitlehtml",{"_index":2141,"title":{},"body":{"interfaces/QualityphaseModel.html":{}}}],["pi",{"_index":1391,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["pin",{"_index":1015,"title":{},"body":{"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["pin'},{'name",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["pin.component",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pin.component.html",{"_index":1655,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.scss",{"_index":1654,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts",{"_index":1653,"title":{},"body":{"components/LoginPinComponent.html":{},"coverage.html":{}}}],["pin.component.ts:108",{"_index":1700,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:129",{"_index":1677,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:137",{"_index":1689,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:146",{"_index":1706,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:156",{"_index":1692,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:32",{"_index":1710,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:37",{"_index":1709,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:42",{"_index":1715,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:47",{"_index":1662,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:81",{"_index":1696,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin.component.ts:94",{"_index":1698,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pin/login",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginPinComponent.html":{},"coverage.html":{}}}],["pinbutton",{"_index":1837,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pinframe",{"_index":1829,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pipe",{"_index":287,"title":{"pipes/OptionsPipe.html":{},"pipes/SafePipe.html":{}},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"pipes/OptionsPipe.html":{},"pipes/SafePipe.html":{},"interfaces/Update$Params.html":{},"coverage.html":{}}}],["pipedelimited",{"_index":1224,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["pipes",{"_index":1932,"title":{},"body":{"pipes/OptionsPipe.html":{},"pipes/SafePipe.html":{},"overview.html":{}}}],["pipes/options.pipe",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/safe",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":1946,"title":{},"body":{"pipes/OptionsPipe.html":{},"pipes/SafePipe.html":{}}}],["plain",{"_index":1202,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["platform",{"_index":2437,"title":{},"body":{"index.html":{}}}],["plus",{"_index":1142,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["point",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["pointer",{"_index":1810,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["position",{"_index":1820,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["possibili",{"_index":888,"title":{},"body":{"components/DashboardComponent.html":{}}}],["post",{"_index":1022,"title":{},"body":{"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["postmessage",{"_index":919,"title":{},"body":{"components/DashboardComponent.html":{}}}],["precedenza",{"_index":579,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["precondizione",{"_index":1590,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["predefinito",{"_index":619,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["prefix",{"_index":1184,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["preme",{"_index":2002,"title":{},"body":{"components/PhasesComponent.html":{}}}],["preparare",{"_index":1701,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["prepareparams",{"_index":1658,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["prepareparams(token",{"_index":1699,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["presentate",{"_index":1970,"title":{},"body":{"components/PhasesComponent.html":{}}}],["presentazione",{"_index":753,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["presenti",{"_index":83,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["prevent",{"_index":1633,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["previous",{"_index":1745,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["previousmonth",{"_index":2026,"title":{},"body":{"components/PhasesComponent.html":{}}}],["previousyear",{"_index":2030,"title":{},"body":{"components/PhasesComponent.html":{}}}],["prima",{"_index":1664,"title":{},"body":{"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["primo",{"_index":2000,"title":{},"body":{"components/PhasesComponent.html":{}}}],["principale",{"_index":821,"title":{},"body":{"components/DashboardComponent.html":{},"components/SplashScreenComponent.html":{}}}],["private",{"_index":24,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["problemi",{"_index":907,"title":{},"body":{"components/DashboardComponent.html":{}}}],["prodotto",{"_index":2071,"title":{},"body":{"injectables/QualityAttributeService.html":{},"components/ToolbarComponent.html":{}}}],["produzione",{"_index":1078,"title":{},"body":{"interfaces/Fetch_2$Params.html":{},"miscellaneous/functions.html":{}}}],["programmatica",{"_index":1993,"title":{},"body":{"components/PhasesComponent.html":{}}}],["programmatico",{"_index":757,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["progress",{"_index":1296,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["project",{"_index":2405,"title":{},"body":{"index.html":{}}}],["projectplan_timeline_id",{"_index":1102,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"interfaces/optionType.html":{},"properties.html":{}}}],["propval",{"_index":1171,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["protected",{"_index":733,"title":{},"body":{"injectables/BaseService.html":{}}}],["prova",{"_index":222,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["provide",{"_index":347,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{}}}],["providedin",{"_index":131,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"injectables/ThemeService.html":{}}}],["providers",{"_index":316,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":328,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["provvista",{"_index":2188,"title":{},"body":{"components/SidenavComponent.html":{}}}],["public",{"_index":29,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/AuthInformationsService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["pulendo",{"_index":1691,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["pulsante",{"_index":1356,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["push",{"_index":891,"title":{},"body":{"components/DashboardComponent.html":{}}}],["put",{"_index":278,"title":{},"body":{"interfaces/Add$Params.html":{},"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["quale",{"_index":79,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/SidenavComponent.html":{}}}],["quali",{"_index":1029,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{}}}],["qualit",{"_index":241,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"interfaces/JsonList.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{},"interfaces/optionType.html":{}}}],["qualityattribute",{"_index":1044,"title":{},"body":{"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"injectables/QualityAttributeService.html":{},"coverage.html":{}}}],["qualityattributemodel",{"_index":70,"title":{"interfaces/QualityattributeModel.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/JsonList.html":{},"components/LogViewerComponent.html":{},"interfaces/QualityattributeModel.html":{},"coverage.html":{},"interfaces/optionType.html":{}}}],["qualityattributeservice",{"_index":34,"title":{"injectables/QualityAttributeService.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"modules/ApiModule.html":{},"injectables/QualityAttributeService.html":{},"coverage.html":{},"overview.html":{}}}],["qualityphase",{"_index":1048,"title":{},"body":{"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"injectables/QualityPhaseService.html":{},"coverage.html":{}}}],["qualityphasemodel",{"_index":59,"title":{"interfaces/QualityphaseModel.html":{}},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{},"coverage.html":{}}}],["qualityphaseservice",{"_index":322,"title":{"injectables/QualityPhaseService.html":{}},"body":{"modules/ApiModule.html":{},"injectables/IframeInitializerService.html":{},"components/PhasesComponent.html":{},"injectables/QualityPhaseService.html":{},"coverage.html":{},"overview.html":{}}}],["qualitysavelog",{"_index":1052,"title":{},"body":{"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/FilterQualitysavelogModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{}}}],["qualitysavelogmodel",{"_index":243,"title":{"interfaces/QualitysavelogModel.html":{}},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualitysavelogModel.html":{},"interfaces/Update$Params.html":{},"coverage.html":{}}}],["qualitysavelogservice",{"_index":323,"title":{"injectables/QualitySaveLogService.html":{}},"body":{"modules/ApiModule.html":{},"components/LogViewerComponent.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{},"overview.html":{}}}],["qualitystatus",{"_index":1114,"title":{},"body":{"interfaces/FilterQualitysavelogModel.html":{},"components/LogViewerComponent.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/QualitysavelogModel.html":{}}}],["qualityvalue",{"_index":1115,"title":{},"body":{"interfaces/FilterQualitysavelogModel.html":{},"components/LogViewerComponent.html":{},"interfaces/OrderQualitysavelogModel.html":{},"interfaces/QualitysavelogModel.html":{}}}],["qualora",{"_index":574,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["quando",{"_index":591,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/ToolbarComponent.html":{}}}],["quanto",{"_index":2278,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["query",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/ToolbarComponent.html":{}}}],["query(name",{"_index":1255,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["querylistener",{"_index":827,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["queryparam",{"_index":1307,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["queryparam.append(httpparams",{"_index":1309,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["queryparameter",{"_index":1217,"title":{"classes/QueryParameter.html":{}},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{}}}],["queryparameter(name",{"_index":1257,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["questa",{"_index":1616,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["r",{"_index":289,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["r.body",{"_index":716,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["radius",{"_index":1782,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/ToolbarComponent.html":{}}}],["rappresenta",{"_index":1687,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["rb",{"_index":275,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["rb.body(params.body",{"_index":281,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["rb.build",{"_index":284,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["rb.header('adesuitetoken",{"_index":279,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Update$Params.html":{}}}],["reactiveformsmodule",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["record",{"_index":1034,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["red",{"_index":1362,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["redirect",{"_index":946,"title":{},"body":{"components/DashboardComponent.html":{}}}],["redirectto",{"_index":554,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":2448,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1912,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{}}}],["register",{"_index":531,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localeit",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["registerwhenstable:30000",{"_index":542,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":541,"title":{},"body":{"modules/AppModule.html":{}}}],["reindirizza",{"_index":841,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{}}}],["reindirizzamenti",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{}}}],["reinserire",{"_index":2195,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["relativa",{"_index":297,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"injectables/IframeInitializerService.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["relative",{"_index":54,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{}}}],["relativi",{"_index":63,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["relativo",{"_index":293,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["reload",{"_index":2418,"title":{},"body":{"index.html":{}}}],["removelast",{"_index":1659,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["rendering",{"_index":1999,"title":{},"body":{"components/PhasesComponent.html":{}}}],["renderizzare",{"_index":1663,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["renderizzato",{"_index":2001,"title":{},"body":{"components/PhasesComponent.html":{}}}],["repeat",{"_index":1193,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["repeat(3",{"_index":1832,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["replace",{"_index":1200,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["replace(\"z",{"_index":2040,"title":{},"body":{"components/PhasesComponent.html":{}}}],["replaceall",{"_index":1949,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["report",{"_index":1295,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["reportprogress",{"_index":1299,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["request",{"_index":256,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"coverage.html":{}}}],["requestbuilder",{"_index":255,"title":{"classes/RequestBuilder.html":{}},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"coverage.html":{}}}],["requestbuilder(rooturl",{"_index":276,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["requests",{"_index":1245,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["reset",{"_index":325,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"injectables/LoadingService.html":{},"overview.html":{}}}],["response",{"_index":254,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["response.data",{"_index":1374,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["response.data.at(0",{"_index":1376,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["response.data.length",{"_index":1375,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/PhasesComponent.html":{}}}],["response.data?.foreach((log",{"_index":1564,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["response.data[0",{"_index":1761,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["response.data[0].ad_user_id",{"_index":1762,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["response.data[0].mes_theme",{"_index":1764,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["response.data[0].mes_theme.trim",{"_index":1766,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["response.data[0].name",{"_index":1763,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["response.data[0].name.trim",{"_index":1765,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["response.error",{"_index":1867,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["response.status",{"_index":1868,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["response.token",{"_index":1865,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["response.ts",{"_index":2459,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["responsetype",{"_index":285,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{}}}],["result",{"_index":1212,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["result.event",{"_index":1605,"title":{},"body":{"components/LogViewerComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["result.replace(/%2c/g",{"_index":1216,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["result.replace(/%3b/g",{"_index":1215,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["result.replace(/%3d/g",{"_index":1214,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["results",{"_index":198,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionType.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":784,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{}}}],["return",{"_index":175,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"modules/ApiModule.html":{},"modules/AppModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"interfaces/Update$Params.html":{}}}],["returns",{"_index":67,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"modules/ApiModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["reveal",{"_index":1783,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["rgba(0",{"_index":1838,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["ri",{"_index":2196,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["riassunto",{"_index":763,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{}}}],["richiamato",{"_index":849,"title":{},"body":{"components/DashboardComponent.html":{}}}],["richiesta",{"_index":266,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"interfaces/QualitysavelogModel.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["richieste",{"_index":1090,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{}}}],["richiesti",{"_index":1861,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["riferimento",{"_index":756,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["riga",{"_index":1031,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["righe",{"_index":1059,"title":{},"body":{"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["right",{"_index":808,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["riguarda",{"_index":2279,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["rimani",{"_index":1881,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["rimuove",{"_index":585,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LogViewerComponent.html":{}}}],["rimuovere",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/ToolbarComponent.html":{}}}],["riportare",{"_index":1425,"title":{},"body":{"injectables/LoadingService.html":{}}}],["ripristinare",{"_index":581,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["riservata",{"_index":1683,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["rispetto",{"_index":588,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["risposta",{"_index":271,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":132,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["rooturl",{"_index":263,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"injectables/BaseService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["rooturl(rooturl",{"_index":736,"title":{},"body":{"injectables/BaseService.html":{}}}],["rotate",{"_index":2329,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["rotellina",{"_index":1717,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["route",{"_index":835,"title":{},"body":{"components/DashboardComponent.html":{}}}],["router",{"_index":831,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{}}}],["routermodule",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":560,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":552,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":550,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2412,"title":{},"body":{"index.html":{}}}],["running",{"_index":2428,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":119,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":250,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{}}}],["s",{"_index":1398,"title":{},"body":{"interfaces/JsonList.html":{},"interfaces/QualityattributeModel.html":{},"components/SplashScreenComponent.html":{},"interfaces/optionType.html":{}}}],["safehtml",{"_index":2166,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safepipe",{"_index":428,"title":{"pipes/SafePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/SafePipe.html":{},"coverage.html":{},"overview.html":{}}}],["salvare",{"_index":1693,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["salvataggio",{"_index":628,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/QualitySaveLogService.html":{}}}],["salvati",{"_index":1489,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["sanifica",{"_index":2175,"title":{},"body":{"pipes/SafePipe.html":{}}}],["sanificare",{"_index":2169,"title":{},"body":{"pipes/SafePipe.html":{}}}],["sanificata",{"_index":2170,"title":{},"body":{"pipes/SafePipe.html":{}}}],["sanificazione",{"_index":2165,"title":{},"body":{"pipes/SafePipe.html":{}}}],["sanitizer",{"_index":2174,"title":{},"body":{"pipes/SafePipe.html":{}}}],["save",{"_index":232,"title":{},"body":{"interfaces/Add$Params.html":{},"modules/ApiModule.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch_1$Params.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaffolding",{"_index":2421,"title":{},"body":{"index.html":{}}}],["scalex",{"_index":2328,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["scelta",{"_index":768,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SplashScreenComponent.html":{}}}],["schermata",{"_index":1416,"title":{},"body":{"injectables/LoadingService.html":{}}}],["scorrere",{"_index":1972,"title":{},"body":{"components/PhasesComponent.html":{}}}],["screen",{"_index":989,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/SplashScreenComponent.html":{}}}],["screen'},{'name",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["screen.component",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["screen.component.html",{"_index":2211,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["screen.component.scss",{"_index":2210,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["screen.component.ts",{"_index":2208,"title":{},"body":{"components/SplashScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:16",{"_index":2229,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["screen.component.ts:22",{"_index":2222,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["screen.component.ts:27",{"_index":2227,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["screen.component.ts:32",{"_index":2217,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["screen.component.ts:53",{"_index":2221,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["screen/splash",{"_index":517,"title":{},"body":{"modules/AppModule.html":{},"components/SplashScreenComponent.html":{},"coverage.html":{}}}],["scroll",{"_index":2063,"title":{},"body":{"components/PhasesComponent.html":{}}}],["scrollbar",{"_index":2065,"title":{},"body":{"components/PhasesComponent.html":{}}}],["scrollingmodule",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["scuro",{"_index":602,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["se",{"_index":220,"title":{},"body":{"injectables/ActivePhaseService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LoadingService.html":{},"components/LoginPinComponent.html":{},"interfaces/Message.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["seconda",{"_index":1975,"title":{},"body":{"components/PhasesComponent.html":{}}}],["secondi",{"_index":1552,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["secondlog",{"_index":1574,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["secondlog.c_projectphase_quality_log_id",{"_index":1575,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["seconds",{"_index":537,"title":{},"body":{"modules/AppModule.html":{}}}],["securitycontext",{"_index":2172,"title":{},"body":{"pipes/SafePipe.html":{}}}],["see",{"_index":359,"title":{},"body":{"modules/ApiModule.html":{},"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["segnala",{"_index":767,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["seguente",{"_index":1602,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["select",{"_index":1978,"title":{},"body":{"components/PhasesComponent.html":{}}}],["select(id",{"_index":1987,"title":{},"body":{"components/PhasesComponent.html":{}}}],["selected",{"_index":1486,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["selectedlog",{"_index":1469,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["selectedlog.c_projectphase_quality_log_id",{"_index":1583,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["selectedlog[tablecolumns.at(index",{"_index":1596,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["selector",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["selezionare",{"_index":223,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["selezionata",{"_index":201,"title":{},"body":{"injectables/ActivePhaseService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["selezionato",{"_index":1468,"title":{},"body":{"components/LogViewerComponent.html":{},"components/ToolbarComponent.html":{}}}],["selezione",{"_index":82,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/PhasesComponent.html":{}}}],["sends",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["senza",{"_index":1945,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["separated",{"_index":1238,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["separator",{"_index":1133,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["serialization",{"_index":1219,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["serializevalue",{"_index":1124,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{}}}],["serializevalue(value",{"_index":1132,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["serve",{"_index":102,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["server",{"_index":1388,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{},"index.html":{}}}],["service",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["service.ts",{"_index":721,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{}}}],["service.ts:11",{"_index":722,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.ts:18",{"_index":723,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.ts:24",{"_index":725,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.ts:31",{"_index":731,"title":{},"body":{"injectables/BaseService.html":{}}}],["services",{"_index":329,"title":{},"body":{"modules/ApiModule.html":{},"injectables/BaseService.html":{}}}],["services/authentication.service",{"_index":341,"title":{},"body":{"modules/ApiModule.html":{}}}],["services/operators.service",{"_index":344,"title":{},"body":{"modules/ApiModule.html":{}}}],["services/quality",{"_index":342,"title":{},"body":{"modules/ApiModule.html":{}}}],["serviceworker",{"_index":532,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["servizi",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/QualitySaveLogService.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["servizio",{"_index":47,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/Add$Params.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["sessione",{"_index":1668,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["sessionstorage",{"_index":586,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["sessionstorage.getitem(\"adeuserid",{"_index":650,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["sessionstorage.getitem(\"adeusername",{"_index":652,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{}}}],["sessionstorage.getitem(\"adeusertheme",{"_index":654,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{}}}],["sessionstorage.getitem('adeuserid",{"_index":1738,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["sessionstorage.getitem('adeusername",{"_index":1739,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["sessionstorage.getitem('adeusertheme",{"_index":1740,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["sessionstorage.removeitem(\"adeuserid",{"_index":666,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["sessionstorage.removeitem(\"adeusertheme",{"_index":667,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["sessionstorage.setitem(\"adeuserid",{"_index":659,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["sessionstorage.setitem(\"adeusername",{"_index":661,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["sessionstorage.setitem(\"adeusertheme",{"_index":663,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["set",{"_index":655,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["setactivephase",{"_index":1979,"title":{},"body":{"components/PhasesComponent.html":{}}}],["setactivephase(phase",{"_index":1991,"title":{},"body":{"components/PhasesComponent.html":{}}}],["setinsideframe(inside",{"_index":896,"title":{},"body":{"components/DashboardComponent.html":{}}}],["setrooturl(rooturl",{"_index":730,"title":{},"body":{"injectables/BaseService.html":{}}}],["sets",{"_index":732,"title":{},"body":{"injectables/BaseService.html":{},"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["setter",{"_index":626,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{}}}],["settimana",{"_index":2304,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["settimeout",{"_index":1559,"title":{},"body":{"components/LogViewerComponent.html":{},"components/SplashScreenComponent.html":{}}}],["settoken(token",{"_index":624,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["setuserid(userid",{"_index":633,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["setusername(username",{"_index":639,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["setusertheme(usertheme",{"_index":643,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["shadow",{"_index":1828,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["show",{"_index":2231,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["showsplash",{"_index":2212,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["si",{"_index":221,"title":{},"body":{"injectables/ActivePhaseService.html":{},"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{}}}],["siamo",{"_index":914,"title":{},"body":{"components/DashboardComponent.html":{}}}],["siano",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sicuro",{"_index":1882,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["side",{"_index":892,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sidenav",{"_index":2181,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["sidenav.component.html",{"_index":2183,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":2182,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavcomponent",{"_index":414,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":1143,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["simple",{"_index":1181,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["single",{"_index":1235,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["size",{"_index":814,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["skeleton",{"_index":1995,"title":{},"body":{"components/PhasesComponent.html":{}}}],["skipself",{"_index":339,"title":{},"body":{"modules/ApiModule.html":{}}}],["slider",{"_index":2288,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["snackbar",{"_index":1332,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["software",{"_index":847,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{}}}],["solid",{"_index":1808,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["solo",{"_index":924,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/LogoutService.html":{}}}],["sono",{"_index":95,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{}}}],["soon",{"_index":533,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"index.html":{},"interfaces/optionType.html":{}}}],["space",{"_index":1631,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["spacedelimited",{"_index":1223,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["spacer",{"_index":2324,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["spagnolo",{"_index":2291,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["sparire",{"_index":1492,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["spin",{"_index":1789,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["spinner",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["splash",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["splashscreencomponent",{"_index":416,"title":{"components/SplashScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["splashtransition",{"_index":2213,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["src/.../9000004",{"_index":2397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.module.ts",{"_index":2400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../fetch",{"_index":2399,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../fetch.ts",{"_index":2398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../login.ts",{"_index":2401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logout.ts",{"_index":2402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../request",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../strict",{"_index":2458,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/api/api",{"_index":301,"title":{},"body":{"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"coverage.html":{}}}],["src/app/api/api.module.ts",{"_index":327,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/app/api/api.module.ts:30",{"_index":333,"title":{},"body":{"modules/ApiModule.html":{}}}],["src/app/api/base",{"_index":720,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{}}}],["src/app/api/fn/authentication/login.ts",{"_index":1648,"title":{},"body":{"interfaces/Login$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/api/fn/authentication/logout.ts",{"_index":1870,"title":{},"body":{"interfaces/Logout$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/api/fn/operators/fetch",{"_index":646,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{}}}],["src/app/api/fn/operators/fetch.ts",{"_index":1014,"title":{},"body":{"interfaces/Fetch$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/api/fn/quality",{"_index":231,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/api/models",{"_index":120,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"components/PhasesComponent.html":{}}}],["src/app/api/models/error",{"_index":1009,"title":{},"body":{"interfaces/ErrorModel.html":{},"coverage.html":{}}}],["src/app/api/models/fetch",{"_index":1024,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"coverage.html":{}}}],["src/app/api/models/filter",{"_index":1088,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"coverage.html":{}}}],["src/app/api/models/operators",{"_index":1919,"title":{},"body":{"interfaces/OperatorsModel.html":{},"coverage.html":{}}}],["src/app/api/models/order",{"_index":1951,"title":{},"body":{"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"coverage.html":{}}}],["src/app/api/models/qualityattribute",{"_index":129,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/JsonList.html":{},"interfaces/QualityattributeModel.html":{},"coverage.html":{},"interfaces/optionType.html":{}}}],["src/app/api/models/qualityphase",{"_index":2140,"title":{},"body":{"interfaces/QualityphaseModel.html":{},"coverage.html":{}}}],["src/app/api/models/qualitysavelog",{"_index":2142,"title":{},"body":{"interfaces/QualitysavelogModel.html":{},"coverage.html":{}}}],["src/app/api/request",{"_index":1118,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/api/services",{"_index":127,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/AuthInformationsService.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["src/app/api/services/authentication.service.ts",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/api/services/authentication.service.ts:18",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/api/services/authentication.service.ts:24",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/api/services/authentication.service.ts:32",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/api/services/authentication.service.ts:44",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/api/services/authentication.service.ts:57",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/api/services/authentication.service.ts:65",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/api/services/authentication.service.ts:77",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/api/services/operators.service.ts",{"_index":1920,"title":{},"body":{"injectables/OperatorsService.html":{},"coverage.html":{}}}],["src/app/api/services/operators.service.ts:17",{"_index":1923,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["src/app/api/services/operators.service.ts:23",{"_index":1928,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["src/app/api/services/operators.service.ts:31",{"_index":1927,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["src/app/api/services/operators.service.ts:41",{"_index":1925,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["src/app/api/services/quality",{"_index":2068,"title":{},"body":{"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{}}}],["src/app/api/strict",{"_index":2460,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":549,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/confirm",{"_index":737,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts",{"_index":820,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:100",{"_index":895,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:105",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:22",{"_index":881,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:27",{"_index":893,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:32",{"_index":875,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:37",{"_index":839,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:95",{"_index":897,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/log",{"_index":1443,"title":{},"body":{"components/LogViewerComponent.html":{},"coverage.html":{}}}],["src/app/components/login",{"_index":1652,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"coverage.html":{}}}],["src/app/components/logout",{"_index":1873,"title":{},"body":{"components/LogoutDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/phases/phases.component.ts",{"_index":1969,"title":{},"body":{"components/PhasesComponent.html":{},"coverage.html":{}}}],["src/app/components/phases/phases.component.ts:140",{"_index":1986,"title":{},"body":{"components/PhasesComponent.html":{}}}],["src/app/components/phases/phases.component.ts:150",{"_index":1988,"title":{},"body":{"components/PhasesComponent.html":{}}}],["src/app/components/phases/phases.component.ts:164",{"_index":1992,"title":{},"body":{"components/PhasesComponent.html":{}}}],["src/app/components/phases/phases.component.ts:25",{"_index":1994,"title":{},"body":{"components/PhasesComponent.html":{}}}],["src/app/components/phases/phases.component.ts:30",{"_index":1980,"title":{},"body":{"components/PhasesComponent.html":{}}}],["src/app/components/phases/phases.component.ts:56",{"_index":1985,"title":{},"body":{"components/PhasesComponent.html":{}}}],["src/app/components/sidenav/sidenav.component.ts",{"_index":2177,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/components/sidenav/sidenav.component.ts:16",{"_index":2187,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/sidenav/sidenav.component.ts:29",{"_index":2192,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/sidenav/sidenav.component.ts:54",{"_index":2197,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/splash",{"_index":2207,"title":{},"body":{"components/SplashScreenComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbar/toolbar.component.ts",{"_index":2260,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:103",{"_index":2276,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:112",{"_index":2273,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:120",{"_index":2284,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:129",{"_index":2280,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:154",{"_index":2281,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:23",{"_index":2287,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:29",{"_index":2297,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:34",{"_index":2305,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:39",{"_index":2292,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:44",{"_index":2295,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:49",{"_index":2285,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:54",{"_index":2294,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:59",{"_index":2293,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:64",{"_index":2271,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:89",{"_index":2277,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/models/message",{"_index":902,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{}}}],["src/app/models/message.ts",{"_index":1913,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/pipes/options.pipe.ts",{"_index":1933,"title":{},"body":{"pipes/OptionsPipe.html":{},"coverage.html":{}}}],["src/app/pipes/options.pipe.ts:20",{"_index":1937,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["src/app/pipes/safe",{"_index":2163,"title":{},"body":{"pipes/SafePipe.html":{},"coverage.html":{}}}],["src/app/services/active",{"_index":6,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{},"coverage.html":{}}}],["src/app/services/auth",{"_index":561,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/services/iframe",{"_index":903,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"coverage.html":{}}}],["src/app/services/language/language.service",{"_index":2307,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/services/language/language.service.ts",{"_index":1400,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/services/language/language.service.ts:16",{"_index":1403,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/services/language/language.service.ts:28",{"_index":1405,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/services/loading/loading.service",{"_index":1523,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{}}}],["src/app/services/loading/loading.service.ts",{"_index":1415,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading/loading.service.ts:15",{"_index":1432,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:20",{"_index":1434,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:25",{"_index":1423,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:35",{"_index":1437,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:42",{"_index":1427,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:53",{"_index":1431,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:64",{"_index":1424,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/logout/logout.service",{"_index":1997,"title":{},"body":{"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["src/app/services/logout/logout.service.ts",{"_index":1886,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{}}}],["src/app/services/logout/logout.service.ts:13",{"_index":1896,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/logout/logout.service.ts:25",{"_index":1897,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/logout/logout.service.ts:33",{"_index":1900,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/main",{"_index":1524,"title":{},"body":{"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"coverage.html":{}}}],["src/app/services/theme/theme.service",{"_index":2306,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/services/theme/theme.service.ts",{"_index":2253,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/services/theme/theme.service.ts:20",{"_index":2257,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:9",{"_index":2255,"title":{},"body":{"injectables/ThemeService.html":{}}}],["stable",{"_index":535,"title":{},"body":{"modules/AppModule.html":{}}}],["start_plan",{"_index":1107,"title":{},"body":{"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["start_plan_date",{"_index":2020,"title":{},"body":{"components/PhasesComponent.html":{}}}],["start_plan_date.setfullyear(previousyear",{"_index":2036,"title":{},"body":{"components/PhasesComponent.html":{}}}],["start_plan_date.setmonth(previousmonth",{"_index":2035,"title":{},"body":{"components/PhasesComponent.html":{}}}],["start_plan_date.toisostring().replace(\"t",{"_index":2039,"title":{},"body":{"components/PhasesComponent.html":{}}}],["start_plan_operator",{"_index":2015,"title":{},"body":{"components/PhasesComponent.html":{}}}],["started",{"_index":2404,"title":{"index.html":{}},"body":{}}],["startrow",{"_index":166,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["state",{"_index":96,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["state('in",{"_index":1731,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["statements",{"_index":2345,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":330,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["stato",{"_index":582,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/IframeInitializerService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["status",{"_index":719,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterQualityphaseModel.html":{},"injectables/IframeInitializerService.html":{},"interfaces/OrderQualityphaseModel.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{}}}],["status_operator",{"_index":2017,"title":{},"body":{"components/PhasesComponent.html":{}}}],["status_value",{"_index":2018,"title":{},"body":{"components/PhasesComponent.html":{}}}],["stay",{"_index":1876,"title":{},"body":{"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["stesso",{"_index":1592,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["stopmodifierloading",{"_index":1421,"title":{},"body":{"injectables/LoadingService.html":{}}}],["stopviewerloading",{"_index":1422,"title":{},"body":{"injectables/LoadingService.html":{}}}],["stored",{"_index":2425,"title":{},"body":{"index.html":{}}}],["strict",{"_index":252,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{}}}],["stricthttpresponse",{"_index":251,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/AuthenticationService.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{},"miscellaneous/typealiases.html":{}}}],["strictlang",{"_index":2267,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["string",{"_index":242,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{},"interfaces/optionType.html":{}}}],["string(value",{"_index":1178,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["stringa",{"_index":1685,"title":{},"body":{"components/LoginPinComponent.html":{},"pipes/OptionsPipe.html":{},"pipes/SafePipe.html":{}}}],["stringhe",{"_index":85,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/ToolbarComponent.html":{}}}],["struttura",{"_index":1011,"title":{},"body":{"interfaces/ErrorModel.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["style",{"_index":1158,"title":{},"body":{"classes/HeaderParameter.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{}}}],["styles",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["styleurls",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["su",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/PhasesComponent.html":{}}}],["subject",{"_index":111,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{}}}],["subscribe",{"_index":1372,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["subscribe((response",{"_index":173,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["subscribe(attributes",{"_index":1533,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["subscribe(params",{"_index":910,"title":{},"body":{"components/DashboardComponent.html":{}}}],["substring(0",{"_index":2041,"title":{},"body":{"components/PhasesComponent.html":{}}}],["subtree",{"_index":2014,"title":{},"body":{"components/PhasesComponent.html":{}}}],["successo",{"_index":1499,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["sulla",{"_index":1983,"title":{},"body":{"components/PhasesComponent.html":{}}}],["suo",{"_index":1477,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["super(config",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{}}}],["super(name",{"_index":1180,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["super.serializevalue(value",{"_index":1213,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["support",{"_index":2450,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2451,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1604,"title":{},"body":{"components/LogViewerComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["t",{"_index":2158,"title":{},"body":{"classes/RequestBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["tabella",{"_index":1502,"title":{},"body":{"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{}}}],["table",{"_index":1622,"title":{},"body":{"components/LogViewerComponent.html":{},"coverage.html":{}}}],["tableattributes",{"_index":1585,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["tableattributes.foreach((attribute",{"_index":1594,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["tablecolumns",{"_index":1588,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2381,"title":{},"body":{"coverage.html":{}}}],["tabletquery",{"_index":828,"title":{},"body":{"components/DashboardComponent.html":{}}}],["take",{"_index":900,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taking",{"_index":1206,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["tema",{"_index":595,"title":{},"body":{"injectables/AuthInformationsService.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["template",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateurl",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["tempo",{"_index":1719,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["termina",{"_index":1433,"title":{},"body":{"injectables/LoadingService.html":{}}}],["terminato",{"_index":1430,"title":{},"body":{"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{}}}],["test",{"_index":2431,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2440,"title":{},"body":{"index.html":{}}}],["testo",{"_index":1682,"title":{},"body":{"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{}}}],["tests",{"_index":2430,"title":{},"body":{"index.html":{}}}],["text",{"_index":806,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/ToolbarComponent.html":{}}}],["theme",{"_index":1917,"title":{},"body":{"interfaces/Message.html":{},"components/ToolbarComponent.html":{}}}],["theme/theme.service",{"_index":1359,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["themeservice",{"_index":1328,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/IframeInitializerService.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["this._bodycontent",{"_index":1276,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this._bodycontenttype",{"_index":1266,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this._header.set(name",{"_index":1259,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this._header.values",{"_index":1313,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this._path.set(name",{"_index":1253,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this._path.values",{"_index":1304,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this._query.set(name",{"_index":1256,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this._query.values",{"_index":1308,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this._rooturl",{"_index":734,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.activeattributes",{"_index":197,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["this.activeattributes.next(attributes",{"_index":196,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["this.activeattributesservice.getactiveattributes",{"_index":1532,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.activelanguage",{"_index":2310,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.activelanguage.next(language",{"_index":1413,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.activelogs",{"_index":1563,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.activelogs.find((log",{"_index":1582,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.activephase",{"_index":227,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["this.activephase.next(phase",{"_index":226,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["this.activephaseservice.getactivephase().subscribe(activephase",{"_index":137,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["this.activephaseservice.getactivephase().subscribe(phase",{"_index":1528,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.activephaseservice.update(phase",{"_index":2055,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.activephaseservice.update(response.data.at(0",{"_index":1377,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["this.add$response(params",{"_index":2133,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["this.animationduration",{"_index":2233,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["this.attributes",{"_index":1536,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.attributes.push",{"_index":1538,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.attributes.slice().map(attribute",{"_index":1586,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.authinfoservice.clear",{"_index":1363,"title":{},"body":{"injectables/IframeInitializerService.html":{},"injectables/LogoutService.html":{}}}],["this.authinfoservice.clearuser",{"_index":1902,"title":{},"body":{"injectables/LogoutService.html":{}}}],["this.authinfoservice.token",{"_index":162,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["this.authinfoservice.userid",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{}}}],["this.authinfoservice.username",{"_index":1365,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.authinfoservice.usertheme",{"_index":1366,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.authservice.login(params",{"_index":1864,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["this.blinklogid",{"_index":1549,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.clearuser",{"_index":665,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["this.config.rooturl",{"_index":735,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.delete$response(params",{"_index":2135,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["this.delete(selectedlog",{"_index":1607,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.dialog.open(confirmdatadialogcomponent",{"_index":1599,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.dialog.open(logoutdialogcomponent",{"_index":2201,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.dialogref.close",{"_index":789,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["this.displayedcolumns",{"_index":1534,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.displayedcolumns.filter(column",{"_index":1589,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.displayedcolumns.findindex(value",{"_index":1544,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.displayedcolumns.length",{"_index":1541,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.displayedcolumns.push(\"actions",{"_index":1545,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.fetch$response(params",{"_index":1931,"title":{},"body":{"injectables/OperatorsService.html":{}}}],["this.fetch_1$response(params",{"_index":2137,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["this.fetch_2$response(params",{"_index":2096,"title":{},"body":{"injectables/QualityPhaseService.html":{}}}],["this.fetch_3$response(params",{"_index":2084,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["this.fetchattributes(activephase",{"_index":138,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["this.filterjsonoptions(attribute",{"_index":176,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["this.form",{"_index":1742,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["this.form.controls['password'].value",{"_index":1862,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["this.form.controls['pin'].value",{"_index":1754,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["this.form.controls['username'].value",{"_index":1863,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["this.form.get('pin')?.value",{"_index":1746,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["this.form.invalid",{"_index":1751,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["this.form.setvalue",{"_index":1747,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["this.formbuilder.group",{"_index":1743,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["this.formdatavalue(v",{"_index":1274,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.formdatavalue(val",{"_index":1284,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.frompage",{"_index":787,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["this.highlighted",{"_index":1547,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.iconmobilequery",{"_index":2308,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.iconmobilequery.addeventlistener(\"change",{"_index":2309,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.iconmobilequery.removeeventlistener(\"change",{"_index":2317,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.iframeinitservice.initialize(data",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.insideframe",{"_index":911,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.isdark",{"_index":2314,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.languageservice.activelanguage.subscribe",{"_index":2316,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.languageservice.changelanguage(data.lang",{"_index":1368,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["this.languageservice.changelanguage(language",{"_index":2318,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.languageservice.changelanguage(this.activelanguage",{"_index":2312,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.lastphase",{"_index":1529,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.lastvalue",{"_index":225,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["this.loading",{"_index":1439,"title":{},"body":{"injectables/LoadingService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["this.loading.next(false",{"_index":1442,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingservice.loading.subscribe(show",{"_index":2230,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["this.loadingservice.reset",{"_index":1736,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["this.loadingservice.stopviewerloading",{"_index":1531,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.login$response(params",{"_index":714,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.logmodifierloading",{"_index":1440,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.logout$response(params",{"_index":718,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.logoutservice.logout",{"_index":1389,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.logoutservice.logoutuserid",{"_index":2203,"title":{},"body":{"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.logs.next(logs",{"_index":1577,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.logviewerloading",{"_index":1441,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.mainviewcommunicationsservice.updatelog.next(logtoupdate",{"_index":1584,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.mainviewcommunicationsservice.viewupdate.next(log",{"_index":1613,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.mainviewcommunicationsservice.viewupdate.subscribe((updatedlog",{"_index":1546,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.mobilequery",{"_index":952,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.mobilequery.addeventlistener(\"change",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.mobilequery.removeeventlistener(\"change",{"_index":963,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.mydata",{"_index":788,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["this.name",{"_index":1191,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.name}=${this.serializevalue(v",{"_index":1195,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.opacitychange",{"_index":1741,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{}}}],["this.openfailsnackbar(\"errore",{"_index":1542,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.opensnackbar((this.translateservice.instant(\"il",{"_index":1752,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["this.opensnackbar(this.translateservice.instant(\"errore",{"_index":1378,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["this.opensnackbar(this.translateservice.instant(\"il",{"_index":1767,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["this.opensnackbar(this.translateservice.instant(\"inserire",{"_index":1860,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["this.opensnackbar(this.translateservice.instant(\"la",{"_index":2053,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.opensuccesssnackbar(\"eliminazione",{"_index":1610,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.operationpath",{"_index":1302,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.operatorsservice.fetch(params",{"_index":1760,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["this.options",{"_index":1163,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.options.explode",{"_index":1166,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.options.style",{"_index":1164,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.phases",{"_index":2044,"title":{},"body":{"components/PhasesComponent.html":{}}}],["this.prepareparams(token",{"_index":1759,"title":{},"body":{"components/LoginPinComponent.html":{}}}],["this.qualityattributeservice.fetch_3(params",{"_index":172,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["this.qualityphaseservice.fetch_2(params",{"_index":1371,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/PhasesComponent.html":{}}}],["this.qualitysavelogservice.delete(params).subscribe",{"_index":1609,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.qualitysavelogservice.fetch_1(params).subscribe",{"_index":1562,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.querylistener",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.rooturl",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/HeaderParameter.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.route.queryparams.pipe(take(1",{"_index":906,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.router.navigate(['dashboard",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{}}}],["this.router.navigate(['login/pin",{"_index":1859,"title":{},"body":{"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{}}}],["this.router.navigate(['login/username",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"injectables/LogoutService.html":{}}}],["this.sanitizer.sanitize(securitycontext.html",{"_index":2176,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this.serializevalue(array",{"_index":1241,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.serializevalue(propval",{"_index":1231,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.serializevalue(propval).split(separator).join(encodeuricomponent(separator",{"_index":1173,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.serializevalue(this.value",{"_index":1225,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.serializevalue(v",{"_index":1222,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.serializevalue(v).split(separator).join(encodeuricomponent(separator))).join(separator",{"_index":1168,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.serializevalue(value",{"_index":1199,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.showsplash",{"_index":2232,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["this.snackbar.open(message",{"_index":1360,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["this.snackbar.open(this.translateservice.instant(message",{"_index":1579,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.splashtransition",{"_index":2235,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["this.tabletquery",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.tabletquery.addeventlistener(\"change",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.tabletquery.removeeventlistener(\"change",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.themeservice.toggletheme(data.theme",{"_index":1394,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["this.themeservice.toggletheme(this.isdark",{"_index":2315,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.token",{"_index":647,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["this.translateservice.instant('eliminazione",{"_index":1600,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.translateservice.instant('vuoi",{"_index":1601,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.translateservice.instant(booleantranslated",{"_index":1597,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.translateservice.setdefaultlang('it",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.use(localstorage.getitem('lang",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{}}}],["this.update$response(params",{"_index":2139,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["this.update(response.data!.map((attribute",{"_index":174,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["this.updatetable(phase",{"_index":1530,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.updatetable(this.lastphase",{"_index":1548,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["this.user",{"_index":2313,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.userid",{"_index":649,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["this.username",{"_index":651,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["this.usertheme",{"_index":653,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["this.value",{"_index":1183,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["this.value[key",{"_index":1229,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["throw",{"_index":350,"title":{},"body":{"modules/ApiModule.html":{}}}],["tipi",{"_index":2178,"title":{},"body":{"components/SidenavComponent.html":{}}}],["tipo",{"_index":75,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["title",{"_index":783,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["titlecase",{"_index":2321,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["titolo",{"_index":762,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["toappend",{"_index":1282,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["today",{"_index":2268,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toggle",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"components/ToolbarComponent.html":{}}}],["toggletheme",{"_index":2254,"title":{},"body":{"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["toggletheme(dark",{"_index":2256,"title":{},"body":{"injectables/ThemeService.html":{}}}],["toggletheme(undefined",{"_index":2282,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["togliere",{"_index":1938,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["token",{"_index":161,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["token(token",{"_index":656,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["token/id",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{}}}],["toolbar",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component.html",{"_index":2263,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":2262,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":419,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["totale",{"_index":1058,"title":{},"body":{"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["totalrows",{"_index":1055,"title":{},"body":{"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["tra",{"_index":1911,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{}}}],["tracciamento",{"_index":1465,"title":{},"body":{"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{}}}],["tradotta",{"_index":2275,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["traduzione",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["traduzioni",{"_index":1336,"title":{},"body":{"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["tramite",{"_index":918,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/MainViewCommunicationsService.html":{}}}],["tranne",{"_index":2024,"title":{},"body":{"components/PhasesComponent.html":{}}}],["transform",{"_index":1824,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"pipes/OptionsPipe.html":{},"pipes/SafePipe.html":{},"components/ToolbarComponent.html":{}}}],["transform(option",{"_index":1936,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["transform(style",{"_index":2167,"title":{},"body":{"pipes/SafePipe.html":{}}}],["transition",{"_index":1726,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["transition(':enter",{"_index":1733,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["transizione",{"_index":2220,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["translate",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{}}}],["translate/core",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":507,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["translation",{"_index":2334,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["tre",{"_index":2189,"title":{},"body":{"components/SidenavComponent.html":{}}}],["tree",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["trigger",{"_index":1725,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["trigger('fadeinout",{"_index":1730,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["triggerarne",{"_index":759,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["trim",{"_index":1950,"title":{},"body":{"pipes/OptionsPipe.html":{}}}],["trovare",{"_index":295,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{}}}],["trovate",{"_index":1060,"title":{},"body":{"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["trovati",{"_index":1035,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["true",{"_index":913,"title":{},"body":{"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{}}}],["ts",{"_index":1210,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["tslib",{"_index":2391,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":335,"title":{},"body":{"modules/ApiModule.html":{}}}],["tutti",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["tutto",{"_index":2023,"title":{},"body":{"components/PhasesComponent.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"injectables/ApiConfiguration.html":{},"interfaces/ApiConfigurationParams.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch$Params.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Logout$Params.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"injectables/OperatorsService.html":{},"pipes/OptionsPipe.html":{},"interfaces/OrderOperatorsModel.html":{},"interfaces/OrderQualityattributeModel.html":{},"interfaces/OrderQualityphaseModel.html":{},"interfaces/OrderQualitysavelogModel.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"pipes/SafePipe.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/optionType.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2456,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1169,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["types",{"_index":1291,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["ultima",{"_index":216,"title":{},"body":{"injectables/ActivePhaseService.html":{},"components/LogViewerComponent.html":{}}}],["un",{"_index":73,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"interfaces/Add$Params.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/ErrorModel.html":{},"interfaces/Fetch_1$Params.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"components/LogViewerComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"interfaces/Message.html":{},"interfaces/OperatorsModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualitysavelogModel.html":{},"pipes/SafePipe.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{},"interfaces/optionType.html":{}}}],["una",{"_index":1025,"title":{},"body":{"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/PhasesComponent.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"pipes/SafePipe.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":160,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["unit",{"_index":2429,"title":{},"body":{"index.html":{}}}],["update",{"_index":31,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/QualitySaveLogService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["update$params",{"_index":2123,"title":{"interfaces/Update$Params.html":{}},"body":{"injectables/QualitySaveLogService.html":{},"interfaces/Update$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["update$response",{"_index":2108,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["update$response(params",{"_index":2125,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["update(attributes",{"_index":106,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["update(http",{"_index":2339,"title":{},"body":{"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["update(params",{"_index":2122,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["update(phase",{"_index":209,"title":{},"body":{"injectables/ActivePhaseService.html":{}}}],["update(this.http",{"_index":2138,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["update.path",{"_index":2340,"title":{},"body":{"interfaces/Update$Params.html":{}}}],["update.ts",{"_index":2337,"title":{},"body":{"interfaces/Update$Params.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatedlog.c_projectphase_quality_log_id",{"_index":1550,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["updatelog",{"_index":1906,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{}}}],["updatepath",{"_index":2102,"title":{},"body":{"injectables/QualitySaveLogService.html":{}}}],["updatetable",{"_index":1459,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["updatetable(phase",{"_index":1500,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["uploads",{"_index":1297,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["url",{"_index":264,"title":{},"body":{"interfaces/Add$Params.html":{},"injectables/BaseService.html":{},"components/DashboardComponent.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"classes/HeaderParameter.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["url(\"../../../assets/images/logo",{"_index":2248,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["url(\"../../../assets/images/three",{"_index":2251,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["urlencoded",{"_index":1270,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["usare",{"_index":2296,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["uscire",{"_index":1884,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["use",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogViewerComponent.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"index.html":{}}}],["used",{"_index":1188,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["usefactory",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":2269,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["user_id",{"_index":1918,"title":{},"body":{"interfaces/Message.html":{}}}],["userid",{"_index":565,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{}}}],["userid(userid",{"_index":658,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["username",{"_index":566,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"interfaces/Login$Params.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"interfaces/Message.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["username'},{'name",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["username(username",{"_index":660,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["username.component",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["username.component.html",{"_index":1850,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["username.component.scss",{"_index":1849,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["username.component.ts",{"_index":1848,"title":{},"body":{"components/LoginUsernameComponent.html":{},"coverage.html":{}}}],["username.component.ts:30",{"_index":1857,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["username.component.ts:35",{"_index":1856,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["username.component.ts:40",{"_index":1858,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["username.component.ts:45",{"_index":1852,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["username.component.ts:70",{"_index":1854,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["username.component.ts:83",{"_index":1855,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["username.component.ts:94",{"_index":1853,"title":{},"body":{"components/LoginUsernameComponent.html":{}}}],["username/login",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginUsernameComponent.html":{},"coverage.html":{}}}],["userpin",{"_index":1098,"title":{},"body":{"interfaces/FilterOperatorsModel.html":{},"components/LoginPinComponent.html":{},"interfaces/OperatorsModel.html":{},"interfaces/OrderOperatorsModel.html":{}}}],["usertheme",{"_index":567,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["usertheme(usertheme",{"_index":662,"title":{},"body":{"injectables/AuthInformationsService.html":{}}}],["usevalue",{"_index":348,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{}}}],["using",{"_index":1233,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["utente",{"_index":584,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/DashboardComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/LogoutService.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["utilit",{"_index":260,"title":{},"body":{"interfaces/Add$Params.html":{},"interfaces/Delete$Params.html":{},"interfaces/Fetch$Params.html":{},"interfaces/Fetch_1$Params.html":{},"interfaces/Fetch_2$Params.html":{},"interfaces/Fetch_3$Params.html":{},"interfaces/Login$Params.html":{},"interfaces/Logout$Params.html":{},"interfaces/Update$Params.html":{},"miscellaneous/functions.html":{}}}],["utilizzo",{"_index":1345,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["v",{"_index":1220,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["val",{"_index":1272,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["validators",{"_index":1724,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["validators.required",{"_index":1744,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["valido",{"_index":1392,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LoginPinComponent.html":{}}}],["valore",{"_index":629,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{},"pipes/OptionsPipe.html":{}}}],["valori",{"_index":889,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/JsonList.html":{},"components/LogViewerComponent.html":{}}}],["value",{"_index":90,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/ApiConfiguration.html":{},"injectables/AuthInformationsService.html":{},"injectables/AuthenticationService.html":{},"components/DashboardComponent.html":{},"interfaces/FilterOperatorsModel.html":{},"interfaces/FilterQualityattributeModel.html":{},"interfaces/FilterQualityphaseModel.html":{},"interfaces/FilterQualitysavelogModel.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"interfaces/JsonList.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"injectables/OperatorsService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"interfaces/QualityattributeModel.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/optionType.html":{},"miscellaneous/variables.html":{}}}],["value.join",{"_index":1196,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["value.map(v",{"_index":1167,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["value.type",{"_index":1267,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["value?.tostring",{"_index":169,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["value[key",{"_index":1172,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["values",{"_index":1144,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["var",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["vari",{"_index":1343,"title":{},"body":{"injectables/IframeInitializerService.html":{}}}],["variabile",{"_index":1669,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"injectables/ThemeService.html":{}}}],["variable",{"_index":1203,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"coverage.html":{}}}],["variables",{"_index":2462,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.scss",{"_index":1778,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["variant",{"_index":1205,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["varie",{"_index":81,"title":{},"body":{"injectables/ActiveAttributesService.html":{}}}],["venga",{"_index":1557,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["verifico",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{}}}],["version",{"_index":2409,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":2332,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["verticalmente",{"_index":1973,"title":{},"body":{"components/PhasesComponent.html":{}}}],["verticalposition",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["vi",{"_index":1666,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["via",{"_index":2433,"title":{},"body":{"index.html":{}}}],["video",{"_index":613,"title":{},"body":{"injectables/AuthInformationsService.html":{},"pipes/OptionsPipe.html":{}}}],["viene",{"_index":848,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/ToolbarComponent.html":{}}}],["view",{"_index":1525,"title":{},"body":{"components/LogViewerComponent.html":{},"injectables/MainViewCommunicationsService.html":{},"coverage.html":{}}}],["viewer",{"_index":986,"title":{},"body":{"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{}}}],["viewer'},{'name",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["viewer.component",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.component.html",{"_index":1447,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.scss",{"_index":1446,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts",{"_index":1444,"title":{},"body":{"components/LogViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:114",{"_index":1501,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:163",{"_index":1495,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:174",{"_index":1498,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:184",{"_index":1481,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:193",{"_index":1474,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:204",{"_index":1471,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:248",{"_index":1467,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:28",{"_index":1515,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:33",{"_index":1503,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:38",{"_index":1519,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:43",{"_index":1514,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:48",{"_index":1506,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:53",{"_index":1511,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:58",{"_index":1463,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer.component.ts:82",{"_index":1487,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["viewer/log",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"components/LogViewerComponent.html":{},"coverage.html":{}}}],["viewport",{"_index":2064,"title":{},"body":{"components/PhasesComponent.html":{}}}],["viewupdate",{"_index":1907,"title":{},"body":{"injectables/MainViewCommunicationsService.html":{}}}],["visibili",{"_index":1520,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["visibility",{"_index":1772,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["visibility_off",{"_index":1771,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{}}}],["vista",{"_index":840,"title":{},"body":{"components/DashboardComponent.html":{}}}],["visualizza",{"_index":2070,"title":{},"body":{"injectables/QualityAttributeService.html":{}}}],["visualizzano",{"_index":1056,"title":{},"body":{"interfaces/FetchResponseOperatorsModel.html":{},"interfaces/FetchResponseQualityattributeModel.html":{},"interfaces/FetchResponseQualityphaseModel.html":{},"interfaces/FetchResponseQualitysavelogModel.html":{}}}],["visualizzare",{"_index":612,"title":{},"body":{"injectables/AuthInformationsService.html":{},"interfaces/FetchRequestOperatorsModel.html":{},"interfaces/FetchRequestQualityattributeModel.html":{},"interfaces/FetchRequestQualityphaseModel.html":{},"interfaces/FetchRequestQualitysavelogModel.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/PhasesComponent.html":{}}}],["visualizzata",{"_index":873,"title":{},"body":{"components/DashboardComponent.html":{}}}],["visualizzazione",{"_index":204,"title":{},"body":{"injectables/ActivePhaseService.html":{},"components/DashboardComponent.html":{},"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{},"components/ToolbarComponent.html":{}}}],["void",{"_index":68,"title":{},"body":{"injectables/ActiveAttributesService.html":{},"injectables/ActivePhaseService.html":{},"injectables/AuthInformationsService.html":{},"injectables/BaseService.html":{},"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"classes/HeaderParameter.html":{},"injectables/IframeInitializerService.html":{},"injectables/LanguageService.html":{},"injectables/LoadingService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"injectables/LogoutService.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"components/PhasesComponent.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"injectables/ThemeService.html":{},"components/ToolbarComponent.html":{}}}],["voler",{"_index":1883,"title":{},"body":{"components/LogoutDialogComponent.html":{}}}],["vuole",{"_index":1516,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["webkit",{"_index":1787,"title":{},"body":{"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["weight",{"_index":816,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["whether",{"_index":1294,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["whichever",{"_index":538,"title":{},"body":{"modules/AppModule.html":{}}}],["white",{"_index":804,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{}}}],["white.svg",{"_index":2249,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["whose",{"_index":1236,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["widget",{"_index":926,"title":{},"body":{"components/DashboardComponent.html":{}}}],["width",{"_index":796,"title":{},"body":{"components/ConfirmDataDialogComponent.html":{},"components/DashboardComponent.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/LogoutDialogComponent.html":{},"components/PhasesComponent.html":{},"components/SidenavComponent.html":{},"components/SplashScreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["window.addeventlistener(\"message",{"_index":922,"title":{},"body":{"components/DashboardComponent.html":{}}}],["within",{"_index":1638,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["without",{"_index":1232,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["wm",{"_index":618,"title":{},"body":{"injectables/AuthInformationsService.html":{},"components/LoginPinComponent.html":{},"interfaces/Message.html":{},"components/ToolbarComponent.html":{}}}],["word",{"_index":1636,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["worker",{"_index":515,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["wrap",{"_index":1635,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["wrapping",{"_index":1634,"title":{},"body":{"components/LogViewerComponent.html":{}}}],["ww",{"_index":2323,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["www",{"_index":1269,"title":{},"body":{"classes/HeaderParameter.html":{},"classes/Parameter.html":{},"classes/ParameterCodec.html":{},"interfaces/ParameterOptions.html":{},"classes/PathParameter.html":{},"classes/QueryParameter.html":{},"classes/RequestBuilder.html":{}}}],["x",{"_index":1379,"title":{},"body":{"injectables/IframeInitializerService.html":{},"components/LogViewerComponent.html":{},"components/LoginPinComponent.html":{},"components/LoginUsernameComponent.html":{},"components/PhasesComponent.html":{}}}],["y",{"_index":1397,"title":{},"body":{"interfaces/JsonList.html":{},"interfaces/OperatorsModel.html":{},"interfaces/QualityattributeModel.html":{},"interfaces/QualityphaseModel.html":{},"interfaces/QualitysavelogModel.html":{},"interfaces/optionType.html":{}}}],["yes",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/OperatorsService.html":{},"injectables/QualityAttributeService.html":{},"injectables/QualityPhaseService.html":{},"injectables/QualitySaveLogService.html":{},"classes/RequestBuilder.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":2240,"title":{},"body":{"components/SplashScreenComponent.html":{}}}],["zone.js",{"_index":2393,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":324,"title":{},"body":{"modules/ApiModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ActiveAttributesService.html":{"url":"injectables/ActiveAttributesService.html","title":"injectable - ActiveAttributesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveAttributesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/active-attributes/active-attributes.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce gli attributi attivi\nAd ogni cambio di fase, aggiorna gli attributi\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeAttributes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchAttributes\n                            \n                            \n                                    Private\n                                filterJsonOptions\n                            \n                            \n                                    Public\n                                getActiveAttributes\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qualityAttributeService: QualityAttributeService, authInfoService: AuthInformationsService, activePhaseService: ActivePhaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/active-attributes/active-attributes.service.ts:21\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce gli attributi attivi\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        qualityAttributeService\n                                                  \n                                                        \n                                                                        QualityAttributeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per l'ottenimento degli attributi attivi\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        activePhaseService\n                                                  \n                                                        \n                                                                        ActivePhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire la fase attiva\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        fetchAttributes\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAttributes(activePhase: QualityphaseModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/active-attributes/active-attributes.service.ts:37\n                \n            \n\n\n            \n                \n                    Metodo per ottenere gli attributi relativi alla fase attualmente attiva\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activePhase\n                                    \n                                                QualityphaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Fase attualmente attiva\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        filterJsonOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterJsonOptions(attribute: QualityattributeModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/active-attributes/active-attributes.service.ts:71\n                \n            \n\n\n            \n                \n                    Metodo per ottenere le opzioni per un attributo di tipo \"lista\"\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                QualityattributeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Attributo per il quale individuare le varie opzioni di selezione (presenti come stringhe negli array 'key' e 'value' all'avvio)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QualityattributeModel\n\n                    \n                    \n                        L'attributo in ingresso al quale le opzioni sono state modellate\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getActiveAttributes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getActiveAttributes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/active-attributes/active-attributes.service.ts:117\n                \n            \n\n\n            \n                \n                    Metodo per ottenere un oggetto osservabile degli attributi attivi\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto osservabile, serve per eseguire codice al cambiamento degli attributi attivi\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(attributes: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/active-attributes/active-attributes.service.ts:109\n                \n            \n\n\n            \n                \n                    Metodo per aggiornare gli attributi attivi\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    attributes\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nuovi attributi attivi\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject>\n\n                    \n                \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/active-attributes/active-attributes.service.ts:21\n                        \n                    \n\n            \n                \n                    Subject che emette gli attributi attivi dopo ogni cambio di fase attiva\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { QualityattributeModel, QualityphaseModel } from 'src/app/api/models';\nimport { ActivePhaseService } from '../active-phase/active-phase.service';\nimport { AuthInformationsService } from '../auth-informations/auth-informations.service';\nimport { QualityAttributeService } from 'src/app/api/services';\nimport { JsonList } from 'src/app/api/models/qualityattribute-model';\n\n/**\n * Classe che gestisce gli attributi attivi\n * Ad ogni cambio di fase, aggiorna gli attributi\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveAttributesService {\n\n  /**\n   * Subject che emette gli attributi attivi dopo ogni cambio di fase attiva\n   */\n  private activeAttributes: Subject> = new Subject>();\n\n  /**\n   * Costruttore della classe che gestisce gli attributi attivi\n   * @param qualityAttributeService Servizio per l'ottenimento degli attributi attivi\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione \n   * @param activePhaseService Servizio per gestire la fase attiva\n   */\n  constructor(private qualityAttributeService: QualityAttributeService, private authInfoService: AuthInformationsService, private activePhaseService: ActivePhaseService) {\n    this.activePhaseService.getActivePhase().subscribe(activePhase => { this.fetchAttributes(activePhase) });\n  }\n\n  /**\n * Metodo per ottenere gli attributi relativi alla fase attualmente attiva\n * @param activePhase Fase attualmente attiva\n */\n  private fetchAttributes(activePhase: QualityphaseModel): void {\n\n    const fieldName = \"m_product_category_id\" as 'optionvalue' | 'groupname' | 'groupdescription' | 'c_project_attribute_group_id' | 'attributeseqno' | 'attributedescription' | 'ad_reference_id' | 'm_product_category_id' | 'm_product_id' | 'attributevaluetype' | 'attributevalue' | 'attributename'\n    const value = activePhase.m_product_category_id;\n    const operator = \"equals\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined;\n    const token = this.authInfoService.Token;\n\n    const params = {\n      \"AdesuiteToken\": token,\n      \"body\": {\n        \"startRow\": 0,\n        \"criteria\": [\n          {\n            \"fieldName\": fieldName as 'optionvalue' | 'groupname' | 'groupdescription' | 'c_project_attribute_group_id' | 'attributeseqno' | 'attributedescription' | 'ad_reference_id' | 'm_product_category_id' | 'm_product_id' | 'attributevaluetype' | 'attributevalue' | 'attributename',\n            \"value\": value?.toString(),\n            \"operator\": operator as 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals'\n          },\n        ],\n        \"endRow\": 50\n      }\n    };\n\n    this.qualityAttributeService.fetch_3(params)\n      .subscribe((response) => {\n        this.update(response.data!.map((attribute) => { return this.filterJsonOptions(attribute) }));\n      });\n  }\n\n\n  /**\n   * Metodo per ottenere le opzioni per un attributo di tipo \"lista\"\n   * @param attribute Attributo per il quale individuare le varie opzioni di selezione (presenti come stringhe negli array 'key' e 'value' all'avvio)\n   * @returns L'attributo in ingresso al quale le opzioni sono state modellate\n   */\n  private filterJsonOptions(attribute: QualityattributeModel): QualityattributeModel {\n    let json = attribute.optionvalue?.value.toString();\n    let dataList: JsonList = {\n      key: [],\n      value: []\n    };\n    if (json != undefined) {\n      const parsedJson = JSON.parse(json);\n      dataList = {\n        key: parsedJson.key,\n        value: parsedJson.value,\n      };\n    }\n\n    return {\n      ad_reference_id: attribute.ad_reference_id,\n      attributedescription: attribute.attributedescription,\n      attributename: attribute.attributename,\n      attributeseqno: attribute.attributeseqno,\n      attributevalue: attribute.attributevalue,\n      attributevaluetype: attribute.attributevaluetype,\n      c_project_attribute_group_id: attribute.c_project_attribute_group_id,\n      groupdescription: attribute.groupdescription,\n      groupname: attribute.groupname,\n      m_product_category_id: attribute.m_product_category_id,\n      m_product_id: attribute.m_product_id,\n      optionvalue: {\n        type: attribute.optionvalue?.type!,\n        value: dataList\n      }\n    }\n\n  }\n\n  /**\n   * Metodo per aggiornare gli attributi attivi\n   * @param attributes Nuovi attributi attivi\n   */\n  public update(attributes: Array): void {\n    this.activeAttributes.next(attributes);\n  }\n\n  /**\n   * Metodo per ottenere un oggetto osservabile degli attributi attivi\n   * @returns Oggetto osservabile, serve per eseguire codice al cambiamento degli attributi attivi\n   */\n  public getActiveAttributes(): Observable> {\n    return this.activeAttributes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivePhaseService.html":{"url":"injectables/ActivePhaseService.html","title":"injectable - ActivePhaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivePhaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/active-phase/active-phase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce la fase attualmente selezionata\nServe per notificare il component di visualizzazione degli attributi\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activePhase\n                            \n                            \n                                    Private\n                                lastValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActivePhase\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/active-phase/active-phase.service.ts:22\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce la fase attiva\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getActivePhase\n                        \n                    \n                \n            \n            \n                \n                    \n                    getActivePhase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/active-phase/active-phase.service.ts:44\n                \n            \n\n\n            \n                \n                    Metodo per ottenere un oggetto osservabile della fase attiva\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Oggetto osservabile, serve per eseguire codice al cambiamento della fase attiva\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(phase: QualityphaseModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/active-phase/active-phase.service.ts:33\n                \n            \n\n\n            \n                \n                    Metodo per aggiornare la fase attualmente selezionata\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                QualityphaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nuova fase selezionata\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activePhase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/active-phase/active-phase.service.ts:17\n                        \n                    \n\n            \n                \n                    Attributo che contiene un Subject della fase attiva\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QualityphaseModel\n\n                    \n                \n                \n                    \n                        Default value : new Object()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/active-phase/active-phase.service.ts:22\n                        \n                    \n\n            \n                \n                    Ultima fase selezionata, serve per evitare di fare il fetch di attributi se si prova a selezionare la fase già selezionata\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { QualityphaseModel } from 'src/app/api/models';\n\n/**\n * Classe che gestisce la fase attualmente selezionata\n * Serve per notificare il component di visualizzazione degli attributi\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivePhaseService {\n\n  /**\n   * Attributo che contiene un Subject della fase attiva\n   */\n  private activePhase: Subject = new Subject();\n\n  /**\n   * Ultima fase selezionata, serve per evitare di fare il fetch di attributi se si prova a selezionare la fase già selezionata\n   */\n  private lastValue: QualityphaseModel = new Object();\n\n  /**\n   * Costruttore della classe che gestisce la fase attiva\n   */\n  constructor() { }\n\n  /**\n   * Metodo per aggiornare la fase attualmente selezionata\n   * @param phase Nuova fase selezionata\n   */\n  public update(phase: QualityphaseModel): void {\n    if (phase != this.lastValue) {\n      this.activePhase.next(phase);\n      this.lastValue = phase;\n    }\n  }\n\n  /**\n   * Metodo per ottenere un oggetto osservabile della fase attiva\n   * @returns Oggetto osservabile, serve per eseguire codice al cambiamento della fase attiva\n   */\n  public getActivePhase(): Observable {\n    return this.activePhase;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Add$Params.html":{"url":"interfaces/Add$Params.html","title":"interface - Add$Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Add$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-save-log/9000004-add.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per inserire un nuovo log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         QualitysavelogModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QualitysavelogModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { QualitysavelogModel } from '../../models/qualitysavelog-model';\n\n/**\n * Interfaccia che definisce i parametri per inserire un nuovo log di qualità\n */\nexport interface Add$Params {\n  AdesuiteToken: string;\n  body: QualitysavelogModel\n}\n\n/**\n * Funzione di utilità per aggiungere un log di qualità per la fase attiva\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - il log inserito\n */\nexport function Add(http: HttpClient, rootUrl: string, params: Add$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, Add.PATH, 'put');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'inserimento di un log di qualità per la fase attiva\n */\nAdd.PATH = '/9000004/qualitysavelog/add';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiConfiguration.html":{"url":"injectables/ApiConfiguration.html","title":"injectable - ApiConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/api-configuration.ts\n        \n\n\n            \n                Description\n            \n            \n                Global configuration\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://test.adesuite.com/faltracco/rest/openapi/operation'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/api-configuration.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Global configuration\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = 'https://test.adesuite.com/faltracco/rest/openapi/operation';\n}\n\n/**\n * Parameters for `ApiModule.forRoot()`\n */\nexport interface ApiConfigurationParams {\n  rootUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiConfigurationParams.html":{"url":"interfaces/ApiConfigurationParams.html","title":"interface - ApiConfigurationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiConfigurationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/api-configuration.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for ApiModule.forRoot()\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            rootUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Global configuration\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = 'https://test.adesuite.com/faltracco/rest/openapi/operation';\n}\n\n/**\n * Parameters for `ApiModule.forRoot()`\n */\nexport interface ApiConfigurationParams {\n  rootUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_providers\n\n\n\n\nApiConfiguration\n\nApiConfiguration\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nApiConfiguration->ApiModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nApiModule -->\n\nAuthenticationService->ApiModule\n\n\n\n\n\nOperatorsService\n\nOperatorsService\n\nApiModule -->\n\nOperatorsService->ApiModule\n\n\n\n\n\nQualityAttributeService\n\nQualityAttributeService\n\nApiModule -->\n\nQualityAttributeService->ApiModule\n\n\n\n\n\nQualityPhaseService\n\nQualityPhaseService\n\nApiModule -->\n\nQualityPhaseService->ApiModule\n\n\n\n\n\nQualitySaveLogService\n\nQualitySaveLogService\n\nApiModule -->\n\nQualitySaveLogService->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/api/api.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module that provides all services and configuration.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiConfiguration\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            OperatorsService\n                        \n                        \n                            QualityAttributeService\n                        \n                        \n                            QualityPhaseService\n                        \n                        \n                            QualitySaveLogService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(params: ApiConfigurationParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/api.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ApiConfigurationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* tslint:disable */\n/* eslint-disable */\nimport { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiConfiguration, ApiConfigurationParams } from './api-configuration';\n\nimport { AuthenticationService } from './services/authentication.service';\nimport { QualitySaveLogService } from './services/quality-save-log.service';\nimport { OperatorsService } from './services/operators.service';\nimport { QualityPhaseService } from './services/quality-phase.service';\nimport { QualityAttributeService } from './services/quality-attribute.service';\n\n/**\n * Module that provides all services and configuration.\n */\n@NgModule({\n  imports: [],\n  exports: [],\n  declarations: [],\n  providers: [\n    AuthenticationService,\n    QualitySaveLogService,\n    OperatorsService,\n    QualityPhaseService,\n    QualityAttributeService,\n    ApiConfiguration\n  ],\n})\nexport class ApiModule {\n  static forRoot(params: ApiConfigurationParams): ModuleWithProviders {\n    return {\n      ngModule: ApiModule,\n      providers: [\n        {\n          provide: ApiConfiguration,\n          useValue: params\n        }\n      ]\n    }\n  }\n\n  constructor(\n    @Optional() @SkipSelf() parentModule: ApiModule,\n    @Optional() http: HttpClient\n  ) {\n    if (parentModule) {\n      throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n    }\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n        'See also https://github.com/angular/angular/issues/20575');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che funge da entrypoint\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di entry point\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Classe che funge da entrypoint\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  /**\n   * Costruttore della classe di entry point\n   * @param translate Servizio di traduzione di ngx-translate\n   */\n  constructor(private translateService: TranslateService) {\n    this.translateService.setDefaultLang('it');\n    this.translateService.use(localStorage.getItem('lang') || 'it');\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmDataDialogComponent\n\nConfirmDataDialogComponent\n\nAppModule -->\n\nConfirmDataDialogComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLogModifierComponent\n\nLogModifierComponent\n\nAppModule -->\n\nLogModifierComponent->AppModule\n\n\n\n\n\nLogViewerComponent\n\nLogViewerComponent\n\nAppModule -->\n\nLogViewerComponent->AppModule\n\n\n\n\n\nLoginPinComponent\n\nLoginPinComponent\n\nAppModule -->\n\nLoginPinComponent->AppModule\n\n\n\n\n\nLoginUsernameComponent\n\nLoginUsernameComponent\n\nAppModule -->\n\nLoginUsernameComponent->AppModule\n\n\n\n\n\nLogoutDialogComponent\n\nLogoutDialogComponent\n\nAppModule -->\n\nLogoutDialogComponent->AppModule\n\n\n\n\n\nOptionsPipe\n\nOptionsPipe\n\nAppModule -->\n\nOptionsPipe->AppModule\n\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\nAppModule -->\n\nPhasesComponent->AppModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nAppModule -->\n\nSafePipe->AppModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nAppModule -->\n\nSidenavComponent->AppModule\n\n\n\n\n\nSplashScreenComponent\n\nSplashScreenComponent\n\nAppModule -->\n\nSplashScreenComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ConfirmDataDialogComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            LogModifierComponent\n                        \n                        \n                            LogViewerComponent\n                        \n                        \n                            LoginPinComponent\n                        \n                        \n                            LoginUsernameComponent\n                        \n                        \n                            LogoutDialogComponent\n                        \n                        \n                            OptionsPipe\n                        \n                        \n                            PhasesComponent\n                        \n                        \n                            SafePipe\n                        \n                        \n                            SidenavComponent\n                        \n                        \n                            SplashScreenComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LOCALE_ID, NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginUsernameComponent } from './components/login-username/login-username.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { LoginPinComponent } from './components/login-pin/login-pin.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LogModifierComponent } from './components/log-modifier/log-modifier.component';\nimport { PhasesComponent } from './components/phases/phases.component';\nimport { LogViewerComponent } from './components/log-viewer/log-viewer.component';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { LogoutDialogComponent } from './components/logout-dialog/logout-dialog.component';\nimport { SafePipe } from './pipes/safe-html.pipe';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ConfirmDataDialogComponent } from './components/confirm-data-dialog/confirm-data-dialog.component';\nimport { OptionsPipe } from './pipes/options.pipe';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport localeIt from '@angular/common/locales/it';\nimport { registerLocaleData } from '@angular/common';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { SplashScreenComponent } from './components/splash-screen/splash-screen.component';\nregisterLocaleData(localeIt);\n\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, 'assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginUsernameComponent,\n    LoginPinComponent,\n    DashboardComponent,\n    LogModifierComponent,\n    PhasesComponent,\n    LogViewerComponent,\n    SidenavComponent,\n    ToolbarComponent,\n    LogoutDialogComponent,\n    SafePipe,\n    OptionsPipe,\n    ConfirmDataDialogComponent,\n    SplashScreenComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatTableModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    ScrollingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      },\n      defaultLanguage: 'it'\n    }),\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [\n    DashboardComponent,\n    MatSnackBar,\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { horizontalPosition: 'center', verticalPosition: 'top', duration: 3000 } },\n    { provide: LOCALE_ID, useValue: 'it-IT' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginUsernameComponent } from './components/login-username/login-username.component';\nimport { LoginPinComponent } from './components/login-pin/login-pin.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full',\n  },\n  { path: 'login/username', component: LoginUsernameComponent },\n  { path: 'login/pin', component: LoginPinComponent },\n  { path: 'dashboard', component: DashboardComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthInformationsService.html":{"url":"injectables/AuthInformationsService.html","title":"injectable - AuthInformationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthInformationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-informations/auth-informations.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che contiene le informazioni fondamentali di autenticazione: token e userId\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                userName\n                            \n                            \n                                    Private\n                                userTheme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                clearUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Token\n                                \n                                \n                                    UserId\n                                \n                                \n                                    UserName\n                                \n                                \n                                    UserTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:31\n                            \n                        \n\n                \n                    \n                            Costruttore, cerca di ottenere il token da localStorage qualora l'utente avesse già eseguito l'accesso in precedenza\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-informations/auth-informations.service.ts:103\n                \n            \n\n\n            \n                \n                    Metodo per ripristinare a stato di default il token e l'identificativo utente\nRimuove il token da localStorage e le informazioni da sessionStorage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-informations/auth-informations.service.ts:114\n                \n            \n\n\n            \n                \n                    Metodo per eseguire il logout rispetto all'ultimo passo di autenticazione (quando si ottiene l'identificativo utente)\nRimuove l'id ed il tema dell'utente da sessionStorage\nImposta il tema chiaro (evita che i form di login abbiano tema scuro)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:16\n                        \n                    \n\n            \n                \n                    Token per l'autenticazione durante l'uso delle API\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:21\n                        \n                    \n\n            \n                \n                    Id utente per acquisire informazioni da visualizzare a video\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:26\n                        \n                    \n\n            \n                \n                    Nome dell'utente autenticato\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"DM\" | \"WM\" | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:31\n                        \n                    \n\n            \n                \n                    Tema predefinito dell'utente autenticato\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Token\n                    \n                \n\n                \n                    \n                        getToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:46\n                                \n                            \n                    \n                        \n                                Getter del token\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setToken(token: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:67\n                                \n                            \n                    \n                        \n                                Setter del token (con salvataggio in localStorage)\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Valore del nuovo token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        UserId\n                    \n                \n\n                \n                    \n                        getUserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:51\n                                \n                            \n                    \n                        \n                                Getter dell'id utente\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setUserId(userId: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:76\n                                \n                            \n                    \n                        \n                                Setter dell'identificativo utente (con salvataggio in sessionStorage)\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            userId\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Valore del nuovo identificativo dell'utente\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        UserName\n                    \n                \n\n                \n                    \n                        getUserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:56\n                                \n                            \n                    \n                        \n                                Getter del nome utente\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setUserName(userName: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:85\n                                \n                            \n                    \n                        \n                                Setter del nome utente\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            userName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Valore del nuovo nome dell'utente\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        UserTheme\n                    \n                \n\n                \n                    \n                        getUserTheme()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:61\n                                \n                            \n                    \n                        \n                                Getter del tema predefinito\n\n\n                                \n                                    Returns :     \"DM\" | \"WM\"\n\n                                \n                        \n                    \n\n                \n                    \n                        setUserTheme(userTheme: \"DM\" | \"WM\")\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:94\n                                \n                            \n                    \n                        \n                                Setter del tema predefinito\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            userTheme\n                                                    \n                                                            \n                                                                        \"DM\" | \"WM\"\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Nuovo tema\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Fetch$Params } from 'src/app/api/fn/operators/fetch';\nimport { OperatorsService } from 'src/app/api/services';\n\n/**\n * Classe che contiene le informazioni fondamentali di autenticazione: token e userId\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInformationsService {\n\n  /**\n  * Token per l'autenticazione durante l'uso delle API\n  */\n  private token: string = \"\";\n\n  /**\n  * Id utente per acquisire informazioni da visualizzare a video\n  */\n  private userId: number = 0;\n\n  /**\n   * Nome dell'utente autenticato\n   */\n  private userName: string = \"\";\n\n  /**\n   * Tema predefinito dell'utente autenticato\n   */\n  private userTheme: \"DM\" | \"WM\" | undefined = undefined;\n\n  /**\n   * Costruttore, cerca di ottenere il token da localStorage qualora l'utente avesse già eseguito l'accesso in precedenza\n   */\n  constructor() {\n    this.token = localStorage.getItem(\"ADeToken\") || \"\";\n    this.userId = sessionStorage.getItem(\"ADeUserId\") as any as number || 0;\n    this.userName = sessionStorage.getItem(\"ADeUserName\") || \"\";\n    this.userTheme = sessionStorage.getItem(\"ADeUserTheme\") as \"DM\" | \"WM\";\n  }\n\n  /**\n   * Getter del token\n   */\n  public get Token(): string { return this.token }\n\n  /**\n   * Getter dell'id utente\n   */\n  public get UserId(): number { return this.userId }\n\n  /**\n   * Getter del nome utente\n   */\n  public get UserName(): string { return this.userName; }\n\n  /**\n   * Getter del tema predefinito\n   */\n  public get UserTheme(): \"DM\" | \"WM\" { return this.userTheme!; }\n\n  /**\n   * Setter del token (con salvataggio in localStorage)\n   * @param token Valore del nuovo token\n   */\n  public set Token(token: string) {\n    localStorage.setItem(\"ADeToken\", token);\n    this.token = token\n  }\n\n  /**\n   * Setter dell'identificativo utente (con salvataggio in sessionStorage)\n   * @param userId Valore del nuovo identificativo dell'utente\n   */\n  public set UserId(userId: number) {\n    this.userId = userId;\n    sessionStorage.setItem(\"ADeUserId\", this.userId as any as string);\n  }\n\n  /**\n   * Setter del nome utente\n   * @param userName Valore del nuovo nome dell'utente\n   */\n  public set UserName(userName: string) {\n    this.userName = userName;\n    sessionStorage.setItem(\"ADeUserName\", this.userName);\n  }\n\n  /**\n   * Setter del tema predefinito\n   * @param userTheme Nuovo tema\n   */\n  public set UserTheme(userTheme: \"DM\" | \"WM\") {\n    this.userTheme = userTheme;\n    sessionStorage.setItem(\"ADeUserTheme\", this.userTheme!);\n  }\n\n  /**\n   * Metodo per ripristinare a stato di default il token e l'identificativo utente\n   * Rimuove il token da localStorage e le informazioni da sessionStorage\n   */\n  public clear(): void {\n    this.token = \"\";\n    localStorage.removeItem(\"ADeToken\");\n    this.clearUser();\n  }\n\n  /**\n   * Metodo per eseguire il logout rispetto all'ultimo passo di autenticazione (quando si ottiene l'identificativo utente)\n   * Rimuove l'id ed il tema dell'utente da sessionStorage\n   * Imposta il tema chiaro (evita che i form di login abbiano tema scuro)\n   */\n  public clearUser(): void {\n    this.userId = 0;\n    this.userName = \"\";\n    this.userTheme = undefined;\n    sessionStorage.removeItem(\"ADeUserId\");\n    sessionStorage.removeItem(\"ADeUserTheme\");\n\n    document.body.classList.remove('theme-dark');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                LoginPath\n                            \n                            \n                                    Static\n                                    Readonly\n                                LogoutPath\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                login$Response\n                            \n                            \n                                logout\n                            \n                            \n                                logout$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/authentication.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(params: Login$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/authentication.service.ts:44\n                \n            \n\n\n            \n                \n                    This method provides access only to the response body.\nTo access the full response (for headers, for example), login$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Login$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login$Response\n                        \n                    \n                \n            \n            \n                \nlogin$Response(params: Login$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/authentication.service.ts:32\n                \n            \n\n\n            \n                \n                    This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use login() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Login$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(params: Logout$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/authentication.service.ts:77\n                \n            \n\n\n            \n                \n                    This method provides access only to the response body.\nTo access the full response (for headers, for example), logout$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Logout$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout$Response\n                        \n                    \n                \n            \n            \n                \nlogout$Response(params: Logout$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/authentication.service.ts:65\n                \n            \n\n\n            \n                \n                    This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use logout() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Logout$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        LoginPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/login'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/authentication.service.ts:24\n                        \n                    \n\n            \n                \n                    Path part for operation login()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        LogoutPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/logout'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/authentication.service.ts:57\n                        \n                    \n\n            \n                \n                    Path part for operation logout()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { login } from '../fn/authentication/login';\nimport { Login$Params } from '../fn/authentication/login';\nimport { logout } from '../fn/authentication/logout';\nimport { Logout$Params } from '../fn/authentication/logout';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `login()` */\n  static readonly LoginPath = '/login';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `login()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  login$Response(params: Login$Params, context?: HttpContext): Observable> {\n    return login(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `login$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  login(params: Login$Params, context?: HttpContext): Observable {\n    return this.login$Response(params, context).pipe(\n      map((r: StrictHttpResponse): {\n        'token'?: string;\n      } => r.body)\n    );\n  }\n\n  /** Path part for operation `logout()` */\n  static readonly LogoutPath = '/logout';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `logout()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  logout$Response(params: Logout$Params, context?: HttpContext): Observable> {\n    return logout(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `logout$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  logout(params: Logout$Params, context?: HttpContext): Observable {\n    return this.logout$Response(params, context).pipe(\n      map((r: StrictHttpResponse): {\n        'status'?: string;\n      } => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/base-service.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class for services\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rootUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/base-service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/base-service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rootUrl\n                    \n                \n\n                \n                    \n                        getrootUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/api/base-service.ts:24\n                                \n                            \n                    \n                        \n                                Returns the root url for all operations in this service. If not set directly in this\nservice, will fallback to ApiConfiguration.rootUrl.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setrootUrl(rootUrl: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/api/base-service.ts:31\n                                \n                            \n                    \n                        \n                                Sets the root URL for API operations in this service.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            rootUrl\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiConfiguration } from './api-configuration';\n\n/**\n * Base class for services\n */\n@Injectable()\nexport class BaseService {\n  constructor(\n    protected config: ApiConfiguration,\n    protected http: HttpClient\n  ) {\n  }\n\n  private _rootUrl?: string;\n\n  /**\n   * Returns the root url for all operations in this service. If not set directly in this\n   * service, will fallback to `ApiConfiguration.rootUrl`.\n   */\n  get rootUrl(): string {\n    return this._rootUrl || this.config.rootUrl;\n  }\n\n  /**\n   * Sets the root URL for API operations in this service.\n   */\n  set rootUrl(rootUrl: string) {\n    this._rootUrl = rootUrl;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDataDialogComponent.html":{"url":"components/ConfirmDataDialogComponent.html","title":"component - ConfirmDataDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDataDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce un dialog di conferma per l'aggiornamento/inserimento di log\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-data-dialog\n            \n\n\n\n            \n                styleUrls\n                ./confirm-data-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-data-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fromPage\n                            \n                            \n                                    \n                                    \n                                    Public\n                                mydata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, mydata: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di presentazione e gestione degli eventi relativi a un dialog\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n\n                                                        \n                                                \n                                                \n                                                        mydata\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Descrizione (titolo + descrizione + riassunto dei dati) del dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:44\n                \n            \n\n\n            \n                \n                    Metodo che segnala la scelta dell'opzione \"Annulla\" nel dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:37\n                \n            \n\n\n            \n                \n                    Metodo che segnala la scelta dell'opzione \"Conferma\" nel dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:30\n                \n            \n\n\n            \n                \n                    Metodo che inizializza titolo e descrizione del dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:24\n                        \n                    \n\n            \n                \n                    Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fromPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:17\n                        \n                    \n\n            \n                \n                    Attributo che descrive il tipo di dialog (titolo + descrizione + riassunto dei dati)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        mydata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()@Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:25\n                        \n                    \n\n            \n                \n                    Descrizione (titolo + descrizione + riassunto dei dati) del dialog\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n/**\n * Classe che gestisce un dialog di conferma per l'aggiornamento/inserimento di log\n */\n@Component({\n  selector: 'app-confirm-data-dialog',\n  templateUrl: './confirm-data-dialog.component.html',\n  styleUrls: ['./confirm-data-dialog.component.scss']\n})\nexport class ConfirmDataDialogComponent implements OnInit {\n\n  /**\n   * Attributo che descrive il tipo di dialog (titolo + descrizione + riassunto dei dati)\n   */\n  public fromPage!: { title: string, description: string, resume: string[] };\n\n  /**\n   * Costruttore della classe di presentazione e gestione degli eventi relativi a un dialog\n   * @param dialogRef Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n   * @param mydata Descrizione (titolo + descrizione + riassunto dei dati) del dialog\n   */\n  constructor(public dialogRef: MatDialogRef,\n    @Optional() @Inject(MAT_DIALOG_DATA) public mydata: any) { }\n\n  /**\n   * Metodo che inizializza titolo e descrizione del dialog\n   */\n  ngOnInit(): void {\n    this.fromPage = this.mydata;\n  }\n\n  /**\n   * Metodo che segnala la scelta dell'opzione \"Conferma\" nel dialog\n   */\n  public confirm(): void {\n    this.dialogRef.close({ event: 'confirm-option' });\n  }\n\n  /**\n   * Metodo che segnala la scelta dell'opzione \"Annulla\" nel dialog\n   */\n  public cancel(): void {\n    this.dialogRef.close({ event: 'cancel-option' });\n  }\n}\n\n    \n\n    \n        \n    {{fromPage.title | translate}}\n    {{fromPage.description | translate}}\n    \n        {{entry}}\n    \n    \n        {{\"Conferma\" | translate}}\n        {{\"Annulla\" | translate}}\n    \n\n    \n\n    \n                \n                    ./confirm-data-dialog.component.scss\n                \n                #dialog {\n    padding: 1em;\n    width: 15em;\n    min-width: 100px;\n    color: black;\n}\n\nbutton {\n    background-color: white;\n}\n\n#buttons {\n    text-align: right;\n    margin-top: 1.5em;\n}\n\nbutton {\n    margin: auto;\n}\n\n#title {\n    margin-top: 0.2em;\n    font-size: 20px;\n    font-weight: 500;\n}\n\np {\n    font-size: 18px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{fromPage.title | translate}}    {{fromPage.description | translate}}            {{entry}}                {{\"Conferma\" | translate}}        {{\"Annulla\" | translate}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDataDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce la visualizzazione principale\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                insideFrame\n                            \n                            \n                                    Public\n                                mobileQuery\n                            \n                            \n                                    Private\n                                queryListener\n                            \n                            \n                                    Public\n                                tabletQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    InsideFrame\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authInfoService: AuthInformationsService, router: Router, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, route: ActivatedRoute, iframeInitService: IframeInitializerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/dashboard.component.ts:37\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce la vista principale, reindirizza al login con username in assenza delle informazioni di autenticazione necessarie (token, userId) se non si è all'interno di un iframe\nSe si è all'interno di un iframe, il software viene richiamato con il parametro 'inside=true'\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router per eseguire dei reindirizzamenti su browser\n\n                                                        \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                oggetto che serve per individuare cambiamenti nell'interfaccia grafica\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                oggetto che serve per eseguire delle media query\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                URL attivo\n\n                                                        \n                                                \n                                                \n                                                        iframeInitService\n                                                  \n                                                        \n                                                                        IframeInitializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di inizializzazione dei servizi indispensabili per il funzionamento dell'applicazione in un iframe\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:105\n                \n            \n\n\n            \n                \n                    Distruttore per rimuovere gli event listener\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insideFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:37\n                        \n                    \n\n            \n                \n                    Attributo booleano che indica se l'interfaccia viene visualizzata all'interno di un iframe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mobileQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:32\n                        \n                    \n\n            \n                \n                    Lista di query per capire quando nascondere la barra laterale e incorporarla alla barra del titolo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        queryListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:22\n                        \n                    \n\n            \n                \n                    Query listener: consente di capire quando il menù delle fasi deve cambiare [mode] (possibili valori: 'over', 'push', 'side')\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tabletQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:27\n                        \n                    \n\n            \n                \n                    Lista di query per capire quando cambiare [mode] al menù delle fasi\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        InsideFrame\n                    \n                \n\n                \n                    \n                        getInsideFrame()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:100\n                                \n                            \n                    \n                        \n                                Getter per insideFrame\n\n\n                        \n                    \n\n                \n                    \n                        setInsideFrame(inside: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:95\n                                \n                            \n                    \n                        \n                                Setter per insideFrame\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            inside\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take } from 'rxjs';\nimport { Message } from 'src/app/models/message';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { IframeInitializerService } from 'src/app/services/iframe-initializer/iframe-initializer.service';\n\n/**\n * Classe che gestisce la visualizzazione principale\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnDestroy {\n\n  /**\n   * Query listener: consente di capire quando il menù delle fasi deve cambiare [mode] (possibili valori: 'over', 'push', 'side')\n   */\n  private queryListener: () => void;\n\n  /**\n   * Lista di query per capire quando cambiare [mode] al menù delle fasi\n   */\n  public tabletQuery: MediaQueryList;\n\n  /**\n   * Lista di query per capire quando nascondere la barra laterale e incorporarla alla barra del titolo\n   */\n  public mobileQuery: MediaQueryList;\n\n  /**\n   * Attributo booleano che indica se l'interfaccia viene visualizzata all'interno di un iframe\n   */\n  private insideFrame: boolean = false;\n\n  /**\n   * Costruttore della classe che gestisce la vista principale, reindirizza al login con username in assenza delle informazioni di autenticazione necessarie (token, userId) se non si è all'interno di un iframe\n   * Se si è all'interno di un iframe, il software viene richiamato con il parametro 'inside=true'\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione \n   * @param router Router per eseguire dei reindirizzamenti su browser\n   * @param changeDetectorRef oggetto che serve per individuare cambiamenti nell'interfaccia grafica\n   * @param media oggetto che serve per eseguire delle media query\n   * @param route URL attivo\n   * @param iframeInitService Servizio di inizializzazione dei servizi indispensabili per il funzionamento dell'applicazione in un iframe\n   */\n  constructor(private authInfoService: AuthInformationsService, private router: Router, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, private route: ActivatedRoute,\n    private iframeInitService: IframeInitializerService) {\n\n    this.route.queryParams.pipe(take(1))    //problemi di emissioni multiple di parametri\n      .subscribe(params => {\n        this.insideFrame = params['inside'] == \"true\"\n      });\n\n    // Se siamo dentro a un frame, aggiungo un event listener per acquisire i parametri in ingresso tramite postMessage (dall'applicazione contenitrice)\n    if (this.insideFrame) {\n      window.addEventListener(\"message\", (event) => {\n\n        // Accetta i dati in ingresso solo se sono dati dal widget padre\n        if (event.source == parent) {\n          const data: Message = event.data as Message;\n\n          // Verifico che i parametri ci siano tutti\n          if (data == undefined || data.token == undefined || data.lang == undefined || data.theme == undefined || data.username == undefined\n            || data.m_product_id == undefined || data.c_projectphase_id == undefined || data.user_id == undefined) {\n            this.insideFrame = false;\n          } else {\n            this.iframeInitService.initialize(data);\n          }\n        }\n      });\n    }\n\n    // Se non siamo in un frame e mancano dati (token/id utente), si fa un redirect alle pagine di login\n    if (!this.insideFrame && this.authInfoService.Token == \"\" || !this.insideFrame && this.authInfoService.UserId as any as number == 0) {\n      this.router.navigate(['login/username']);\n    } else {\n      this.router.navigate(['dashboard']);\n    }\n\n    this.mobileQuery = media.matchMedia('(max-width: 900px)');\n    this.tabletQuery = media.matchMedia('(max-width: 1200px)');\n\n    this.queryListener = () => changeDetectorRef.detectChanges();\n\n    this.mobileQuery.addEventListener(\"change\", this.queryListener);\n    this.tabletQuery.addEventListener(\"change\", this.queryListener);\n  }\n\n  /**\n   * Setter per insideFrame\n   */\n  public set InsideFrame(inside: boolean) { this.insideFrame = inside; }\n\n  /**\n   * Getter per insideFrame\n   */\n  public get InsideFrame() { return this.insideFrame; }\n\n  /**\n   * Distruttore per rimuovere gli event listener\n   */\n  ngOnDestroy(): void {\n    this.tabletQuery.removeEventListener(\"change\", this.queryListener);\n    this.mobileQuery.removeEventListener(\"change\", this.queryListener);\n  }\n}\n    \n\n    \n        \n    \n    \n    \n        \n            menu\n        \n        \n            \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n\n    \n        \n            \n                \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                #container {\n    width: 100%;\n    display: flex;\n    height: 100%;\n}\n\n#mainFrame {\n    width: 100%;\n}\n\n#mainContent {\n    width: 100%;\n    height: calc(100% - 70px); //70px sono di toolbar\n}\n\nmat-drawer {\n    width: 20%;\n    height: auto;\n}\n\napp-phases {\n    width: 100%;\n}\n\n#logView {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 1em;\n}\n\napp-log-modifier {\n    width: 100%;\n    flex: 40%;\n    max-height: calc(40% - 70px);\n}\n\napp-log-viewer {\n    width: 100%;\n    flex: 60%;\n    max-height: calc(60% - 70px);\n}\n\n@media screen and (max-width: 1200px) {\n    mat-drawer {\n        width: 35%;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    mat-drawer {\n        width: 50%;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    mat-drawer {\n        width: 70%;\n    }\n}\n\n@media screen and (max-height: 900px) {\n    app-log-modifier {\n        min-height: 270px;\n    }\n\n    app-log-viewer {\n        max-height: calc(100% - 370px);\n    }\n}\n\n@media screen and (max-height: 700px) {\n    app-log-viewer {\n        max-height: none;\n        margin-bottom: 1em;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                menu                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Delete$Params.html":{"url":"interfaces/Delete$Params.html","title":"interface - Delete$Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Delete$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-save-log/9000004-delete.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per eliminare un log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { QualitysavelogModel } from '../../models/qualitysavelog-model';\n\n/**\n * Interfaccia che definisce i parametri per eliminare un log di qualità\n */\nexport interface Delete$Params {\n  AdesuiteToken: string;\n  body: {\n    'c_projectphase_quality_log_id'?: number;\n  }\n}\n\n/**\n * Funzione di utilità per eliminare un log di qualità\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - il log eliminato\n */\nexport function Delete(http: HttpClient, rootUrl: string, params: Delete$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, Delete.PATH, 'delete');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'eliminazione di un log di qualità\n */\nDelete.PATH = '/9000004/qualitysavelog/remove';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorModel.html":{"url":"interfaces/ErrorModel.html","title":"interface - ErrorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/error-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di un errore HTTP\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorModel {\n  code?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fetch$Params.html":{"url":"interfaces/Fetch$Params.html","title":"interface - Fetch$Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fetch$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/operators/fetch.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per il login - pin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         FetchRequestOperatorsModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchRequestOperatorsModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FetchRequestOperatorsModel } from '../../models/fetch-request-operators-model';\nimport { FetchResponseOperatorsModel } from '../../models/fetch-response-operators-model';\n\n/**\n * Interfaccia che definisce i parametri per il login - pin\n */\nexport interface Fetch$Params {\n  AdesuiteToken: string;\n  body: FetchRequestOperatorsModel\n}\n\n/**\n * Funzione di utilità per il login - pin\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta\n */\nexport function fetch(http: HttpClient, rootUrl: string, params: Fetch$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, fetch.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa al login - pin\n */\nfetch.PATH = '/9000006/operators/fetch';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FetchRequestOperatorsModel.html":{"url":"interfaces/FetchRequestOperatorsModel.html","title":"interface - FetchRequestOperatorsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchRequestOperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-request-operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una richiesta per gli operatori (login - pin)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orderby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali filtrare gli operatori\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui finire di visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderby:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali ordinare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui iniziare a visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FilterOperatorsModel } from '../models/filter-operators-model';\nimport { OrderOperatorsModel } from '../models/order-operators-model';\n\n/**\n * Interfaccia che definisce la struttura di una richiesta per gli operatori (login - pin)\n */\nexport interface FetchRequestOperatorsModel {\n  /**\n   * Criteri per i quali filtrare gli operatori\n   */\n  criteria?: Array;\n\n  /**\n   * Riga finale da cui finire di visualizzare i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Criteri per i quali ordinare i record trovati\n   */\n  orderby?: Array;\n\n  /**\n   * Riga iniziale da cui iniziare a visualizzare i record trovati\n   */\n  startRow?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FetchRequestQualityattributeModel.html":{"url":"interfaces/FetchRequestQualityattributeModel.html","title":"interface - FetchRequestQualityattributeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchRequestQualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-request-qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una richiesta per gli attributi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orderby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali filtrare gli attributi\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui finire di visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderby:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali ordinare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui iniziare a visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FilterQualityattributeModel } from '../models/filter-qualityattribute-model';\nimport { OrderQualityattributeModel } from '../models/order-qualityattribute-model';\n\n/**\n * Interfaccia che definisce la struttura di una richiesta per gli attributi di qualità\n */\nexport interface FetchRequestQualityattributeModel {\n\n  /**\n   * Criteri per i quali filtrare gli attributi\n   */\n  criteria?: Array;\n\n  /**\n   * Riga finale da cui finire di visualizzare i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Criteri per i quali ordinare i record trovati\n   */\n  orderby?: Array;\n\n  /**\n   * Riga iniziale da cui iniziare a visualizzare i record trovati\n   */\n  startRow?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FetchRequestQualityphaseModel.html":{"url":"interfaces/FetchRequestQualityphaseModel.html","title":"interface - FetchRequestQualityphaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchRequestQualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-request-qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una richiesta per le fasi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orderby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali filtrare le fasi\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui finire di visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderby:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali ordinare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui iniziare a visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FilterQualityphaseModel } from '../models/filter-qualityphase-model';\nimport { OrderQualityphaseModel } from '../models/order-qualityphase-model';\n\n/**\n * Interfaccia che definisce la struttura di una richiesta per le fasi di qualità\n */\nexport interface FetchRequestQualityphaseModel {\n\n  /**\n   * Criteri per i quali filtrare le fasi\n   */\n  criteria?: Array;\n\n  /**\n   * Riga finale da cui finire di visualizzare i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Criteri per i quali ordinare i record trovati\n   */\n  orderby?: Array;\n\n  /**\n   * Riga iniziale da cui iniziare a visualizzare i record trovati\n   */\n  startRow?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FetchRequestQualitysavelogModel.html":{"url":"interfaces/FetchRequestQualitysavelogModel.html","title":"interface - FetchRequestQualitysavelogModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchRequestQualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-request-qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una richiesta per i log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orderby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali filtrare i log di qualità\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui finire di visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderby:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali ordinare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui iniziare a visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FilterQualitysavelogModel } from '../models/filter-qualitysavelog-model';\nimport { OrderQualitysavelogModel } from '../models/order-qualitysavelog-model';\n\n/**\n * Interfaccia che definisce la struttura di una richiesta per i log di qualità\n */\nexport interface FetchRequestQualitysavelogModel {\n\n  /**\n   * Criteri per i quali filtrare i log di qualità\n   */\n  criteria?: Array;\n\n  /**\n   * Riga finale da cui finire di visualizzare i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Criteri per i quali ordinare i record trovati\n   */\n  orderby?: Array;\n\n  /**\n   * Riga iniziale da cui iniziare a visualizzare i record trovati\n   */\n  startRow?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FetchResponseOperatorsModel.html":{"url":"interfaces/FetchResponseOperatorsModel.html","title":"interface - FetchResponseOperatorsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchResponseOperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-response-operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una risposta per una richiesta di operatori\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dati in risposta: array di operatori\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Numero totale di righe trovate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OperatorsModel } from '../models/operators-model';\n\n/**\n * Interfaccia che definisce la struttura di una risposta per una richiesta di operatori\n */\nexport interface FetchResponseOperatorsModel {\n\n  /**\n   * Dati in risposta: array di operatori\n   */\n  data?: Array;\n\n  /**\n   * Riga finale da cui si visualizzano i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Riga iniziale da cui si visualizzano i record trovati\n   */\n  startRow?: number;\n\n  /**\n   * Numero totale di righe trovate\n   */\n  totalRows?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FetchResponseQualityattributeModel.html":{"url":"interfaces/FetchResponseQualityattributeModel.html","title":"interface - FetchResponseQualityattributeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchResponseQualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-response-qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una risposta per una richiesta di attributi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dati in risposta: array di attributi di qualità\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Numero totale di righe trovate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { QualityattributeModel } from '../models/qualityattribute-model';\n\n/**\n * Interfaccia che definisce la struttura di una risposta per una richiesta di attributi di qualità\n */\nexport interface FetchResponseQualityattributeModel {\n\n  /**\n   * Dati in risposta: array di attributi di qualità\n   */\n  data?: Array;\n\n  /**\n   * Riga finale da cui si visualizzano i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Riga iniziale da cui si visualizzano i record trovati\n   */\n  startRow?: number;\n\n  /**\n   * Numero totale di righe trovate\n   */\n  totalRows?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FetchResponseQualityphaseModel.html":{"url":"interfaces/FetchResponseQualityphaseModel.html","title":"interface - FetchResponseQualityphaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchResponseQualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-response-qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una risposta per una richiesta di fasi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dati in risposta: array di fasi di qualità\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Numero totale di righe trovate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { QualityphaseModel } from '../models/qualityphase-model';\n\n/**\n * Interfaccia che definisce la struttura di una risposta per una richiesta di fasi di qualità\n */\nexport interface FetchResponseQualityphaseModel {\n\n  /**\n   * Dati in risposta: array di fasi di qualità\n   */\n  data?: Array;\n\n  /**\n   * Riga finale da cui si visualizzano i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Riga iniziale da cui si visualizzano i record trovati\n   */\n  startRow?: number;\n\n  /**\n   * Numero totale di righe trovate\n   */\n  totalRows?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FetchResponseQualitysavelogModel.html":{"url":"interfaces/FetchResponseQualitysavelogModel.html","title":"interface - FetchResponseQualitysavelogModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchResponseQualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-response-qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una risposta per una richiesta di log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dati in risposta: array di log di qualità\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Numero totale di righe trovate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { QualitysavelogModel } from '../models/qualitysavelog-model';\n\n/**\n * Interfaccia che definisce la struttura di una risposta per una richiesta di log di qualità\n */\nexport interface FetchResponseQualitysavelogModel {\n\n  /**\n   * Dati in risposta: array di log di qualità\n   */\n  data?: Array;\n\n  /**\n   * Riga finale da cui si visualizzano i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Riga iniziale da cui si visualizzano i record trovati\n   */\n  startRow?: number;\n\n  /**\n   * Numero totale di righe trovate\n   */\n  totalRows?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fetch_1$Params.html":{"url":"interfaces/Fetch_1$Params.html","title":"interface - Fetch_1$Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fetch_1$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-save-log/fetch-1.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per ottenere i log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         FetchRequestQualitysavelogModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchRequestQualitysavelogModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FetchRequestQualitysavelogModel } from '../../models/fetch-request-qualitysavelog-model';\nimport { FetchResponseQualitysavelogModel } from '../../models/fetch-response-qualitysavelog-model';\n\n/**\n * Interfaccia che definisce i parametri per ottenere i log di qualità\n */\nexport interface Fetch_1$Params {\n  AdesuiteToken: string;\n  body: FetchRequestQualitysavelogModel\n}\n\n/**\n * Funzione di utilità per ottenere un log di qualità\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - i log di qualità\n */\nexport function fetch_1(http: HttpClient, rootUrl: string, params: Fetch_1$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, fetch_1.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'ottenimento dei log di qualità\n */\nfetch_1.PATH = '/9000004/qualitysavelog/fetch';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fetch_2$Params.html":{"url":"interfaces/Fetch_2$Params.html","title":"interface - Fetch_2$Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fetch_2$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-phase/fetch-2.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per ottenere le fasi di produzione\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         FetchRequestQualityphaseModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchRequestQualityphaseModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FetchRequestQualityphaseModel } from '../../models/fetch-request-qualityphase-model';\nimport { FetchResponseQualityphaseModel } from '../../models/fetch-response-qualityphase-model';\n\n/**\n * Interfaccia che definisce i parametri per ottenere le fasi di produzione\n */\nexport interface Fetch_2$Params {\n  AdesuiteToken: string;\n  body: FetchRequestQualityphaseModel\n}\n\n/**\n * Funzione di utilità per ottenere una fase di produzione\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - le fasi di produzione\n */\nexport function fetch_2(http: HttpClient, rootUrl: string, params: Fetch_2$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, fetch_2.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'ottenimento delle fasi di produzione\n */\nfetch_2.PATH = '/9000005/qualityphase/fetch';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fetch_3$Params.html":{"url":"interfaces/Fetch_3$Params.html","title":"interface - Fetch_3$Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fetch_3$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-attribute/fetch-3.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per ottenere gli attributi di qualità di una fase\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         FetchRequestQualityattributeModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchRequestQualityattributeModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FetchRequestQualityattributeModel } from '../../models/fetch-request-qualityattribute-model';\nimport { FetchResponseQualityattributeModel } from '../../models/fetch-response-qualityattribute-model';\n\n/**\n * Interfaccia che definisce i parametri per ottenere gli attributi di qualità di una fase\n */\nexport interface Fetch_3$Params {\n  AdesuiteToken: string;\n  body: FetchRequestQualityattributeModel\n}\n\n/**\n * Funzione di utilità per ottenere gli attributi di qualità di una fase\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - gli attributi di qualità di una fase\n */\nexport function fetch_3(http: HttpClient, rootUrl: string, params: Fetch_3$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, fetch_3.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'ottenimento degli attributi di qualità di una fase\n */\nfetch_3.PATH = '/9000003/qualityattribute/fetch';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterOperatorsModel.html":{"url":"interfaces/FilterOperatorsModel.html","title":"interface - FilterOperatorsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterOperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/filter-operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ottenere (filtrando) gli operatori\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fieldName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldName:     \"mes_theme_display\" | \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"userpin\" | \"foto\" | \"ad_user_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mes_theme_display\" | \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"userpin\" | \"foto\" | \"ad_user_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterOperatorsModel {\n  fieldName?: 'mes_theme_display' | 'mes_theme' | 'note' | 'name' | 'ismobileuser' | 'numero_matricola' | 'isactive' | 'userpin' | 'foto' | 'ad_user_id';\n  operator?: 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals';\n  value?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterQualityattributeModel.html":{"url":"interfaces/FilterQualityattributeModel.html","title":"interface - FilterQualityattributeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterQualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/filter-qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ottenere (filtrando) gli attributi di qualità per la fase attiva\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fieldName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldName:     \"optionvalue\" | \"groupname\" | \"groupdescription\" | \"c_project_attribute_group_id\" | \"attributeseqno\" | \"attributedescription\" | \"ad_reference_id\" | \"m_product_category_id\" | \"m_product_id\" | \"attributevaluetype\" | \"attributevalue\" | \"attributename\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"optionvalue\" | \"groupname\" | \"groupdescription\" | \"c_project_attribute_group_id\" | \"attributeseqno\" | \"attributedescription\" | \"ad_reference_id\" | \"m_product_category_id\" | \"m_product_id\" | \"attributevaluetype\" | \"attributevalue\" | \"attributename\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterQualityattributeModel {\n  fieldName?: 'optionvalue' | 'groupname' | 'groupdescription' | 'c_project_attribute_group_id' | 'attributeseqno' | 'attributedescription' | 'ad_reference_id' | 'm_product_category_id' | 'm_product_id' | 'attributevaluetype' | 'attributevalue' | 'attributename';\n  operator?: 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals';\n  value?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterQualityphaseModel.html":{"url":"interfaces/FilterQualityphaseModel.html","title":"interface - FilterQualityphaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterQualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/filter-qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ottenere (filtrando) le fasi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fieldName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldName:     \"c_phase_id\" | \"m_product_category_id\" | \"m_product_id\" | \"status\" | \"projectplan_timeline_id\" | \"isglobal\" | \"c_projectphase_id\" | \"c_bpartner_id\" | \"linename\" | \"color\" | \"start_plan\" | \"phasename\" | \"end_plan\" | \"customer\" | \"c_projectline_id\" | \"ad_org_id\" | \"ad_client_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"c_phase_id\" | \"m_product_category_id\" | \"m_product_id\" | \"status\" | \"projectplan_timeline_id\" | \"isglobal\" | \"c_projectphase_id\" | \"c_bpartner_id\" | \"linename\" | \"color\" | \"start_plan\" | \"phasename\" | \"end_plan\" | \"customer\" | \"c_projectline_id\" | \"ad_org_id\" | \"ad_client_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterQualityphaseModel {\n  fieldName?: 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n  operator?: 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals';\n  value?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterQualitysavelogModel.html":{"url":"interfaces/FilterQualitysavelogModel.html","title":"interface - FilterQualitysavelogModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterQualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/filter-qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ottenere (filtrando) i log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fieldName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldName:     \"qualitystatus\" | \"qualityvalue\" | \"isactive\" | \"c_projectphase_quality_log_id\" | \"c_projectphase_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"qualitystatus\" | \"qualityvalue\" | \"isactive\" | \"c_projectphase_quality_log_id\" | \"c_projectphase_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterQualitysavelogModel {\n  fieldName?: 'qualitystatus' | 'qualityvalue' | 'isactive' | 'c_projectphase_quality_log_id' | 'c_projectphase_id';\n  operator?: 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals';\n  value?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HeaderParameter.html":{"url":"classes/HeaderParameter.html","title":"class - HeaderParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HeaderParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                A parameter in the HTTP request header\n\n            \n\n            \n                Extends\n            \n            \n                        Parameter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                serializeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: any, options: ParameterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:188\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ParameterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParameterOptions\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(headers: HttpHeaders)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n                                    \n                                            HttpHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpHeaders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeValue\n                        \n                    \n                \n            \n            \n                \nserializeValue(value: any, separator: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Parameter\n\n                \n            \n            \n                \n                        Defined in         Parameter:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    separator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ','\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IframeInitializerService.html":{"url":"injectables/IframeInitializerService.html","title":"injectable - IframeInitializerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IframeInitializerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/iframe-initializer/iframe-initializer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe di gestione dell'inizializzazione dei servizi se il software esegue all'interno di un iframe\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, authInfoService: AuthInformationsService, languageService: LanguageService, activePhaseService: ActivePhaseService, themeService: ThemeService, qualityPhaseService: QualityPhaseService, logoutService: LogoutService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/iframe-initializer/iframe-initializer.service.ts:19\n                            \n                        \n\n                \n                    \n                            Costruttore della classe relativa all'inizializzazione dei servizi se il software esegue in un iframe\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di notifica eventi\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del linguaggio attivo nell'applicazione\n\n                                                        \n                                                \n                                                \n                                                        activePhaseService\n                                                  \n                                                        \n                                                                        ActivePhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire la fase attiva\n\n                                                        \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del tema grafico di interfaccia\n\n                                                        \n                                                \n                                                \n                                                        qualityPhaseService\n                                                  \n                                                        \n                                                                        QualityPhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per l'ottenimento delle fasi\n\n                                                        \n                                                \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del logout\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(data: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/iframe-initializer/iframe-initializer.service.ts:50\n                \n            \n\n\n            \n                \n                    Metodo per inizializzare i vari servizi in caso di utilizzo del software all'interno di un iframe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Dati passati dalla pagina che contiene il software all'interno di un iframe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/iframe-initializer/iframe-initializer.service.ts:40\n                \n            \n\n\n            \n                \n                    Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Messaggio da mostrare\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Etichetta del pulsante di chiusura\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { QualityPhaseService } from 'src/app/api/services';\nimport { ActivePhaseService } from '../active-phase/active-phase.service';\nimport { LanguageService } from '../language/language.service';\nimport { LogoutService } from '../logout/logout.service';\nimport { ThemeService } from '../theme/theme.service';\nimport { AuthInformationsService } from '../auth-informations/auth-informations.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ErrorModel } from 'src/app/api/models';\nimport { Message } from 'src/app/models/message';\n\n/**\n * Classe di gestione dell'inizializzazione dei servizi se il software esegue all'interno di un iframe\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IframeInitializerService {\n\n  /**\n   * Costruttore della classe relativa all'inizializzazione dei servizi se il software esegue in un iframe\n   * @param snackBar Barra di notifica eventi\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param languageService Servizio di gestione del linguaggio attivo nell'applicazione\n   * @param activePhaseService Servizio per gestire la fase attiva\n   * @param themeService Servizio di gestione del tema grafico di interfaccia\n   * @param qualityPhaseService Servizio per l'ottenimento delle fasi\n   * @param logoutService Servizio di gestione del logout\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   */\n  constructor(private snackBar: MatSnackBar, private authInfoService: AuthInformationsService, private languageService: LanguageService, private activePhaseService: ActivePhaseService, private themeService: ThemeService, private qualityPhaseService: QualityPhaseService,\n    private logoutService: LogoutService, private translateService: TranslateService) { }\n\n  /**\n  * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n  * @param message Messaggio da mostrare\n  * @param type Etichetta del pulsante di chiusura\n  */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo per inizializzare i vari servizi in caso di utilizzo del software all'interno di un iframe\n   * @param data Dati passati dalla pagina che contiene il software all'interno di un iframe\n   */\n  public initialize(data: Message): void {\n\n    this.authInfoService.clear();\n\n    //1. Aggiornare AuthInfoService\n    this.authInfoService.Token = data.token;\n    this.authInfoService.UserName = data.username;\n    this.authInfoService.UserTheme = data.theme;\n    this.authInfoService.UserId = data.user_id;\n\n    //2. Aggiornare LanguageService\n    this.languageService.changeLanguage(data.lang);\n\n    //3. Aggiornare ActivePhaseService\n    const params = {\n      \"AdesuiteToken\": data.token,\n      \"body\": {\n        \"startRow\": 0,\n        \"criteria\": [\n          {\n            \"fieldName\": 'c_projectphase_id' as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"value\": data.c_projectphase_id.toString(),\n            \"operator\": 'equals' as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          }\n        ],\n        \"endRow\": 1\n      }\n    };\n    this.qualityPhaseService.fetch_2(params)\n      .subscribe({\n        next: (response) => {\n          (response.data != undefined && response.data != null && response.data.length == 1 && response.data.at(0) != undefined) ? this.activePhaseService.update(response.data.at(0)!) : this.openSnackBar(this.translateService.instant(\"Errore: non ci sono fasi da visualizzare!\"), \"X\");\n        },\n        error: (error) => {\n          const errorDescription = (error.error as ErrorModel) != null ? (error.error as ErrorModel).description : (error.status == 401 ? \"Non autorizzato\" : \"Errore lato server\");\n          this.openSnackBar(this.translateService.instant(\"Errore \" + error.status + \" - \" + errorDescription), \"X\");\n          if (error.status == 401) {\n            this.logoutService.logout();\n            this.openSnackBar(this.translateService.instant(\"Errore 401 - Il token di accesso non è più valido\"), \"X\");\n          }\n        }\n      });\n\n    //4. Aggiornare ThemeService\n    this.themeService.toggleTheme(data.theme == \"DM\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JsonList.html":{"url":"interfaces/JsonList.html","title":"interface - JsonList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JsonList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche dei valori delle opzioni di un attributo di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JsonList {\n  key: string[],\n  value: string[]\n}\n\n/**\n * Interfaccia che definisce le caratteristiche delle opzioni di un attributo di qualità\n */\nexport interface optionType {\n  type: string,\n  value: JsonList\n}\n\n/**\n * Interfaccia che definisce le caratteristiche di un attributo di qualità\n */\nexport interface QualityattributeModel {\n  ad_reference_id?: number;\n  attributedescription?: string;\n  attributename?: string;\n  attributeseqno?: number;\n  attributevalue?: string;\n  attributevaluetype?: 'Y' | 'N' | 'S' | 'L';\n  c_project_attribute_group_id?: number;\n  groupdescription?: string;\n  groupname?: string;\n  m_product_category_id?: number;\n  m_product_id?: number;\n  optionvalue?: optionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe di gestione del linguaggio attivo\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/language/language.service.ts:16\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di gestione del linguaggio attivo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLanguage(language: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/language/language.service.ts:28\n                \n            \n\n\n            \n                \n                    Metodo per cambiare il linguaggio attivo\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Linguaggio da impostare come attivo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/language/language.service.ts:16\n                        \n                    \n\n            \n                \n                    Flusso che emette il linguaggio attivo durante l'esecuzione\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject } from 'rxjs';\n\n/**\n * Classe di gestione del linguaggio attivo\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n\n  /**\n   * Flusso che emette il linguaggio attivo durante l'esecuzione \n   */\n  public activeLanguage: Subject = new Subject();\n\n  /**\n   * Costruttore della classe di gestione del linguaggio attivo\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   */\n  constructor(private translateService: TranslateService) { }\n\n  /**\n   * Metodo per cambiare il linguaggio attivo\n   * @param language Linguaggio da impostare come attivo\n   */\n  public changeLanguage(language: string): void {\n\n    if (language != 'it' && language != 'es' && language != 'en') {\n      language = 'it'\n    }\n\n    localStorage.setItem('lang', language);\n    this.translateService.use(localStorage.getItem('lang') || 'it');\n\n    this.activeLanguage.next(language);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servizio per gestire la schermata di caricamento dopo il login\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loading\n                            \n                            \n                                    Private\n                                logModifierLoading\n                            \n                            \n                                    Private\n                                logViewerLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                stopModifierLoading\n                            \n                            \n                                    Public\n                                stopViewerLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Loading\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:25\n                            \n                        \n\n                \n                    \n                            Costruttore del servizio\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reset\n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:64\n                \n            \n\n\n            \n                \n                    Metodo per riportare allo stato iniziale il servizio\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stopModifierLoading\n                        \n                    \n                \n            \n            \n                \n                    \n                    stopModifierLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:42\n                \n            \n\n\n            \n                \n                    Metodo per indicare che LogModifierComponent ha terminato il caricamento\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stopViewerLoading\n                        \n                    \n                \n            \n            \n                \n                    \n                    stopViewerLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:53\n                \n            \n\n\n            \n                \n                    Metodo per indicare che LogViewerComponent ha terminato il caricamento\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading/loading.service.ts:15\n                        \n                    \n\n            \n                \n                    Attributo osservabile che emette \"false\" quando il caricamento termina\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logModifierLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading/loading.service.ts:20\n                        \n                    \n\n            \n                \n                    Attributo che indica se il caricamento del LogModifierComponent è avvenuto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logViewerLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading/loading.service.ts:25\n                        \n                    \n\n            \n                \n                    Attributo che indica se il caricamento del LogViewerComponent è avvenuto\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Loading\n                    \n                \n\n                \n                    \n                        getLoading()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/loading/loading.service.ts:35\n                                \n                            \n                    \n                        \n                                Getter del flusso di notifica dei caricamenti\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/**\n * Servizio per gestire la schermata di caricamento dopo il login\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  /**\n   * Attributo osservabile che emette \"false\" quando il caricamento termina\n   */\n  private loading: Subject = new Subject();\n\n  /**\n   * Attributo che indica se il caricamento del LogModifierComponent è avvenuto\n   */\n  private logModifierLoading: boolean = true;\n\n  /**\n   * Attributo che indica se il caricamento del LogViewerComponent è avvenuto\n   */\n  private logViewerLoading: boolean = true;\n\n  /**\n   * Costruttore del servizio\n   */\n  constructor() { }\n\n  /**\n   * Getter del flusso di notifica dei caricamenti\n   */\n  public get Loading() {\n    return this.loading;\n  }\n\n  /**\n   * Metodo per indicare che LogModifierComponent ha terminato il caricamento\n   */\n  public stopModifierLoading(): void {\n    this.logModifierLoading = false;\n\n    if (this.logModifierLoading == this.logViewerLoading) {\n      this.loading.next(false);\n    }\n  }\n\n  /**\n   * Metodo per indicare che LogViewerComponent ha terminato il caricamento\n   */\n  public stopViewerLoading(): void {\n    this.logViewerLoading = false;\n\n    if (this.logModifierLoading == this.logViewerLoading) {\n      this.loading.next(false);\n    }\n  }\n\n  /**\n   * Metodo per riportare allo stato iniziale il servizio\n   */\n  public reset(): void {\n    this.logModifierLoading = true;\n    this.logViewerLoading = true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogViewerComponent.html":{"url":"components/LogViewerComponent.html","title":"component - LogViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/log-viewer/log-viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe di visualizzazione dei log inseriti\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-log-viewer\n            \n\n\n\n            \n                styleUrls\n                ./log-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./log-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeLogs\n                            \n                            \n                                    Public\n                                attributes\n                            \n                            \n                                    Public\n                                blinkLogId\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                highlighted\n                            \n                            \n                                    Private\n                                lastPhase\n                            \n                            \n                                    Public\n                                logs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                deleteDialog\n                            \n                            \n                                    Public\n                                edit\n                            \n                            \n                                    Public\n                                highlight\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openFailSnackBar\n                            \n                            \n                                    Private\n                                openSuccessSnackBar\n                            \n                            \n                                    Private\n                                updateTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeAttributesService: ActiveAttributesService, snackBar: MatSnackBar, translateService: TranslateService, loadingService: LoadingService, activePhaseService: ActivePhaseService, qualitySaveLogService: QualitySaveLogService, authInfoService: AuthInformationsService, mainViewCommunicationsService: MainViewCommunicationsService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:58\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce gli attributi relativi a una fase selezionata ed i loro valori\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeAttributesService\n                                                  \n                                                        \n                                                                        ActiveAttributesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio che gestisce gli attributi attualmente attivi\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di notifica eventi\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di tracciamento del caricamento di LogModifierComponent e LogViewerComponent\n\n                                                        \n                                                \n                                                \n                                                        activePhaseService\n                                                  \n                                                        \n                                                                        ActivePhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        qualitySaveLogService\n                                                  \n                                                        \n                                                                        QualitySaveLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        mainViewCommunicationsService\n                                                  \n                                                        \n                                                                        MainViewCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(selectedLog: QualitysavelogModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log-viewer/log-viewer.component.ts:248\n                \n            \n\n\n            \n                \n                    Metodo per eliminare il log selezionato\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selectedLog\n                                    \n                                                QualitysavelogModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Log da eliminare\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteDialog(selectedLog: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log-viewer/log-viewer.component.ts:204\n                \n            \n\n\n            \n                \n                    Metodo per visualizzare un dialog di conferma per l'eliminazione del log selezionato\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selectedLog\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Log da eliminare\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(selectedLog: QualitysavelogModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log-viewer/log-viewer.component.ts:193\n                \n            \n\n\n            \n                \n                    Metodo per modificare un log di qualità (inviare il suo stato al componente LogModifier)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selectedLog\n                                    \n                                                QualitysavelogModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Log da modificare\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        highlight\n                        \n                    \n                \n            \n            \n                \n                    \n                    highlight(selected: QualitysavelogModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log-viewer/log-viewer.component.ts:184\n                \n            \n\n\n            \n                \n                    Metodo per evidenziare graficamente un log quando viene selezionato per essere modificato\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                QualitysavelogModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Log da evidenziare graficamente\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log-viewer/log-viewer.component.ts:82\n                \n            \n\n\n            \n                \n                    Metodo per ottenere colonne e log salvati per la fase attuale, indica quando il caricamento è terminato (per far sparire lo splash-screen)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        openFailSnackBar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openFailSnackBar(message: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log-viewer/log-viewer.component.ts:163\n                \n            \n\n\n            \n                \n                    Metodo per l'apertura della barra di visualizzazione di messaggi di stato in caso di fallimento\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Messaggio da mostrare\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Etichetta del pulsante di chiusura\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        openSuccessSnackBar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSuccessSnackBar(message: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log-viewer/log-viewer.component.ts:174\n                \n            \n\n\n            \n                \n                    Metodo per l'apertura della barra di visualizzazione di messaggi di stato in caso di successo\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Messaggio da mostrare\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Etichetta del pulsante di chiusura\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateTable\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTable(phase: QualityphaseModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/log-viewer/log-viewer.component.ts:114\n                \n            \n\n\n            \n                \n                    Metodo per aggiornare la tabella di visualizzazione dei log\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                QualityphaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Fase della quale ottenere i log di qualità\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeLogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QualitysavelogModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:33\n                        \n                    \n\n            \n                \n                    Log attivi in un dato istante; serve per individuare i log da modificare\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QualityattributeModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:58\n                        \n                    \n\n            \n                \n                    Attributi attivi\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        blinkLogId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:48\n                        \n                    \n\n            \n                \n                    Id del log che deve essere fatto \"lampeggiare\": è un log appena inserito o modificato\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:53\n                        \n                    \n\n            \n                \n                    Le colonne da mostrare (la descrizione degli attributi che caratterizzano un controllo qualità per la fase selezionata)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        highlighted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QualitysavelogModel\n\n                    \n                \n                \n                    \n                        Default value : new Object()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:43\n                        \n                    \n\n            \n                \n                    Log da evidenziare, è stato selezionato per essere modificato\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastPhase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QualityphaseModel\n\n                    \n                \n                \n                    \n                        Default value : new Object()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:28\n                        \n                    \n\n            \n                \n                    Ultima fase selezionata, serve come riferimento quando si vuole aggiornare la tabella dopo un inserimento / modifica di un log\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:38\n                        \n                    \n\n            \n                \n                    Oggetto osservabile che contiene i log attivi in un dato istante; contiene i dati visibili nella tabella\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject } from 'rxjs';\nimport { QualityattributeModel, QualityphaseModel, QualitysavelogModel } from 'src/app/api/models';\nimport { QualitySaveLogService } from 'src/app/api/services';\nimport { ActiveAttributesService } from 'src/app/services/active-attributes/active-attributes.service';\nimport { ActivePhaseService } from 'src/app/services/active-phase/active-phase.service';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { LoadingService } from 'src/app/services/loading/loading.service';\nimport { MainViewCommunicationsService } from 'src/app/services/main-view-communications/main-view-communications.service';\nimport { ConfirmDataDialogComponent } from '../confirm-data-dialog/confirm-data-dialog.component';\n\n/**\n * Classe di visualizzazione dei log inseriti\n */\n@Component({\n  selector: 'app-log-viewer',\n  templateUrl: './log-viewer.component.html',\n  styleUrls: ['./log-viewer.component.scss']\n})\nexport class LogViewerComponent implements OnInit {\n\n  /**\n   * Ultima fase selezionata, serve come riferimento quando si vuole aggiornare la tabella dopo un inserimento / modifica di un log\n   */\n  private lastPhase: QualityphaseModel = new Object();\n\n  /**\n   * Log attivi in un dato istante; serve per individuare i log da modificare\n   */\n  private activeLogs: QualitysavelogModel[] = [];\n\n  /**\n   * Oggetto osservabile che contiene i log attivi in un dato istante; contiene i dati visibili nella tabella\n   */\n  public logs: Subject = new Subject();\n\n  /**\n   * Log da evidenziare, è stato selezionato per essere modificato\n   */\n  public highlighted: QualitysavelogModel = new Object();\n\n  /**\n   * Id del log che deve essere fatto \"lampeggiare\": è un log appena inserito o modificato\n   */\n  public blinkLogId: number = 0;\n\n  /**\n   * Le colonne da mostrare (la descrizione degli attributi che caratterizzano un controllo qualità per la fase selezionata)\n   */\n  public displayedColumns: Array = new Array();\n\n  /**\n   * Attributi attivi\n   */\n  public attributes: QualityattributeModel[] = [];\n\n  /**\n   * Costruttore della classe che gestisce gli attributi relativi a una fase selezionata ed i loro valori\n   * @param activeAttributesService Servizio che gestisce gli attributi attualmente attivi\n   * @param snackBar Barra di notifica eventi\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   * @param loadingService Servizio di tracciamento del caricamento di LogModifierComponent e LogViewerComponent\n   */\n  constructor(private activeAttributesService: ActiveAttributesService, private snackBar: MatSnackBar, private translateService: TranslateService, private loadingService: LoadingService,\n    private activePhaseService: ActivePhaseService, private qualitySaveLogService: QualitySaveLogService, private authInfoService: AuthInformationsService,\n    private mainViewCommunicationsService: MainViewCommunicationsService, private dialog: MatDialog) {\n\n    this.activePhaseService.getActivePhase().subscribe(phase => {\n      this.lastPhase = phase;\n      this.updateTable(phase);\n      this.loadingService.stopViewerLoading();\n    });\n\n  }\n\n  /**\n   * Metodo per ottenere colonne e log salvati per la fase attuale, indica quando il caricamento è terminato (per far sparire lo splash-screen)\n   */\n  ngOnInit(): void {\n\n    this.activeAttributesService.getActiveAttributes()\n      .subscribe(attributes => {\n        this.displayedColumns = attributes.map((attribute) => attribute.attributevalue!);\n        this.attributes = attributes.slice();\n        this.attributes.push({ attributename: 'Azioni', attributevalue: 'Actions' });\n\n        if (this.displayedColumns.length == 0) {\n          this.openFailSnackBar(\"Errore: non sono disponibili attributi per la fase selezionata!\", \"X\");\n        }\n        else if (this.displayedColumns.findIndex(value => value == 'Actions') == -1) {\n          this.displayedColumns.push(\"Actions\");\n        }\n      });\n\n    this.mainViewCommunicationsService.viewUpdate.subscribe((updatedLog) => {\n      this.highlighted = {};\n      this.updateTable(this.lastPhase);\n      this.blinkLogId = updatedLog.c_projectphase_quality_log_id!;\n\n      // Rimuove dopo 5 secondi la classe 'blink' (evita che ad ogni cambio di tema l'ultima fase aggiunta / modificata venga evidenziata)\n      setTimeout(() => {\n        this.blinkLogId = 0;\n      }, 5500);\n    });\n  }\n\n  /**\n   * Metodo per aggiornare la tabella di visualizzazione dei log\n   * @param phase Fase della quale ottenere i log di qualità\n   */\n  private updateTable(phase: QualityphaseModel): void {\n\n    const token = this.authInfoService.Token;\n\n    const params = {\n      \"AdesuiteToken\": token,\n      \"body\": {\n        \"startRow\": 0,\n        \"criteria\": [\n          {\n            \"fieldName\": \"c_projectphase_id\" as \"qualitystatus\" | \"qualityvalue\" | \"isactive\" | \"c_projectphase_quality_log_id\" | \"c_projectphase_id\" | undefined,\n            \"value\": phase.c_projectphase_id?.toString(),\n            \"operator\": \"equals\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          }\n        ],\n        \"endRow\": 100\n      }\n    };\n\n    this.qualitySaveLogService.fetch_1(params).subscribe({\n      next: (response) => {\n\n        let logs: any[] = [];\n        this.activeLogs = response.data!;\n        response.data?.forEach((log) => {\n\n          const actualQualityValue: { type: string; value: string; } = log.qualityvalue! as any;\n          let aux = JSON.parse(actualQualityValue.value);\n          aux.Actions = \"\";\n          aux.c_projectphase_quality_log_id = log.c_projectphase_quality_log_id;\n          logs.push(aux);\n        });\n\n        logs.sort((firstLog, secondLog) => { return secondLog.c_projectphase_quality_log_id - firstLog.c_projectphase_quality_log_id })\n\n        this.logs.next(logs);\n      },\n      error: (error) => {\n        this.openFailSnackBar(\"Errore \" + error.status + \" - \" + error.error.description, \"X\");\n      }\n    });\n\n  }\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato in caso di fallimento\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n  */\n  private openFailSnackBar(message: string, type: string): void {\n    this.snackBar.open(this.translateService.instant(message), type, {\n      panelClass: ['red-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato in caso di successo\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n  */\n  private openSuccessSnackBar(message: string, type: string): void {\n    this.snackBar.open(this.translateService.instant(message), type, {\n      panelClass: ['green-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo per evidenziare graficamente un log quando viene selezionato per essere modificato\n   * @param selected Log da evidenziare graficamente\n   */\n  public highlight(selected: QualitysavelogModel): void {\n    this.highlighted = selected;\n    this.blinkLogId = 0;\n  }\n\n  /**\n   * Metodo per modificare un log di qualità (inviare il suo stato al componente LogModifier)\n   * @param selectedLog Log da modificare\n   */\n  public edit(selectedLog: QualitysavelogModel): void {\n    const logToUpdate = this.activeLogs.find((log) => log.c_projectphase_quality_log_id == selectedLog.c_projectphase_quality_log_id);\n    if (logToUpdate != undefined) {\n      this.mainViewCommunicationsService.updateLog.next(logToUpdate);\n    }\n  }\n\n  /**\n   * Metodo per visualizzare un dialog di conferma per l'eliminazione del log selezionato\n   * @param selectedLog Log da eliminare\n   */\n  public deleteDialog(selectedLog: any): void {\n    const tableAttributes = this.attributes.slice().map(attribute => attribute.attributename).filter(attribute => attribute != \"Azioni\");\n    const tableColumns = this.displayedColumns.filter(column => column != \"Actions\");\n\n    let formData: string[] = [];\n\n    // PRECONDIZIONE: tableColumns e tableAttributes hanno lo stesso numero di elementi\n    tableAttributes.forEach((attribute, index) => {\n      let booleanTranslated: string = selectedLog[tableColumns.at(index)!];\n\n      if (booleanTranslated == \"true\" || booleanTranslated == \"false\") {\n        booleanTranslated = this.translateService.instant(booleanTranslated);\n      }\n      const entry: string = attribute + \": \" + booleanTranslated;\n      formData.push(entry);\n    });\n\n\n\n    const deleteDialog = this.dialog.open(ConfirmDataDialogComponent, {\n      data: {\n        title: this.translateService.instant('Eliminazione'),\n        description: this.translateService.instant('Vuoi eliminare il seguente log?'),\n        resume: formData\n      }\n    });\n\n    deleteDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"confirm-option\":\n          this.delete(selectedLog);\n          break;\n        case \"cancel-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  /**\n   * Metodo per eliminare il log selezionato\n   * @param selectedLog Log da eliminare\n   */\n  public delete(selectedLog: QualitysavelogModel): void {\n    const token = this.authInfoService.Token;\n\n    const params = {\n      \"AdesuiteToken\": token,\n      \"body\": {\n        \"c_projectphase_quality_log_id\": selectedLog.c_projectphase_quality_log_id\n      }\n    }\n\n    this.qualitySaveLogService.Delete(params).subscribe({\n      next: (log) => {\n        this.openSuccessSnackBar(\"Eliminazione avvenuta correttamente!\", \"X\")\n        this.mainViewCommunicationsService.viewUpdate.next(log);\n      },\n      error: (error) => {\n        this.openFailSnackBar(\"Errore \" + error.status + \" - \" + error.error.description, \"X\");\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        {{\"Log\" | translate}}\n\n  \n\n    \n       {{column.attributename}} \n      \n        \n          {{element[column.attributevalue!]}}\n        \n\n        \n        \n\n        \n          \n            \n          \n          \n            \n          \n        \n      \n\n      \n        \n          {{\"Non ci sono log di qualità per questa fase!\" | translate}}\n        \n      \n    \n\n    \n    \n  \n\n    \n\n    \n                \n                    ./log-viewer.component.scss\n                \n                @use '@angular/material' as mat;\n$red-palette: mat.define-palette(mat.$red-palette);\n$green-palette: mat.define-palette(mat.$green-palette);\n\ntable {\n    width: 100%;\n    max-height: fit-content;\n}\n\ntable * {\n    text-align: center;\n}\n\n.header {\n    width: 100%;\n    text-align: center;\n    padding-top: 0.75em;\n    padding-bottom: 0.75em;\n    margin-bottom: 2em;\n}\n\n.container {\n    max-height: 100%;\n    width: 90%;\n    overflow: auto;\n    margin: auto;\n}\n\nbutton {\n    margin: 0.3em;\n    width: 100px !important;\n    text-align: center;\n    align-items: center;\n}\n\n#buttons {\n    white-space: nowrap;\n    /* To prevent text from wrapping */\n    overflow-wrap: break-word;\n    /* To allow word breaking within the text */\n    align-items: center;\n    margin: auto;\n}\n\nmat-icon {\n    margin: auto !important;\n    margin-top: 5px !important;\n    font-size: 1.5em !important;\n    width: 100% !important;\n    height: 100% !important;\n}\n\n#edit {\n    background-color: mat.get-color-from-palette($green-palette, 500);\n    color: white;\n}\n\n#delete {\n    background-color: mat.get-color-from-palette($red-palette, 500);\n    color: white;\n}\n\n#noDataRow,\n#noDataRow * {\n    padding: 1em;\n}\n\n@media screen and (max-height: 900px) {\n    .header {\n        margin-bottom: 1em;\n    }\n}\n\n@media screen and (max-width: 1920px) {\n    mat-icon {\n        margin-top: 8px !important;\n    }\n\n    button {\n        width: 80px !important;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\"Log\" | translate}}             {{column.attributename}}                         {{element[column.attributevalue!]}}                                                                                                                                      {{\"Non ci sono log di qualità per questa fase!\" | translate}}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login$Params.html":{"url":"interfaces/Login$Params.html","title":"interface - Login$Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Login$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/authentication/login.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per il login - username\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\n/**\n * Interfaccia che definisce i parametri per il login - username\n */\nexport interface Login$Params {\n  body: {\n    'password'?: string;\n    'username'?: string;\n  }\n}\n\n/**\n * Funzione di utilità per il login - username\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta\n */\nexport function login(http: HttpClient, rootUrl: string, params: Login$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, login.PATH, 'post');\n  if (params) {\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa al login - username\n */\nlogin.PATH = '/login';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPinComponent.html":{"url":"components/LoginPinComponent.html","title":"component - LoginPinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login-pin/login-pin.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce il form di login con username e password\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-pin\n            \n\n\n\n            \n                styleUrls\n                ./login-pin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-pin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                opacityChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                append\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                            \n                                    Private\n                                prepareParams\n                            \n                            \n                                    Public\n                                removeLast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, operatorsService: OperatorsService, authInfoService: AuthInformationsService, snackBar: MatSnackBar, router: Router, translateService: TranslateService, loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login-pin/login-pin.component.ts:47\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di login con pin: evita di renderizzare la pagina se non si è prima ottenuto il token\nReindirizza alla dashboard qualora vi fosse già una sessione attiva\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Variabile atta alla costruzione del form a livello logico\n\n                                                        \n                                                \n                                                \n                                                        operatorsService\n                                                  \n                                                        \n                                                                        OperatorsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per ottenere gli operatori attivi\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di visualizzazione di messaggi di stato (ex. login fallito)\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router per eseguire dei reindirizzamenti su browser\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di tracciamento del caricamento di LogModifierComponent e LogViewerComponent\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        append\n                        \n                    \n                \n            \n            \n                \n                    \n                    append(input: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-pin/login-pin.component.ts:129\n                \n            \n\n\n            \n                \n                    Metodo per appendere l'ultimo numero inserito dall'utente nella casella di testo riservata al pin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Numero da aggiungere alla stringa numerica che rappresenta il pin immesso dall'utente\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-pin/login-pin.component.ts:137\n                \n            \n\n\n            \n                \n                    Metodo per cancellare il pin inserito, pulendo la casella di testo\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-pin/login-pin.component.ts:156\n                \n            \n\n\n            \n                \n                    Metodo per eseguire il login, consente di salvare l'id utente nel servizio authInfoService e passare così alla visualizzazione di fasi e informazioni di controllo qualità\nIn caso di errore, gestisce l'apertura della barra di stato\nGestisce l'apertura della barra di caricamento\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-pin/login-pin.component.ts:81\n                \n            \n\n\n            \n                \n                    Costruzione del form alla creazione del componente\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-pin/login-pin.component.ts:94\n                \n            \n\n\n            \n                \n                    Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Messaggio da mostrare\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Etichetta del pulsante di chiusura\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        prepareParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareParams(token: string, fieldName: string, value: string, operator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-pin/login-pin.component.ts:108\n                \n            \n\n\n            \n                \n                    Metodo per preparare i parametri per le richieste relative agli operatori\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token di autenticazione per eseguire la chiamata\n\n                                    \n                                \n                                \n                                    fieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Campo per il quale filtrare\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Valore per il quale filtrare\n\n                                    \n                                \n                                \n                                    operator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Operatore per il quale filtrare\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Fetch$Params\n\n                    \n                    \n                        I parametri per una richiesta relativa agli operatori\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeLast\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-pin/login-pin.component.ts:146\n                \n            \n\n\n            \n                \n                    Metodo per rimuovere l'ultima cifra del pin inserito\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-pin/login-pin.component.ts:37\n                        \n                    \n\n            \n                \n                    Form di login\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-pin/login-pin.component.ts:32\n                        \n                    \n\n            \n                \n                    Variabile booleana per cambiare l'icona che nasconde il contenuto del campo \"password\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-pin/login-pin.component.ts:42\n                        \n                    \n\n            \n                \n                    Variabile booleana per far comparire la rotellina di caricamento qualora la richiesta di login impiegasse più tempo del normale\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        opacityChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"in\" | string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-pin/login-pin.component.ts:47\n                        \n                    \n\n            \n                \n                    Attributo per la gestione dell'animazione di fadeInOut al caricamento del form e dell'immagine\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ErrorModel } from 'src/app/api/models';\nimport { OperatorsService } from 'src/app/api/services';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Fetch$Params } from 'src/app/api/fn/operators/fetch';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoadingService } from 'src/app/services/loading/loading.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Classe che gestisce il form di login con username e password\n */\n@Component({\n  selector: 'app-login-pin',\n  templateUrl: './login-pin.component.html',\n  styleUrls: ['./login-pin.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('in', style({ opacity: 1 })),\n      transition(':enter', [style({ opacity: 0 }), animate('0.25s ease-out')]),\n    ]),\n  ],\n})\nexport class LoginPinComponent implements OnInit {\n\n  /**\n  * Variabile booleana per cambiare l'icona che nasconde il contenuto del campo \"password\"\n  */\n  public hide: boolean = true;\n\n  /**\n   * Form di login\n   */\n  public form!: FormGroup;\n\n  /**\n   * Variabile booleana per far comparire la rotellina di caricamento qualora la richiesta di login impiegasse più tempo del normale\n   */\n  public loading: boolean = false;\n\n  /**\n   * Attributo per la gestione dell'animazione di fadeInOut al caricamento del form e dell'immagine\n   */\n  public opacityChange: 'in' | '' = '';\n\n  /**\n   * Costruttore della classe di login con pin: evita di renderizzare la pagina se non si è prima ottenuto il token\n   * Reindirizza alla dashboard qualora vi fosse già una sessione attiva\n   * @param formBuilder Variabile atta alla costruzione del form a livello logico\n   * @param operatorsService Servizio per ottenere gli operatori attivi\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param snackBar Barra di visualizzazione di messaggi di stato (ex. login fallito)\n   * @param router Router per eseguire dei reindirizzamenti su browser\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   * @param loadingService Servizio di tracciamento del caricamento di LogModifierComponent e LogViewerComponent\n   */\n  constructor(private formBuilder: FormBuilder, private operatorsService: OperatorsService, private authInfoService: AuthInformationsService, private snackBar: MatSnackBar,\n    private router: Router, private translateService: TranslateService, private loadingService: LoadingService) {\n\n    this.loadingService.reset();\n    if (localStorage.getItem('ADeToken') == null || localStorage.getItem('ADeToken') == \"\") {\n      this.router.navigate(['login/username']);\n    }\n\n    if (sessionStorage.getItem('ADeUserId') != \"\" && sessionStorage.getItem('ADeUserId') != null && sessionStorage.getItem('ADeUserId') as any as number != 0\n      && sessionStorage.getItem('ADeUserName') != \"\" && sessionStorage.getItem('ADeUserName') != null && sessionStorage.getItem('ADeUserName') != \"\"\n      && sessionStorage.getItem('ADeUserTheme') != \"\" && sessionStorage.getItem('ADeUserTheme') != null && sessionStorage.getItem('ADeUserTheme') as any as \"DM\" | \"WM\" | undefined != undefined) {\n      this.authInfoService.UserId = sessionStorage.getItem('ADeUserId') as any as number;\n      this.authInfoService.UserName = sessionStorage.getItem(\"ADeUserName\")!;\n      this.authInfoService.UserTheme = sessionStorage.getItem(\"ADeUserTheme\") as \"DM\" | \"WM\";\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  /**\n   * Costruzione del form alla creazione del componente\n   */\n  ngOnInit() {\n    this.opacityChange = 'in';\n\n    this.form = this.formBuilder.group({\n      pin: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n   */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo per preparare i parametri per le richieste relative agli operatori\n   * @param token Token di autenticazione per eseguire la chiamata\n   * @param fieldName Campo per il quale filtrare\n   * @param value Valore per il quale filtrare\n   * @param operator Operatore per il quale filtrare\n   * @returns I parametri per una richiesta relativa agli operatori\n   */\n  private prepareParams(token: string, fieldName: string, value: string, operator: string): Fetch$Params {\n    return {\n      \"AdesuiteToken\": token,\n      \"body\": {\n        \"startRow\": 0,\n        \"criteria\": [\n          {\n            \"fieldName\": fieldName as \"userpin\" | \"mes_theme_display\" | \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"foto\" | \"ad_user_id\" | undefined,\n            \"value\": value,\n            \"operator\": operator as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          }\n        ],\n        \"endRow\": 1\n      }\n    };\n  }\n\n  /**\n   * Metodo per appendere l'ultimo numero inserito dall'utente nella casella di testo riservata al pin \n   * @param input Numero da aggiungere alla stringa numerica che rappresenta il pin immesso dall'utente\n   */\n  public append(input: number): void {\n    const previous = this.form.get('pin')?.value;\n    this.form.setValue({ \"pin\": previous + input });\n  }\n\n  /**\n   * Metodo per cancellare il pin inserito, pulendo la casella di testo\n   */\n  public clear(): void {\n    this.form = this.formBuilder.group({\n      pin: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Metodo per rimuovere l'ultima cifra del pin inserito\n   */\n  public removeLast(): void {\n    const element = (document.getElementById(\"pin\"));\n    this.form.setValue({ \"pin\": element.value.substring(0, element.value.length - 1) });\n  }\n\n  /**\n   * Metodo per eseguire il login, consente di salvare l'id utente nel servizio authInfoService e passare così alla visualizzazione di fasi e informazioni di controllo qualità\n   * In caso di errore, gestisce l'apertura della barra di stato\n   * Gestisce l'apertura della barra di caricamento\n   */\n  public login(): void {\n\n    if (this.form.invalid) {\n      this.openSnackBar((this.translateService.instant(\"Il pin inserito non è valido!\")), \"X\");\n      return;\n    }\n\n    // Dichiarazioni dati di autenticazione\n    const token = this.authInfoService.Token;\n    const pin = this.form.controls['pin'].value;\n\n    // Dichiarazioni dettate dai modelli in /app/api/models\n    const fieldName = \"userpin\" as \"userpin\" | \"mes_theme_display\" | \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"foto\" | \"ad_user_id\";\n    const operator = \"equals\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\";\n\n    this.loading = true;\n\n    const params = this.prepareParams(token, fieldName, pin, operator);\n\n    this.operatorsService.fetch(params)\n      .subscribe({\n        next: (response) => {\n\n          if (response.data != undefined && response.data[0] != undefined && response.data[0].ad_user_id != undefined && response.data[0].name != undefined && response.data[0].mes_theme != undefined) {\n            this.authInfoService.UserId = response.data[0].ad_user_id;\n            this.authInfoService.UserName = response.data[0].name.trim();\n            this.authInfoService.UserTheme = response.data[0].mes_theme.trim() as \"DM\" | \"WM\";\n          }\n          else {\n            this.openSnackBar(this.translateService.instant(\"Il PIN inserito non appartiene ad alcun utente\"), \"X\")\n          };\n          if (this.authInfoService.UserId && this.authInfoService.UserName) {\n            this.router.navigate(['dashboard']);\n          }\n        },\n        error: (error) => {\n          const errorDescription = (error.error as ErrorModel) != null ? (error.error as ErrorModel).description : (error.status == 401 ? \"Non autorizzato\" : \"Errore lato server\");\n          this.openSnackBar(this.translateService.instant(\"Errore \" + error.status + \" - \" + errorDescription), \"X\");\n          if (error.status == 401) {\n            this.authInfoService.Token = \"\";\n            this.router.navigate(['login/username']);\n          }\n          this.loading = false;\n        },\n        complete: () => { this.loading = false; }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Pin\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n        {{\"Accedi\" | translate}}\n        \n            \n                1\n                2\n                3\n                4\n                5\n                6\n                7\n                8\n                9\n                \n                    \n                \n                0\n                DEL\n            \n        \n    \n    \n    \n\n\n    \n        {{\"Caricamento\" | translate}} \n    \n\n    \n\n    \n                \n                    ./login-pin.component.scss\n                \n                @import \"../../variables.scss\";\n\n#visibility-button {\n    border: 0px;\n    height: 40px;\n    width: 40px;\n    border-radius: 20px;\n    text-align: center;\n    padding: 0;\n}\n\n/* Hide the password reveal button in modern browsers */\ninput[type=\"password\"]::-webkit-inner-spin-button,\ninput[type=\"password\"]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    appearance: none;\n    margin: 0;\n}\n\n/* Hide the password reveal button in Microsoft Edge */\ninput[type=\"password\"]::-ms-reveal {\n    display: none;\n}\n\n\n/* Hide the password reveal button in Firefox */\ninput[type=\"password\"]::-moz-eye {\n    display: none;\n}\n\n\n#form-background {\n    background-color: $backgroundColor;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\nform {\n    width: 45%;\n    height: 30%;\n    max-height: 500px;\n    background-color: white;\n    border-radius: 50px;\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5em;\n    gap: 1em;\n    flex-basis: 60%;\n    padding: 3em;\n    padding-bottom: 2.5em;\n}\n\nform>* {\n    height: 80px;\n    min-height: 80px;\n}\n\nform button {\n    color: white;\n    background-color: $backgroundColor;\n    border-radius: 5px;\n}\n\nform button:hover {\n    background-color: white;\n    color: $backgroundColor;\n    border: 1px solid black;\n    cursor: pointer;\n    transition: 250ms;\n}\n\nform>button {\n    width: auto;\n    height: 50px;\n    min-height: 60px;\n    margin-bottom: 3%;\n    font-size: 30px;\n    padding: 10px;\n}\n\nimg {\n    width: 20%;\n    height: 10%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: auto;\n    flex-basis: 25%;\n}\n\n#pin {\n    font-size: 25px;\n}\n\n#loading-frame {\n    min-width: 100px;\n    width: fit-content;\n    margin: auto;\n    position: absolute;\n    bottom: 10px;\n    left: 50%;\n    color: darkblue;\n    font-size: large;\n    font-weight: 500;\n    transform: translate(-50%, 0);\n}\n\n#loading-frame>* {\n    display: flex;\n    gap: 15px;\n    padding: 15px;\n    position: relative;\n    background-color: white;\n    border: 1px solid gray;\n    box-shadow: 0px 0px 5px white;\n}\n\n#pinFrame {\n    display: grid;\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n    gap: 10px;\n    padding: 10px;\n    min-width: 240px;\n    max-width: 400px;\n    margin: 0 auto 0 auto;\n}\n\n.pinButton {\n    border: 1px solid rgba(0, 0, 0, 0.8);\n    padding: 5px;\n    text-align: center;\n    font-size: 40px;\n}\n\n#del {\n    padding: 0;\n}\n\n.mat-icon {\n    margin-top: 0.2em;\n}\n\n#mobile-logo {\n    height: 8%;\n    width: 15%;\n    display: none;\n}\n\n@media only screen and (max-height: 800px) {\n    form {\n        height: 50%;\n        padding: 1.5em;\n        padding-bottom: 1em;\n    }\n}\n\n@media only screen and (max-height: 800px),\n(max-width: 1000px) {\n\n    .pinButton {\n        font-size: 30px;\n    }\n\n    form>button {\n        font-size: 20px;\n        min-height: 30px;\n        padding: 5px;\n    }\n}\n\n@media only screen and (max-height : 700px) and (max-width : 1920px),\n(max-width: 600px) {\n    #mobile-logo {\n        display: block;\n        height: 8%;\n        width: 15%;\n        position: absolute;\n        top: 20px;\n        right: 50px;\n    }\n\n    #desktop-logo {\n        display: none;\n    }\n\n    #form-background {\n        background-color: white;\n        width: 100%;\n        height: 100%;\n    }\n\n    form {\n        margin: auto 0 auto 0;\n        width: auto;\n        height: auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Pin                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                            {{\"Accedi\" | translate}}                                    1                2                3                4                5                6                7                8                9                                                                    0                DEL                                            {{\"Caricamento\" | translate}}     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginUsernameComponent.html":{"url":"components/LoginUsernameComponent.html","title":"component - LoginUsernameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginUsernameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login-username/login-username.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce il form di login con username e password\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-username\n            \n\n\n\n            \n                styleUrls\n                ./login-username.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-username.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                opacityChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthenticationService, authInfoService: AuthInformationsService, snackBar: MatSnackBar, router: Router, translateService: TranslateService, loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login-username/login-username.component.ts:45\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di login con username e password, evita di renderizzare il form di login qualora vi fosse già un token di autenticazione in localStorage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Variabile atta alla costruzione del form a livello logico\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di autenticazione\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di visualizzazione di messaggi di stato (ex. login fallito)\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router per eseguire dei reindirizzamenti su browser\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di tracciamento del caricamento di LogModifierComponent e LogViewerComponent\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-username/login-username.component.ts:94\n                \n            \n\n\n            \n                \n                    Metodo per eseguire il login, consente di salvare il token in localStorage e passare, in caso di successo, al login tramite pin\nIn caso di errore, gestisce l'apertura della barra di stato\nGestisce l'apertura della barra di caricamento\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-username/login-username.component.ts:70\n                \n            \n\n\n            \n                \n                    Costruzione del form alla creazione del componente\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-username/login-username.component.ts:83\n                \n            \n\n\n            \n                \n                    Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Messaggio da mostrare\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Etichetta del pulsante di chiusura\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-username/login-username.component.ts:35\n                        \n                    \n\n            \n                \n                    Form di login\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-username/login-username.component.ts:30\n                        \n                    \n\n            \n                \n                    Variabile booleana per cambiare l'icona che nasconde il contenuto del campo \"password\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-username/login-username.component.ts:40\n                        \n                    \n\n            \n                \n                    Variabile booleana per far comparire la rotellina di caricamento qualora la richiesta di login impiegasse più tempo del normale\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        opacityChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"in\" | string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-username/login-username.component.ts:45\n                        \n                    \n\n            \n                \n                    Attributo per la gestione dell'animazione di fadeInOut al caricamento del form e dell'immagine\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ErrorModel } from 'src/app/api/models';\nimport { AuthenticationService } from 'src/app/api/services';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoadingService } from 'src/app/services/loading/loading.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Classe che gestisce il form di login con username e password\n */\n@Component({\n  selector: 'app-login-username',\n  templateUrl: './login-username.component.html',\n  styleUrls: ['./login-username.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('in', style({ opacity: 1 })),\n      transition(':enter', [style({ opacity: 0 }), animate('0.25s ease-out')]),\n    ]),\n  ],\n})\nexport class LoginUsernameComponent implements OnInit {\n  /**\n   * Variabile booleana per cambiare l'icona che nasconde il contenuto del campo \"password\"\n   */\n  public hide: boolean = true;\n\n  /**\n   * Form di login\n   */\n  public form!: FormGroup;\n\n  /**\n   * Variabile booleana per far comparire la rotellina di caricamento qualora la richiesta di login impiegasse più tempo del normale\n   */\n  public loading: boolean = false;\n\n  /**\n   * Attributo per la gestione dell'animazione di fadeInOut al caricamento del form e dell'immagine\n   */\n  public opacityChange: 'in' | '' = '';\n\n  /**\n   * Costruttore della classe di login con username e password, evita di renderizzare il form di login qualora vi fosse già un token di autenticazione in localStorage\n   * @param formBuilder Variabile atta alla costruzione del form a livello logico\n   * @param authService Servizio di autenticazione\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param snackBar Barra di visualizzazione di messaggi di stato (ex. login fallito)\n   * @param router Router per eseguire dei reindirizzamenti su browser\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   * @param loadingService Servizio di tracciamento del caricamento di LogModifierComponent e LogViewerComponent\n   */\n  constructor(private formBuilder: FormBuilder, private authService: AuthenticationService, private authInfoService: AuthInformationsService, private snackBar: MatSnackBar,\n    private router: Router, private translateService: TranslateService, private loadingService: LoadingService) {\n    this.loadingService.reset();\n\n    if (localStorage.getItem(\"ADeToken\") != undefined && localStorage.getItem(\"ADeToken\") != \"\") {\n      this.authInfoService.Token = localStorage.getItem(\"ADeToken\")!;\n      this.router.navigate(['login/pin']);\n    }\n  }\n\n  /**\n   * Costruzione del form alla creazione del componente\n   */\n  ngOnInit() {\n    this.opacityChange = 'in';\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n   */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo per eseguire il login, consente di salvare il token in localStorage e passare, in caso di successo, al login tramite pin\n   * In caso di errore, gestisce l'apertura della barra di stato\n   * Gestisce l'apertura della barra di caricamento\n   */\n  public login(): void {\n    if (this.form.invalid) {\n      this.openSnackBar(this.translateService.instant(\"Inserire tutti i dati richiesti\"), \"X\");\n      return;\n    }\n\n    this.loading = true;\n\n    const params = {\n      \"body\": {\n        'password': this.form.controls['password'].value,\n        'username': this.form.controls['username'].value\n      }\n    };\n\n    this.authService.login(params)\n      .subscribe({\n        next: (response) => {\n          response.token != undefined ? this.authInfoService.Token = response.token : this.openSnackBar(this.translateService.instant(\"Errore 500 - Token nullo\"), \"X\");\n\n          if (this.authInfoService.Token) {\n            this.router.navigate(['login/pin']);\n          }\n        },\n        error: response => {\n          const errorDescription = (response.error as ErrorModel).description;\n          this.openSnackBar(this.translateService.instant(\"Errore \" + response.status + \" - \" + errorDescription), \"X\");\n          this.loading = false;\n        },\n        complete: () => { this.loading = false; }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{\"Nome utente\" | translate}}\n            \n        \n        \n            Password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n        {{\"Accedi\" | translate}}\n    \n    \n    \n\n\n    \n        {{\"Caricamento\" | translate}} \n    \n\n    \n\n    \n                \n                    ./login-username.component.scss\n                \n                @import \"../../variables.scss\";\n\n#visibility-button {\n    border: 0px;\n    height: 40px;\n    width: 40px;\n    border-radius: 20px;\n    text-align: center;\n    padding: 0;\n}\n\n/* Hide the password reveal button in modern browsers */\ninput[type=\"password\"]::-webkit-inner-spin-button,\ninput[type=\"password\"]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    appearance: none;\n    margin: 0;\n}\n\n/* Hide the password reveal button in Firefox */\ninput[type=\"password\"]::-moz-eye {\n    display: none;\n}\n\n/* Hide the password reveal button in Microsoft Edge */\ninput[type=\"password\"]::-ms-reveal {\n    display: none;\n}\n\n\n#form-background {\n    background-color: $backgroundColor;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\nform {\n    width: 50%;\n    height: 30%;\n    max-height: 400px;\n    background-color: white;\n    border-radius: 50px;\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: auto;\n    gap: 1.2em;\n    flex-basis: 20%;\n    padding: 3em;\n    padding-bottom: 2.5em;\n}\n\nform>* {\n    height: 80px;\n    min-height: 80px;\n}\n\nform button {\n    color: white;\n    background-color: $backgroundColor;\n}\n\nform>button {\n    width: auto;\n    border-radius: 5px;\n    height: 50px;\n    min-height: 40px;\n    margin-bottom: 3%;\n    font-size: large;\n}\n\nform button:hover {\n    background-color: white;\n    color: $backgroundColor;\n    border: 1px solid black;\n    cursor: pointer;\n    transition: 250ms;\n}\n\n#desktop-logo {\n    width: 20%;\n    height: 10%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: auto;\n    flex-basis: 40%;\n}\n\n#loading-frame {\n    min-width: 100px;\n    width: fit-content;\n    margin: auto;\n    position: absolute;\n    bottom: 10px;\n    left: 50%;\n    color: darkblue;\n    font-size: large;\n    font-weight: 500;\n    transform: translate(-50%, 0);\n}\n\n#loading-frame>* {\n    display: flex;\n    gap: 15px;\n    padding: 15px;\n    position: relative;\n    background-color: white;\n    border: 1px solid gray;\n    box-shadow: 0px 0px 5px white;\n}\n\n.mat-icon {\n    margin-top: 0.2em;\n}\n\n#mobile-logo {\n    display: none;\n}\n\n@media only screen and (max-width: 1200px) {\n    #desktop-logo {\n        width: 40%;\n        height: 20%;\n    }\n}\n\n@media only screen and (max-height: 700px) {\n    #mobile-logo {\n        display: block;\n        height: 8%;\n        width: 15%;\n    }\n\n    #desktop-logo {\n        display: none;\n    }\n\n    form {\n        height: 50%;\n        padding: 1.5em;\n        padding-bottom: 1em;\n    }\n}\n\n@media only screen and (max-height: 700px) and (max-width: 1000px) {\n    #desktop-logo {\n        height: 15%;\n        width: 30%;\n    }\n}\n\n@media only screen and (max-height : 600px) and (max-width : 1920px),\n(max-width: 500px) {\n    #mobile-logo {\n        display: block;\n        height: 8%;\n        width: 15%;\n        position: absolute;\n        top: 20px;\n        right: 50px;\n    }\n\n    #desktop-logo {\n        display: none;\n    }\n\n    #form-background {\n        background-color: white;\n        width: 100%;\n        height: 100%;\n    }\n\n    form {\n        margin: auto 0 auto 0;\n        width: auto;\n        height: auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{\"Nome utente\" | translate}}                                        Password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                            {{\"Accedi\" | translate}}                        {{\"Caricamento\" | translate}}     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginUsernameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logout$Params.html":{"url":"interfaces/Logout$Params.html","title":"interface - Logout$Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logout$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/authentication/logout.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per il logout\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\n/**\n * Interfaccia che definisce i parametri per il logout\n */\nexport interface Logout$Params {\n  body: any\n}\n\n/**\n * Funzione di utilità per il logout\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta\n */\nexport function logout(http: HttpClient, rootUrl: string, params: Logout$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, logout.PATH, 'post');\n  if (params) {\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa al logout\n */\nlogout.PATH = '/logout';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutDialogComponent.html":{"url":"components/LogoutDialogComponent.html","title":"component - LogoutDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/logout-dialog/logout-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che si occupa della presentazione e degli eventi relativi a un dialog\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-dialog\n            \n\n\n\n            \n                styleUrls\n                ./logout-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fromPage\n                            \n                            \n                                    \n                                    \n                                    Public\n                                mydata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                stay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, mydata: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/logout-dialog/logout-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di presentazione e gestione degli eventi relativi a un dialog\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n\n                                                        \n                                                \n                                                \n                                                        mydata\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Descrizione (titolo + descrizione) del dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exit\n                        \n                    \n                \n            \n            \n                \n                    \n                    exit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/logout-dialog/logout-dialog.component.ts:43\n                \n            \n\n\n            \n                \n                    Metodo che segnala la scelta dell'opzione \"Esci\" nel dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/logout-dialog/logout-dialog.component.ts:29\n                \n            \n\n\n            \n                \n                    Metodo che inizializza titolo e descrizione del dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stay\n                        \n                    \n                \n            \n            \n                \n                    \n                    stay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/logout-dialog/logout-dialog.component.ts:36\n                \n            \n\n\n            \n                \n                    Metodo che segnala la scelta dell'opzione \"Rimani\" nel dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/logout-dialog/logout-dialog.component.ts:24\n                        \n                    \n\n            \n                \n                    Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fromPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/logout-dialog/logout-dialog.component.ts:17\n                        \n                    \n\n            \n                \n                    Attributo che descrive il tipo di dialog (titolo + descrizione)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        mydata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()@Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/logout-dialog/logout-dialog.component.ts:24\n                        \n                    \n\n            \n                \n                    Descrizione (titolo + descrizione) del dialog\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n/**\n * Classe che si occupa della presentazione e degli eventi relativi a un dialog\n */\n@Component({\n  selector: 'app-logout-dialog',\n  templateUrl: './logout-dialog.component.html',\n  styleUrls: ['./logout-dialog.component.scss']\n})\nexport class LogoutDialogComponent implements OnInit {\n\n  /**\n   * Attributo che descrive il tipo di dialog (titolo + descrizione)\n   */\n  public fromPage!: { title: string, description: string };\n\n  /**\n   * Costruttore della classe di presentazione e gestione degli eventi relativi a un dialog\n   * @param dialogRef Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n   * @param mydata Descrizione (titolo + descrizione) del dialog\n   */\n  constructor(public dialogRef: MatDialogRef, @Optional() @Inject(MAT_DIALOG_DATA) public mydata: any) { }\n\n  /**\n   * Metodo che inizializza titolo e descrizione del dialog\n   */\n  ngOnInit(): void {\n    this.fromPage = this.mydata;\n  }\n\n  /**\n   * Metodo che segnala la scelta dell'opzione \"Rimani\" nel dialog\n   */\n  public stay(): void {\n    this.dialogRef.close({ event: 'stay-option' });\n  }\n\n  /**\n   * Metodo che segnala la scelta dell'opzione \"Esci\" nel dialog\n   */\n  public exit(): void {\n    this.dialogRef.close({ event: 'exit-option' });\n  }\n}\n\n    \n\n    \n        \n    {{fromPage.title | translate}}\n    {{fromPage.description | translate}}\n    {{\"Sicuro di voler uscire?\" | translate}}\n    \n        {{\"Rimani\" | translate}}\n        {{\"Esci\"| translate}}\n    \n\n    \n\n    \n                \n                    ./logout-dialog.component.scss\n                \n                #dialog {\n    padding: 1em;\n    width: 15em;\n    min-width: 100px;\n    color: black;\n}\n\nbutton {\n    background-color: white;\n}\n\n#buttons {\n    text-align: right;\n    margin-top: 1.5em;\n}\n\nbutton {\n    margin: auto;\n    font-weight: 500;\n}\n\n#title {\n    margin-top: 0.2em;\n    font-size: 20px;\n    font-weight: 500;\n}\n\np {\n    font-size: 16px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{fromPage.title | translate}}    {{fromPage.description | translate}}    {{\"Sicuro di voler uscire?\" | translate}}            {{\"Rimani\" | translate}}        {{\"Esci\"| translate}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logout/logout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce il logout dell'utente in due modalità:\n-) Logout utente: l'utente conserva il token in 'localStorage' ma perde le altre informazioni\n-) Logout completo: l'utente perde anche il token\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                logoutUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authInfoService: AuthInformationsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logout/logout.service.ts:13\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di gestione del logout\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router per eseguire dei reindirizzamenti su browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logout/logout.service.ts:25\n                \n            \n\n\n            \n                \n                    Metodo che gestisce il logout completo da parte dell'utente, eliminando anche il token di autenticazione\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logoutUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutUserId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logout/logout.service.ts:33\n                \n            \n\n\n            \n                \n                    Metodo che gestisce il logout parziale da parte dell'utente, eliminando solo l'identificativo utente\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthInformationsService } from '../auth-informations/auth-informations.service';\nimport { Router } from '@angular/router';\n\n/**\n * Classe che gestisce il logout dell'utente in due modalità:\n * -) Logout utente: l'utente conserva il token in 'localStorage' ma perde le altre informazioni\n * -) Logout completo: l'utente perde anche il token\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogoutService {\n\n  /**\n   * Costruttore della classe di gestione del logout\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione \n   * @param router Router per eseguire dei reindirizzamenti su browser\n   */\n  constructor(private authInfoService: AuthInformationsService, private router: Router) { }\n\n  /**\n   * Metodo che gestisce il logout completo da parte dell'utente, eliminando anche il token di autenticazione\n   */\n  public logout(): void {\n    this.authInfoService.clear();\n    this.router.navigate(['login/username']);\n  }\n\n  /**\n   * Metodo che gestisce il logout parziale da parte dell'utente, eliminando solo l'identificativo utente\n   */\n  public logoutUserId(): void {\n    this.authInfoService.clearUser();\n    this.router.navigate(['login/pin']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MainViewCommunicationsService.html":{"url":"injectables/MainViewCommunicationsService.html","title":"injectable - MainViewCommunicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MainViewCommunicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/main-view-communications/main-view-communications.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servizio che mette in comunicazione LogModifierComponent e LogViewerComponent\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                updateLog\n                            \n                            \n                                    Public\n                                viewUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/main-view-communications/main-view-communications.service.ts:21\n                            \n                        \n\n                \n                    \n                            Costruttore di default\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/main-view-communications/main-view-communications.service.ts:16\n                        \n                    \n\n            \n                \n                    Oggetto osservabile che funge da tramite per il passaggio del log da modificare tra LogViewerComponent e LogModifierComponent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/main-view-communications/main-view-communications.service.ts:21\n                        \n                    \n\n            \n                \n                    Oggetto osservabile che indica a LogViewerComponent di fare un refresh della tabella dei log attivi\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { QualitysavelogModel } from 'src/app/api/models';\n\n/**\n * Servizio che mette in comunicazione LogModifierComponent e LogViewerComponent\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainViewCommunicationsService {\n\n  /**\n   * Oggetto osservabile che funge da tramite per il passaggio del log da modificare tra LogViewerComponent e LogModifierComponent\n   */\n  public updateLog: Subject = new Subject();\n\n  /**\n   * Oggetto osservabile che indica a LogViewerComponent di fare un refresh della tabella dei log attivi\n   */\n  public viewUpdate: Subject = new Subject();\n\n  /**\n   * Costruttore di default\n   */\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che modella il messaggio in ingresso all'applicazione se esegue in un iframe\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            c_projectphase_id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            m_product_id\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectphase_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectphase_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:     \"DM\" | \"WM\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"DM\" | \"WM\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    token: string,\n    lang: string,\n    theme: 'DM' | 'WM',\n    username: string,\n    m_product_id: number,\n    c_projectphase_id: number,\n    user_id: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OperatorsModel.html":{"url":"interfaces/OperatorsModel.html","title":"interface - OperatorsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche di un operatore\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ad_user_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            foto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ismobileuser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mes_theme\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mes_theme_display\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            numero_matricola\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userpin\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ad_user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ad_user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foto:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isactive:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ismobileuser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ismobileuser:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mes_theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mes_theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mes_theme_display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mes_theme_display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero_matricola\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero_matricola:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userpin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userpin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OperatorsModel {\n  ad_user_id?: number;\n  foto?: number;\n  isactive?: 'Y' | 'N';\n  ismobileuser?: 'Y' | 'N';\n  mes_theme?: string;\n  mes_theme_display?: string;\n  name?: string;\n  note?: string;\n  numero_matricola?: string;\n  userpin?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OperatorsService.html":{"url":"injectables/OperatorsService.html","title":"injectable - OperatorsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OperatorsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/operators.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                FetchPath\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetch\n                            \n                            \n                                fetch$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/operators.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetch\n                        \n                    \n                \n            \n            \n                \nfetch(params: Fetch$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/operators.service.ts:41\n                \n            \n\n\n            \n                \n                    This method provides access only to the response body.\nTo access the full response (for headers, for example), fetch$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Fetch$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch$Response\n                        \n                    \n                \n            \n            \n                \nfetch$Response(params: Fetch$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/operators.service.ts:31\n                \n            \n\n\n            \n                \n                    This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use fetch() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Fetch$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        FetchPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000006/operators/fetch'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/operators.service.ts:23\n                        \n                    \n\n            \n                \n                    Path part for operation fetch()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { fetch } from '../fn/operators/fetch';\nimport { Fetch$Params } from '../fn/operators/fetch';\nimport { FetchResponseOperatorsModel } from '../models/fetch-response-operators-model';\n\n@Injectable({ providedIn: 'root' })\nexport class OperatorsService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `fetch()` */\n  static readonly FetchPath = '/9000006/operators/fetch';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `fetch()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch$Response(params: Fetch$Params, context?: HttpContext): Observable> {\n    return fetch(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `fetch$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch(params: Fetch$Params, context?: HttpContext): Observable {\n    return this.fetch$Response(params, context).pipe(\n      map((r: StrictHttpResponse): FetchResponseOperatorsModel => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/OptionsPipe.html":{"url":"pipes/OptionsPipe.html","title":"pipe - OptionsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  OptionsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/options.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce il filtraggio delle opzioni\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        optionsTrim\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(option: string, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/options.pipe.ts:20\n                \n            \n\n\n            \n                \n                    Metodo per togliere le chiavi alle opzioni degli attributi da mostrare a video\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Opzione da modificare (a cui togliere la chiave)\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Stringa contenente la chiave identificativa del valore dell'opzione da mostrare a video\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        L'opzione modificata senza la chiave\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n/**\n * Classe che gestisce il filtraggio delle opzioni\n */\n@Pipe({ name: 'optionsTrim' })\nexport class OptionsPipe implements PipeTransform {\n\n  /**\n   * Costruttore della classe che gestisce il filtro delle opzioni\n   */\n  constructor() { }\n\n  /**\n   * Metodo per togliere le chiavi alle opzioni degli attributi da mostrare a video\n   * @param option Opzione da modificare (a cui togliere la chiave)\n   * @param key Stringa contenente la chiave identificativa del valore dell'opzione da mostrare a video\n   * @returns L'opzione modificata senza la chiave\n   */\n  public transform(option: string, key: string): string {\n    return option.replaceAll(key, \"\").replaceAll(\"-\", \"\").trim();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderOperatorsModel.html":{"url":"interfaces/OrderOperatorsModel.html","title":"interface - OrderOperatorsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderOperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/order-operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ordinare gli operatori\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            direction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnname:     \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"userpin\" | \"foto\" | \"ad_user_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"userpin\" | \"foto\" | \"ad_user_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderOperatorsModel {\n  columnname?: 'mes_theme' | 'note' | 'name' | 'ismobileuser' | 'numero_matricola' | 'isactive' | 'userpin' | 'foto' | 'ad_user_id';\n  direction?: 'ASC' | 'DESC';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderQualityattributeModel.html":{"url":"interfaces/OrderQualityattributeModel.html","title":"interface - OrderQualityattributeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderQualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/order-qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ordinare gli attributi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            direction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnname:     \"optionvalue\" | \"groupname\" | \"groupdescription\" | \"c_project_attribute_group_id\" | \"attributeseqno\" | \"attributedescription\" | \"ad_reference_id\" | \"m_product_category_id\" | \"m_product_id\" | \"attributevaluetype\" | \"attributevalue\" | \"attributename\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"optionvalue\" | \"groupname\" | \"groupdescription\" | \"c_project_attribute_group_id\" | \"attributeseqno\" | \"attributedescription\" | \"ad_reference_id\" | \"m_product_category_id\" | \"m_product_id\" | \"attributevaluetype\" | \"attributevalue\" | \"attributename\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderQualityattributeModel {\n  columnname?: 'optionvalue' | 'groupname' | 'groupdescription' | 'c_project_attribute_group_id' | 'attributeseqno' | 'attributedescription' | 'ad_reference_id' | 'm_product_category_id' | 'm_product_id' | 'attributevaluetype' | 'attributevalue' | 'attributename';\n  direction?: 'ASC' | 'DESC';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderQualityphaseModel.html":{"url":"interfaces/OrderQualityphaseModel.html","title":"interface - OrderQualityphaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderQualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/order-qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ordinare le fasi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            direction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnname:     \"c_phase_id\" | \"m_product_category_id\" | \"m_product_id\" | \"status\" | \"projectplan_timeline_id\" | \"isglobal\" | \"c_projectphase_id\" | \"c_bpartner_id\" | \"linename\" | \"color\" | \"start_plan\" | \"phasename\" | \"end_plan\" | \"customer\" | \"c_projectline_id\" | \"ad_org_id\" | \"ad_client_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"c_phase_id\" | \"m_product_category_id\" | \"m_product_id\" | \"status\" | \"projectplan_timeline_id\" | \"isglobal\" | \"c_projectphase_id\" | \"c_bpartner_id\" | \"linename\" | \"color\" | \"start_plan\" | \"phasename\" | \"end_plan\" | \"customer\" | \"c_projectline_id\" | \"ad_org_id\" | \"ad_client_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderQualityphaseModel {\n  columnname?: 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n  direction?: 'ASC' | 'DESC';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderQualitysavelogModel.html":{"url":"interfaces/OrderQualitysavelogModel.html","title":"interface - OrderQualitysavelogModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderQualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/order-qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ordinare i log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            direction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnname:     \"qualitystatus\" | \"qualityvalue\" | \"isactive\" | \"c_projectphase_quality_log_id\" | \"c_projectphase_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"qualitystatus\" | \"qualityvalue\" | \"isactive\" | \"c_projectphase_quality_log_id\" | \"c_projectphase_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderQualitysavelogModel {\n  columnname?: 'qualitystatus' | 'qualityvalue' | 'isactive' | 'c_projectphase_quality_log_id' | 'c_projectphase_id';\n  direction?: 'ASC' | 'DESC';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Parameter.html":{"url":"classes/Parameter.html","title":"class - Parameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Parameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class for a parameter\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                serializeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: any, options: ParameterOptions, defaultStyle: string, defaultExplode: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ParameterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultExplode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParameterOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:40\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        serializeValue\n                        \n                    \n                \n            \n            \n                \nserializeValue(value: any, separator: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    separator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ','\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterCodec.html":{"url":"classes/ParameterCodec.html","title":"class - ParameterCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom parameter codec to correctly handle the plus sign in parameter\nvalues. See https://github.com/angular/angular/issues/18261\n\n            \n\n\n            \n                Implements\n            \n            \n                        HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decodeKey\n                        \n                    \n                \n            \n            \n                \ndecodeKey(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeValue\n                        \n                    \n                \n            \n            \n                \ndecodeValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeKey\n                        \n                    \n                \n            \n            \n                \nencodeKey(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeValue\n                        \n                    \n                \n            \n            \n                \nencodeValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParameterOptions.html":{"url":"interfaces/ParameterOptions.html","title":"interface - ParameterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParameterOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the options for appending a parameter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            explode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            style\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        explode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        explode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PathParameter.html":{"url":"classes/PathParameter.html","title":"class - PathParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PathParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                A parameter in the operation path\n\n            \n\n            \n                Extends\n            \n            \n                        Parameter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                serializeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: any, options: ParameterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ParameterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParameterOptions\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeValue\n                        \n                    \n                \n            \n            \n                \nserializeValue(value: any, separator: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Parameter\n\n                \n            \n            \n                \n                        Defined in         Parameter:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    separator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ','\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhasesComponent.html":{"url":"components/PhasesComponent.html","title":"component - PhasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/phases/phases.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe di gestione della visualizzazione delle fasi\nLe fasi sono presentate come una lista di \"carte\" da scorrere (verticalmente o orizzontalmente, a seconda della modalità di visualizzazione)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-phases\n            \n\n\n\n            \n                styleUrls\n                ./phases.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phases.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                phases\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                setActivePhase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, qualityPhaseService: QualityPhaseService, authInfoService: AuthInformationsService, activePhaseService: ActivePhaseService, logoutService: LogoutService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/phases/phases.component.ts:30\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di visualizzazione fasi, clicca automaticamente sulla prima fase disponibile\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di visualizzazione di messaggi di stato (ex. login fallito)\n\n                                                        \n                                                \n                                                \n                                                        qualityPhaseService\n                                                  \n                                                        \n                                                                        QualityPhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per l'ottenimento delle fasi\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        activePhaseService\n                                                  \n                                                        \n                                                                        ActivePhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire la fase attiva\n\n                                                        \n                                                \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del logout\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/phases/phases.component.ts:56\n                \n            \n\n\n            \n                \n                    Inizializzazione delle fasi: chiamata API per ottenere le fasi\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/phases/phases.component.ts:140\n                \n            \n\n\n            \n                \n                    Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Messaggio da mostrare\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Etichetta del pulsante di chiusura\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/phases/phases.component.ts:150\n                \n            \n\n\n            \n                \n                    Metodo che gestisce graficamente la selezione di una fase\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identificativo dell'elemento HTML cliccato\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setActivePhase\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActivePhase(phase: QualityphaseModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/phases/phases.component.ts:164\n                \n            \n\n\n            \n                \n                    Metodo per gestire la selezione (programmatica) di una fase\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phase\n                                    \n                                                QualityphaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nome della fase da impostare come attiva\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/phases/phases.component.ts:25\n                        \n                    \n\n            \n                \n                    Variabile booleana per gestire lo \"skeleton loading\" (il caricamento fittizio di dati)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        phases\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/phases/phases.component.ts:30\n                        \n                    \n\n            \n                \n                    Fasi da visualizzare\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ErrorModel, QualityphaseModel } from 'src/app/api/models';\nimport { QualityPhaseService } from 'src/app/api/services';\nimport { ActivePhaseService } from 'src/app/services/active-phase/active-phase.service';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { LogoutService } from 'src/app/services/logout/logout.service';\n\n/**\n * Classe di gestione della visualizzazione delle fasi\n * Le fasi sono presentate come una lista di \"carte\" da scorrere (verticalmente o orizzontalmente, a seconda della modalità di visualizzazione)\n */\n@Component({\n  selector: 'app-phases',\n  templateUrl: './phases.component.html',\n  styleUrls: ['./phases.component.scss']\n})\nexport class PhasesComponent implements OnInit {\n\n  /**\n   * Variabile booleana per gestire lo \"skeleton loading\" (il caricamento fittizio di dati)\n   */\n  public loading = true;\n\n  /**\n   * Fasi da visualizzare\n   */\n  public phases: Array = new Array();\n\n  /**\n   * Costruttore della classe di visualizzazione fasi, clicca automaticamente sulla prima fase disponibile\n   * @param snackBar Barra di visualizzazione di messaggi di stato (ex. login fallito)\n   * @param qualityPhaseService Servizio per l'ottenimento delle fasi\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param activePhaseService Servizio per gestire la fase attiva\n   * @param logoutService Servizio di gestione del logout\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   */\n  constructor(private snackBar: MatSnackBar, private qualityPhaseService: QualityPhaseService, private authInfoService: AuthInformationsService, private activePhaseService: ActivePhaseService, private logoutService: LogoutService, private translateService: TranslateService) {\n    // Osserva il rendering del primo pulsante: appena renderizzato, lo preme per far comparire gli attributi\n    var observer = new MutationObserver(function () {\n      if (document.getElementsByClassName('phase').item(0) != null) {\n        let firstCard: HTMLElement = document.getElementsByClassName('phase')[0] as HTMLElement;\n        firstCard.click();\n        observer.disconnect();\n      }\n    });\n    observer.observe(document, { attributes: false, childList: true, characterData: false, subtree: true })\n  }\n\n  /**\n   * Inizializzazione delle fasi: chiamata API per ottenere le fasi\n   */\n  ngOnInit() {\n\n    const token = this.authInfoService.Token;\n\n    // Dichiarazioni dettate dai modelli in /app/api/models\n    const start_plan = \"start_plan\" as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n    const end_plan = \"end_plan\" as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n    const status = \"status\" as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n    const start_plan_operator = \"greaterOrEqual\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\";\n    const end_plan_operator = \"lessOrEqual\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\";\n    const status_operator = \"greaterOrEqual\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\";\n    const status_value = \"I\";\n\n    // Condizioni di fetch:\n    // -) start_plan_date: 30gg prima della data attuale\n    // -) end_plan_date: 30gg dopo la data attuale\n    // -) status_value: I, L (tutto tranne C)\n    const previousMonth: number = (new Date().getMonth() - 1) % 12;\n    const nextMonth: number = (new Date().getMonth() + 1) % 12;\n    const previousYear: number = previousMonth == 11 ? new Date().getFullYear() - 1 : new Date().getFullYear();\n    const nextYear: number = nextMonth == 0 ? new Date().getFullYear() + 1 : new Date().getFullYear();\n\n    const start_plan_date: Date = new Date();\n    const end_plan_date: Date = new Date();\n\n    start_plan_date.setMonth(previousMonth);\n    start_plan_date.setFullYear(previousYear);\n    end_plan_date.setMonth(nextMonth);\n    end_plan_date.setFullYear(nextYear);\n\n    const params = {\n      \"AdesuiteToken\": token,\n      \"body\": {\n        \"startRow\": 0,\n        \"criteria\": [\n          {\n            \"fieldName\": start_plan as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"value\": start_plan_date.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\").substring(0, 22),\n            \"operator\": start_plan_operator as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          },\n          {\n            \"fieldName\": end_plan as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"value\": end_plan_date.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\").substring(0, 22),\n            \"operator\": end_plan_operator as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          },\n          {\n            \"fieldName\": status as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"value\": status_value,\n            \"operator\": status_operator as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          }\n        ],\n        \"orderby\": [\n          {\n            \"columnname\": \"end_plan\" as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"direction\": \"ASC\" as 'DESC' | 'ASC'\n          }\n        ],\n        \"endRow\": 100\n      }\n    };\n\n    this.qualityPhaseService.fetch_2(params)\n      .subscribe({\n        next: (response) => {\n          (response.data != undefined && response.data != null && response.data.length != 0) ? this.phases = response.data : this.openSnackBar(this.translateService.instant(\"Errore: non ci sono fasi da visualizzare!\"), \"X\");\n        },\n        error: (error) => {\n          const errorDescription = (error.error as ErrorModel) != null ? (error.error as ErrorModel).description : (error.status == 401 ? \"Non autorizzato\" : \"Errore lato server\");\n          this.openSnackBar(this.translateService.instant(\"Errore \" + error.status + \" - \" + errorDescription), \"X\");\n          if (error.status == 401) {\n            this.logoutService.logout();\n          }\n          this.loading = false;\n        },\n        complete: () => { this.loading = false; }\n      });\n\n  }\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n  */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo che gestisce graficamente la selezione di una fase\n   * @param id Identificativo dell'elemento HTML cliccato\n   */\n  public select(id: string): void {\n    document.getElementsByClassName(\"selected-card\")[0] ? document.getElementsByClassName(\"selected-card\")[0].classList.remove(\"selected-card\") : \"\";\n    let activeElement = document.getElementById(id);\n    if (activeElement != null && activeElement != undefined && activeElement?.textContent != null && activeElement?.textContent != \"\") {\n      activeElement?.classList.add(\"selected-card\");\n    } else {\n      this.openSnackBar(this.translateService.instant(\"La carta selezionata non contiene testo!\"), \"X\");\n    }\n  }\n\n  /**\n   * Metodo per gestire la selezione (programmatica) di una fase\n   * @param phase Nome della fase da impostare come attiva\n   */\n  public setActivePhase(phase: QualityphaseModel): void {\n    this.activePhaseService.update(phase);\n  }\n\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n           \n          \n           \n           \n        \n      \n    \n    \n      \n        \n          \n          {{\"Inizio\" | translate}}: {{phase.start_plan | date:'dd/MM/yyyy HH:mm'}}\n          {{\"Fine\" | translate}}: {{phase.end_plan | date:'dd/MM/yyyy HH:mm'}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./phases.component.scss\n                \n                mat-card {\n    min-width: 150px;\n    margin: 1em;\n}\n\n.scroll-viewport {\n    width: 100%;\n    height: calc(100% - 2em);\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n}\n\n.scroll-viewport::-webkit-scrollbar {\n    display: none;\n}\n\n@media only screen and (max-width: 1920px) {\n    mat-card {\n        margin-left: 0.5em;\n        margin-right: 0.5em;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                 {{\"Inizio\" | translate}}: {{phase.start_plan | date:\\'dd/MM/yyyy HH:mm\\'}}          {{\"Fine\" | translate}}: {{phase.end_plan | date:\\'dd/MM/yyyy HH:mm\\'}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QualityAttributeService.html":{"url":"injectables/QualityAttributeService.html","title":"injectable - QualityAttributeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QualityAttributeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/quality-attribute.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Visualizza gli attributi disponibile per prodotto o categoria prodotto\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                Fetch_3Path\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetch_3\n                            \n                            \n                                fetch_3$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/quality-attribute.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_3\n                        \n                    \n                \n            \n            \n                \nfetch_3(params: Fetch_3$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-attribute.service.ts:45\n                \n            \n\n\n            \n                \n                    This method provides access only to the response body.\nTo access the full response (for headers, for example), fetch_3$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Fetch_3$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_3$Response\n                        \n                    \n                \n            \n            \n                \nfetch_3$Response(params: Fetch_3$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-attribute.service.ts:35\n                \n            \n\n\n            \n                \n                    This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use fetch_3() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Fetch_3$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Fetch_3Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000003/qualityattribute/fetch'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-attribute.service.ts:27\n                        \n                    \n\n            \n                \n                    Path part for operation fetch_3()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { fetch_3 } from '../fn/quality-attribute/fetch-3';\nimport { Fetch_3$Params } from '../fn/quality-attribute/fetch-3';\nimport { FetchResponseQualityattributeModel } from '../models/fetch-response-qualityattribute-model';\n\n\n/**\n * Visualizza gli attributi disponibile per prodotto o categoria prodotto\n */\n@Injectable({ providedIn: 'root' })\nexport class QualityAttributeService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `fetch_3()` */\n  static readonly Fetch_3Path = '/9000003/qualityattribute/fetch';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `fetch_3()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_3$Response(params: Fetch_3$Params, context?: HttpContext): Observable> {\n    return fetch_3(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `fetch_3$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_3(params: Fetch_3$Params, context?: HttpContext): Observable {\n    return this.fetch_3$Response(params, context).pipe(\n      map((r: StrictHttpResponse): FetchResponseQualityattributeModel => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QualityPhaseService.html":{"url":"injectables/QualityPhaseService.html","title":"injectable - QualityPhaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QualityPhaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/quality-phase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Lista delle fasi di cui eseguire i controlli\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                Fetch_2Path\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetch_2\n                            \n                            \n                                fetch_2$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/quality-phase.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_2\n                        \n                    \n                \n            \n            \n                \nfetch_2(params: Fetch_2$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-phase.service.ts:45\n                \n            \n\n\n            \n                \n                    This method provides access only to the response body.\nTo access the full response (for headers, for example), fetch_2$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Fetch_2$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_2$Response\n                        \n                    \n                \n            \n            \n                \nfetch_2$Response(params: Fetch_2$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-phase.service.ts:35\n                \n            \n\n\n            \n                \n                    This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use fetch_2() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Fetch_2$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Fetch_2Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000005/qualityphase/fetch'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-phase.service.ts:27\n                        \n                    \n\n            \n                \n                    Path part for operation fetch_2()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { fetch_2 } from '../fn/quality-phase/fetch-2';\nimport { Fetch_2$Params } from '../fn/quality-phase/fetch-2';\nimport { FetchResponseQualityphaseModel } from '../models/fetch-response-qualityphase-model';\n\n\n/**\n * Lista delle fasi di cui eseguire i controlli\n */\n@Injectable({ providedIn: 'root' })\nexport class QualityPhaseService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `fetch_2()` */\n  static readonly Fetch_2Path = '/9000005/qualityphase/fetch';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `fetch_2()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_2$Response(params: Fetch_2$Params, context?: HttpContext): Observable> {\n    return fetch_2(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `fetch_2$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_2(params: Fetch_2$Params, context?: HttpContext): Observable {\n    return this.fetch_2$Response(params, context).pipe(\n      map((r: StrictHttpResponse): FetchResponseQualityphaseModel => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QualitySaveLogService.html":{"url":"injectables/QualitySaveLogService.html","title":"injectable - QualitySaveLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QualitySaveLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/quality-save-log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servizi che permettono il salvataggio dei log\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                AddPath\n                            \n                            \n                                    Static\n                                    Readonly\n                                DeletePath\n                            \n                            \n                                    Static\n                                    Readonly\n                                Fetch_1Path\n                            \n                            \n                                    Static\n                                    Readonly\n                                UpdatePath\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Add\n                            \n                            \n                                Add$Response\n                            \n                            \n                                Delete\n                            \n                            \n                                Delete$Response\n                            \n                            \n                                fetch_1\n                            \n                            \n                                fetch_1$Response\n                            \n                            \n                                Update\n                            \n                            \n                                Update$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/quality-save-log.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Add\n                        \n                    \n                \n            \n            \n                \nAdd(params: Add$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-save-log.service.ts:52\n                \n            \n\n\n            \n                \n                    This method provides access only to the response body.\nTo access the full response (for headers, for example), Add$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Add$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Add$Response\n                        \n                    \n                \n            \n            \n                \nAdd$Response(params: Add$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-save-log.service.ts:42\n                \n            \n\n\n            \n                \n                    This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use Add() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Add$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Delete\n                        \n                    \n                \n            \n            \n                \nDelete(params: Delete$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-save-log.service.ts:77\n                \n            \n\n\n            \n                \n                    This method provides access only to the response body.\nTo access the full response (for headers, for example), Delete$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Delete$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Delete$Response\n                        \n                    \n                \n            \n            \n                \nDelete$Response(params: Delete$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-save-log.service.ts:67\n                \n            \n\n\n            \n                \n                    This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use Delete() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Delete$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_1\n                        \n                    \n                \n            \n            \n                \nfetch_1(params: Fetch_1$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-save-log.service.ts:102\n                \n            \n\n\n            \n                \n                    This method provides access only to the response body.\nTo access the full response (for headers, for example), fetch_1$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Fetch_1$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_1$Response\n                        \n                    \n                \n            \n            \n                \nfetch_1$Response(params: Fetch_1$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-save-log.service.ts:92\n                \n            \n\n\n            \n                \n                    This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use fetch_1() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Fetch_1$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Update\n                        \n                    \n                \n            \n            \n                \nUpdate(params: Update$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-save-log.service.ts:127\n                \n            \n\n\n            \n                \n                    This method provides access only to the response body.\nTo access the full response (for headers, for example), Update$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Update$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Update$Response\n                        \n                    \n                \n            \n            \n                \nUpdate$Response(params: Update$Params, context?: HttpContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/services/quality-save-log.service.ts:117\n                \n            \n\n\n            \n                \n                    This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use Update() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Update$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        AddPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000004/qualitysavelog/add'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-save-log.service.ts:34\n                        \n                    \n\n            \n                \n                    Path part for operation Add()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        DeletePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000004/qualitysavelog/remove'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-save-log.service.ts:59\n                        \n                    \n\n            \n                \n                    Path part for operation Delete()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Fetch_1Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000004/qualitysavelog/fetch'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-save-log.service.ts:84\n                        \n                    \n\n            \n                \n                    Path part for operation fetch_1()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        UpdatePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000004/qualitysavelog/update'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-save-log.service.ts:109\n                        \n                    \n\n            \n                \n                    Path part for operation Update()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { Add } from '../fn/quality-save-log/9000004-add';\nimport { Add$Params } from '../fn/quality-save-log/9000004-add';\nimport { Delete } from '../fn/quality-save-log/9000004-delete';\nimport { Delete$Params } from '../fn/quality-save-log/9000004-delete';\nimport { Update } from '../fn/quality-save-log/9000004-update';\nimport { Update$Params } from '../fn/quality-save-log/9000004-update';\nimport { fetch_1 } from '../fn/quality-save-log/fetch-1';\nimport { Fetch_1$Params } from '../fn/quality-save-log/fetch-1';\nimport { FetchResponseQualitysavelogModel } from '../models/fetch-response-qualitysavelog-model';\nimport { QualitysavelogModel } from '../models/qualitysavelog-model';\n\n\n/**\n * Servizi che permettono il salvataggio dei log\n */\n@Injectable({ providedIn: 'root' })\nexport class QualitySaveLogService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `Add()` */\n  static readonly AddPath = '/9000004/qualitysavelog/add';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `Add()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Add$Response(params: Add$Params, context?: HttpContext): Observable> {\n    return Add(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `Add$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Add(params: Add$Params, context?: HttpContext): Observable {\n    return this.Add$Response(params, context).pipe(\n      map((r: StrictHttpResponse): QualitysavelogModel => r.body)\n    );\n  }\n\n  /** Path part for operation `Delete()` */\n  static readonly DeletePath = '/9000004/qualitysavelog/remove';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `Delete()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Delete$Response(params: Delete$Params, context?: HttpContext): Observable> {\n    return Delete(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `Delete$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Delete(params: Delete$Params, context?: HttpContext): Observable {\n    return this.Delete$Response(params, context).pipe(\n      map((r: StrictHttpResponse): QualitysavelogModel => r.body)\n    );\n  }\n\n  /** Path part for operation `fetch_1()` */\n  static readonly Fetch_1Path = '/9000004/qualitysavelog/fetch';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `fetch_1()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_1$Response(params: Fetch_1$Params, context?: HttpContext): Observable> {\n    return fetch_1(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `fetch_1$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_1(params: Fetch_1$Params, context?: HttpContext): Observable {\n    return this.fetch_1$Response(params, context).pipe(\n      map((r: StrictHttpResponse): FetchResponseQualitysavelogModel => r.body)\n    );\n  }\n\n  /** Path part for operation `Update()` */\n  static readonly UpdatePath = '/9000004/qualitysavelog/update';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `Update()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Update$Response(params: Update$Params, context?: HttpContext): Observable> {\n    return Update(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `Update$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Update(params: Update$Params, context?: HttpContext): Observable {\n    return this.Update$Response(params, context).pipe(\n      map((r: StrictHttpResponse): QualitysavelogModel => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QualityattributeModel.html":{"url":"interfaces/QualityattributeModel.html","title":"interface - QualityattributeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche di un attributo di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ad_reference_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributedescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributename\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributeseqno\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributevalue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributevaluetype\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_project_attribute_group_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupdescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            m_product_category_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            m_product_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            optionvalue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ad_reference_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ad_reference_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributedescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributedescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributeseqno\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributeseqno:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributevalue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributevalue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributevaluetype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributevaluetype:     \"Y\" | \"N\" | \"S\" | \"L\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\" | \"S\" | \"L\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_project_attribute_group_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_project_attribute_group_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupdescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupdescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_category_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionvalue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionvalue:         optionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         optionType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JsonList {\n  key: string[],\n  value: string[]\n}\n\n/**\n * Interfaccia che definisce le caratteristiche delle opzioni di un attributo di qualità\n */\nexport interface optionType {\n  type: string,\n  value: JsonList\n}\n\n/**\n * Interfaccia che definisce le caratteristiche di un attributo di qualità\n */\nexport interface QualityattributeModel {\n  ad_reference_id?: number;\n  attributedescription?: string;\n  attributename?: string;\n  attributeseqno?: number;\n  attributevalue?: string;\n  attributevaluetype?: 'Y' | 'N' | 'S' | 'L';\n  c_project_attribute_group_id?: number;\n  groupdescription?: string;\n  groupname?: string;\n  m_product_category_id?: number;\n  m_product_id?: number;\n  optionvalue?: optionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QualityphaseModel.html":{"url":"interfaces/QualityphaseModel.html","title":"interface - QualityphaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche di una fase di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ad_client_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ad_org_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_bpartner_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_phase_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_projectline_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_projectphase_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            end_plan\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isglobal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linename\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            m_product_category_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            m_product_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phasename\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phasetitlehtml\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectplan_timeline_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            start_plan\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ad_client_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ad_client_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ad_org_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ad_org_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_bpartner_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_bpartner_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_phase_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_phase_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectline_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectline_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectphase_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectphase_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end_plan:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isglobal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isglobal:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_category_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phasename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phasename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phasetitlehtml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phasetitlehtml:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectplan_timeline_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectplan_timeline_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start_plan:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QualityphaseModel {\n  ad_client_id?: number;\n  ad_org_id?: number;\n  c_bpartner_id?: number;\n  c_phase_id?: number;\n  c_projectline_id?: number;\n  c_projectphase_id?: number;\n  color?: string;\n  customer?: string;\n  end_plan?: Date;\n  isglobal?: 'Y' | 'N';\n  linename?: string;\n  m_product_category_id?: number;\n  m_product_id?: number;\n  phasename?: string;\n  phasetitlehtml?: string;\n  projectplan_timeline_id?: number;\n  start_plan?: Date;\n  status?: 'Y' | 'N';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QualitysavelogModel.html":{"url":"interfaces/QualitysavelogModel.html","title":"interface - QualitysavelogModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche di una richiesta CRUD per un log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            c_projectphase_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_projectphase_quality_log_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            qualitystatus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            qualityvalue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectphase_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectphase_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectphase_quality_log_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectphase_quality_log_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isactive:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qualitystatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualitystatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qualityvalue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualityvalue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QualitysavelogModel {\n  c_projectphase_id?: number;\n  c_projectphase_quality_log_id?: number;\n  isactive?: 'Y' | 'N';\n  qualitystatus?: string;\n  qualityvalue?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParameter.html":{"url":"classes/QueryParameter.html","title":"class - QueryParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                A parameter in the query\n\n            \n\n            \n                Extends\n            \n            \n                        Parameter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                serializeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: any, options: ParameterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ParameterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParameterOptions\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(params: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            HttpParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeValue\n                        \n                    \n                \n            \n            \n                \nserializeValue(value: any, separator: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Parameter\n\n                \n            \n            \n                \n                        Defined in         Parameter:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    separator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ','\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestBuilder.html":{"url":"classes/RequestBuilder.html","title":"class - RequestBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                Helper to build http requests from parameters\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _bodyContent\n                            \n                            \n                                    Optional\n                                _bodyContentType\n                            \n                            \n                                    Private\n                                _header\n                            \n                            \n                                    Private\n                                _path\n                            \n                            \n                                    Private\n                                _query\n                            \n                            \n                                    Public\n                                method\n                            \n                            \n                                    Public\n                                operationPath\n                            \n                            \n                                    Public\n                                rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                build\n                            \n                            \n                                    Private\n                                formDataValue\n                            \n                            \n                                header\n                            \n                            \n                                path\n                            \n                            \n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rootUrl: string, operationPath: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:216\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rootUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        operationPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _bodyContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:215\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _bodyContentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:216\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _header\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:214\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:212\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _query\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:213\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:221\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        operationPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:220\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:219\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n            \n                \nbody(value: any, contentType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:248\n                \n            \n\n\n            \n                \n                    Sets the body content, along with the content type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'application/json'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(options?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:314\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Builds the request with the current set parameters\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        formDataValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    formDataValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:298\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        header\n                        \n                    \n                \n            \n            \n                \nheader(name: string, value: any, options?: ParameterOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:241\n                \n            \n\n\n            \n                \n                    Sets a header parameter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ParameterOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath(name: string, value: any, options?: ParameterOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:227\n                \n            \n\n\n            \n                \n                    Sets a path parameter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ParameterOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n            \n                \nquery(name: string, value: any, options?: ParameterOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api/request-builder.ts:234\n                \n            \n\n\n            \n                \n                    Sets a query parameter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ParameterOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafePipe.html":{"url":"pipes/SafePipe.html","title":"pipe - SafePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/safe-html.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce la sanificazione di input HTML\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(style: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/safe-html.pipe.ts:21\n                \n            \n\n\n            \n                \n                    Metodo per sanificare una stringa contenente HTML\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    style\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Stringa da sanificare\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        La stringa sanificata (un oggetto nullo in caso di errori)\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n/**\n * Classe che gestisce la sanificazione di input HTML\n */\n@Pipe({ name: 'safeHtml' })\nexport class SafePipe implements PipeTransform {\n\n  /**\n   * Costruttore della classe che gestisce la sanificazione di input HTML\n   * @param sanitizer Oggetto che sanifica gli input\n   */\n  constructor(private sanitizer: DomSanitizer) { }\n\n  /**\n   * Metodo per sanificare una stringa contenente HTML\n   * @param style Stringa da sanificare\n   * @returns La stringa sanificata (un oggetto nullo in caso di errori)\n   */\n  public transform(style: string): string | null {\n    return this.sanitizer.sanitize(SecurityContext.HTML, style);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidenav/sidenav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce i due tipi di logout:\n\nLogout generale, nel quale si elimina anche il token di autenticazione\nLogout utente, nel quale si elimina sono l'identificativo dell'utente\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n\n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openLogoutDialog\n                            \n                            \n                                    Public\n                                openLogoutUserDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logoutService: LogoutService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidenav/sidenav.component.ts:16\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce la barra laterale, provvista di tre icone (di cui due per i diversi tipi di logout)\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione logout\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog di logout\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openLogoutDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openLogoutDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sidenav/sidenav.component.ts:29\n                \n            \n\n\n            \n                \n                    Metodo per gestire le interazioni con il dialog di logout generale\nOccorre reinserire nome utente e password per ri-ottenere il token\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openLogoutUserDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openLogoutUserDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sidenav/sidenav.component.ts:54\n                \n            \n\n\n            \n                \n                    Metodo per gestire le interazioni con il dialog di logout parziale\nOccorre reinserire il pin per ri-accedere ai servizi in qualità di operatore\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LogoutDialogComponent } from '../logout-dialog/logout-dialog.component';\nimport { LogoutService } from 'src/app/services/logout/logout.service';\n\n/**\n * Classe che gestisce i due tipi di logout:\n * - Logout generale, nel quale si elimina anche il token di autenticazione\n * - Logout utente, nel quale si elimina sono l'identificativo dell'utente\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n\n  /**\n   * Costruttore della classe che gestisce la barra laterale, provvista di tre icone (di cui due per i diversi tipi di logout)\n   * @param logoutService Servizio di gestione logout\n   * @param dialog Dialog di logout\n   */\n  constructor(private logoutService: LogoutService, private dialog: MatDialog) { }\n\n  /**\n   * Metodo per gestire le interazioni con il dialog di logout generale \n   * Occorre reinserire nome utente e password per ri-ottenere il token\n   */\n  public openLogoutDialog(): void {\n    const logoutDialog = this.dialog.open(LogoutDialogComponent, {\n      data: {\n        title: 'Logout generale',\n        description: 'Occorre reinserire username e pin'\n      }\n    });\n\n    logoutDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"exit-option\":\n          this.logoutService.logout();\n          break;\n        case \"stay-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  /**\n   * Metodo per gestire le interazioni con il dialog di logout parziale \n   * Occorre reinserire il pin per ri-accedere ai servizi in qualità di operatore\n   */\n  public openLogoutUserDialog(): void {\n    const logoutDialog = this.dialog.open(LogoutDialogComponent, {\n      data: {\n        title: 'Logout parziale',\n        description: 'Occorre reinserire il pin'\n      }\n    });\n\n    logoutDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"exit-option\":\n          this.logoutService.logoutUserId();\n          break;\n        case \"stay-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                #nav {\n    height: 100%;\n    width: 60px;\n    display: flex;\n    flex-direction: column;\n}\n\n#logo {\n    margin-bottom: 3em;\n    margin-top: 1em;\n    width: 70%;\n    height: 50px;\n    background-repeat: no-repeat;\n    background-size: contain;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.icon {\n    width: 100%;\n    border: none;\n    height: 48px;\n    margin-bottom: 0.5em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SplashScreenComponent.html":{"url":"components/SplashScreenComponent.html","title":"component - SplashScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SplashScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/splash-screen/splash-screen.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente per la gestione dello splash-screen\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-splash-screen\n            \n\n\n\n            \n                styleUrls\n                ./splash-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./splash-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                opacityChange\n                            \n                            \n                                    Public\n                                showSplash\n                            \n                            \n                                    Public\n                                splashTransition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animationDuration\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/splash-screen/splash-screen.component.ts:32\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di gestione dello splash-screen\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di tracciamento del caricamento di LogModifierComponent e LogViewerComponent\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animationDuration\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/splash-screen/splash-screen.component.ts:32\n                            \n                        \n                \n                    \n                        Durata della transizione scelta\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/splash-screen/splash-screen.component.ts:53\n                \n            \n\n\n            \n                \n                    Inizializzazione della transizione\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        opacityChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/splash-screen/splash-screen.component.ts:22\n                        \n                    \n\n            \n                \n                    Opacità di base dello splash-screen all'avvio, in attesa che si completino i caricamenti\ndell'interfaccia principale\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showSplash\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/splash-screen/splash-screen.component.ts:27\n                        \n                    \n\n            \n                \n                    Attributo per nascondere/mostrare lo splash-screen\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        splashTransition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/splash-screen/splash-screen.component.ts:16\n                        \n                    \n\n            \n                \n                    Attributo che indica la transizione che lo splash-screen deve effettuare\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { LoadingService } from 'src/app/services/loading/loading.service';\n\n/**\n * Componente per la gestione dello splash-screen\n */\n@Component({\n  selector: 'app-splash-screen',\n  templateUrl: './splash-screen.component.html',\n  styleUrls: ['./splash-screen.component.scss'],\n})\nexport class SplashScreenComponent implements OnInit {\n  /**\n   * Attributo che indica la transizione che lo splash-screen deve effettuare\n   */\n  public splashTransition: string = \"\";\n\n  /**\n   * Opacità di base dello splash-screen all'avvio, in attesa che si completino i caricamenti \n   * dell'interfaccia principale\n   */\n  public opacityChange: number = 1;\n\n  /**\n   * Attributo per nascondere/mostrare lo splash-screen\n   */\n  public showSplash = true;\n\n  /**\n   * Durata della transizione scelta\n   */\n  @Input() animationDuration: number = 0.5;\n\n  /**\n   * Costruttore della classe di gestione dello splash-screen\n   * @param loadingService Servizio di tracciamento del caricamento di LogModifierComponent e LogViewerComponent\n   */\n  constructor(private loadingService: LoadingService) {\n    this.loadingService.Loading.subscribe(show => {\n      if (!show) {\n        this.opacityChange = 0;\n        setTimeout(() => {\n          this.showSplash = false;\n        }, this.animationDuration * 1000);\n      }\n    }\n    )\n  }\n\n  /**\n   * Inizializzazione della transizione\n   */\n  ngOnInit(): void {\n    this.splashTransition = \"opacity \" + this.animationDuration + \"s\";\n  }\n}\n    \n\n    \n        \n  \n    \n     ADeQA \n    \n  \n\n    \n\n    \n                \n                    ./splash-screen.component.scss\n                \n                .app-splash-screen {\n  background: #1A1B2E;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  transition: opacity 0.5s;\n}\n\n.app-label {\n  margin-top: 32px;\n  color: #fff;\n  font-size: 4em;\n  font-family: \"Fredoka One\";\n}\n\n.app-splash-inner {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.app-logo {\n  background: url(\"../../../assets/images/logo-ADeQA-white.svg\");\n  background-repeat: no-repeat;\n  max-width: 100%;\n  background-position: center;\n  background-size: contain;\n  width: 120px;\n  height: 120px;\n}\n\n.app-loader {\n  background: url(\"../../../assets/images/three-dots.svg\");\n  background-repeat: no-repeat;\n  max-width: 100%;\n  background-position: center;\n  background-size: contain;\n  width: 80px;\n  height: 80px;\n  margin-top: 80px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           ADeQA       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SplashScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/theme/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servizio che consente la gestione del tema grafico dell'applicazione\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/theme/theme.service.ts:9\n                            \n                        \n\n                \n                    \n                            Costruttore di default\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleTheme(dark: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/theme/theme.service.ts:20\n                \n            \n\n\n            \n                \n                    Metodo per impostare il tema grafico dell'applicazione\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dark\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Variabile booleana che indica se il tema è chiaro (false) o scuro (true)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Servizio che consente la gestione del tema grafico dell'applicazione\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  /**\n   * Costruttore di default\n   */\n  constructor() { }\n\n  /**\n   * Metodo per impostare il tema grafico dell'applicazione \n   * @param dark Variabile booleana che indica se il tema è chiaro (false) o scuro (true)\n   */\n  public toggleTheme(dark: boolean) {\n\n    if (dark) {\n      document.body.classList.remove('theme-light');\n      document.body.classList.add('theme-dark');\n    } else {\n      document.body.classList.remove('theme-dark');\n      document.body.classList.add('theme-light');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbar/toolbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce l'intestazione della visualizzazione grafica\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n\n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeLanguage\n                            \n                            \n                                    Public\n                                iconMobileQuery\n                            \n                            \n                                    Public\n                                isDark\n                            \n                            \n                                    Public\n                                languages\n                            \n                            \n                                    Public\n                                mobileQuery\n                            \n                            \n                                    Private\n                                queryListener\n                            \n                            \n                                    Public\n                                strictLang\n                            \n                            \n                                    Public\n                                today\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeActiveLanguage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openLogoutDialog\n                            \n                            \n                                    Public\n                                openLogoutUserDialog\n                            \n                            \n                                    Public\n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authInfoService: AuthInformationsService, themeService: ThemeService, logoutService: LogoutService, dialog: MatDialog, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbar/toolbar.component.ts:64\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce l'intestazione della visualizzazione grafica\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del tema grafico di interfaccia\n\n                                                        \n                                                \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione logout\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog di logout\n\n                                                        \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del linguaggio attivo nell'applicazione\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeActiveLanguage(language: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:112\n                \n            \n\n\n            \n                \n                    Metodo per cambiare linguaggio di traduzione dell'applicazione\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nuovo linguaggio in cui l'applicazione deve essere tradotta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:103\n                \n            \n\n\n            \n                \n                    Distruttore per rimuovere gli event listener\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:89\n                \n            \n\n\n            \n                \n                    Metodo di inizializzazione per quanto riguarda nome utente e tema all'avvio\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openLogoutDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openLogoutDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:129\n                \n            \n\n\n            \n                \n                    Metodo per gestire le interazioni con il dialog di logout generale\nOccorre reinserire nome utente e password per ri-ottenere il token\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openLogoutUserDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openLogoutUserDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:154\n                \n            \n\n\n            \n                \n                    Metodo per gestire le interazioni con il dialog di logout parziale\nOccorre reinserire il pin per ri-accedere ai servizi in qualità di operatore\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleTheme(undefined: MatSlideToggleChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:120\n                \n            \n\n\n            \n                \n                    Metodo per cambiare tema dell'applicazione\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            MatSlideToggleChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:49\n                        \n                    \n\n            \n                \n                    Linguaggio attualmente selezionato dalla lista di linguaggi disponibili\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        iconMobileQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:64\n                        \n                    \n\n            \n                \n                    Lista di query per capire quando nascondere l'icona del prodotto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDark\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:23\n                        \n                    \n\n            \n                \n                    Attributo per gestire il toggle dello slider all'avvio\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Italiano\", \"Inglese\", \"Spagnolo\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:39\n                        \n                    \n\n            \n                \n                    Lista di linguaggi disponibili\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mobileQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:59\n                        \n                    \n\n            \n                \n                    Lista di query per capire quando cambiare [mode]\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        queryListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:54\n                        \n                    \n\n            \n                \n                    Query listener: consente di capire quando il menù delle fasi deve cambiare [mode]\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        strictLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['it', 'en', 'es']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:44\n                        \n                    \n\n            \n                \n                    Lista di linguaggi - stringhe da usare con il servizio di traduzione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:29\n                        \n                    \n\n            \n                \n                    Attributo contenente la data odierna (giorno in cui il component viene generato)\nServe per estrarre nel template HTML il mese, l'anno e la settimana\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:34\n                        \n                    \n\n            \n                \n                    Attributo contenente il nome dell'utente (operatore) autenticato\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { LogoutService } from 'src/app/services/logout/logout.service';\nimport { ThemeService } from 'src/app/services/theme/theme.service';\nimport { LogoutDialogComponent } from '../logout-dialog/logout-dialog.component';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { LanguageService } from 'src/app/services/language/language.service';\n\n/**\n * Classe che gestisce l'intestazione della visualizzazione grafica\n */\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n  /**\n   * Attributo per gestire il toggle dello slider all'avvio\n   */\n  public isDark: boolean = false;\n\n  /**\n   * Attributo contenente la data odierna (giorno in cui il component viene generato)\n   * Serve per estrarre nel template HTML il mese, l'anno e la settimana\n   */\n  public today: Date = new Date();\n\n  /**\n   * Attributo contenente il nome dell'utente (operatore) autenticato\n   */\n  public user: string = \"\";\n\n  /**\n   * Lista di linguaggi disponibili\n   */\n  public languages: string[] = [\"Italiano\", \"Inglese\", \"Spagnolo\"];\n\n  /**\n   * Lista di linguaggi - stringhe da usare con il servizio di traduzione\n   */\n  public strictLang: string[] = ['it', 'en', 'es'];\n\n  /**\n   * Linguaggio attualmente selezionato dalla lista di linguaggi disponibili\n   */\n  public activeLanguage: string = \"\";\n\n  /**\n * Query listener: consente di capire quando il menù delle fasi deve cambiare [mode]\n */\n  private queryListener: () => void;\n\n  /**\n   * Lista di query per capire quando cambiare [mode]\n   */\n  public mobileQuery: MediaQueryList;\n\n  /**\n   * Lista di query per capire quando nascondere l'icona del prodotto\n   */\n  public iconMobileQuery: MediaQueryList;\n\n  /**\n   * Costruttore della classe che gestisce l'intestazione della visualizzazione grafica \n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param themeService Servizio di gestione del tema grafico di interfaccia\n   * @param logoutService Servizio di gestione logout\n   * @param dialog Dialog di logout\n   * @param languageService Servizio di gestione del linguaggio attivo nell'applicazione\n   */\n  constructor(private authInfoService: AuthInformationsService, private themeService: ThemeService, private logoutService: LogoutService, private dialog: MatDialog, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, private languageService: LanguageService) {\n\n    this.iconMobileQuery = media.matchMedia('(max-width: 500px)');\n    this.mobileQuery = media.matchMedia('(max-width: 900px)');\n    this.queryListener = () => changeDetectorRef.detectChanges();\n    this.iconMobileQuery.addEventListener(\"change\", this.queryListener);\n    this.mobileQuery.addEventListener(\"change\", this.queryListener);\n\n    this.activeLanguage = localStorage.getItem('lang') || 'it';\n    this.languageService.changeLanguage(this.activeLanguage);\n  }\n\n  /**\n   * Metodo di inizializzazione per quanto riguarda nome utente e tema all'avvio\n   */\n  ngOnInit(): void {\n    this.user = this.authInfoService.UserName;\n    this.isDark = this.authInfoService.UserTheme == \"DM\" as \"DM\" | \"WM\";\n    this.themeService.toggleTheme(this.isDark);\n    this.languageService.activeLanguage.subscribe(\n      language => {\n        this.activeLanguage = language;\n      }\n    )\n  }\n\n  /**\n   * Distruttore per rimuovere gli event listener\n   */\n  ngOnDestroy(): void {\n    this.iconMobileQuery.removeEventListener(\"change\", this.queryListener);\n    this.mobileQuery.removeEventListener(\"change\", this.queryListener);\n  }\n\n  /**\n   * Metodo per cambiare linguaggio di traduzione dell'applicazione\n   * @param language Nuovo linguaggio in cui l'applicazione deve essere tradotta\n   */\n  public changeActiveLanguage(language: string): void {\n    this.languageService.changeLanguage(language);\n  }\n\n  /**\n   * Metodo per cambiare tema dell'applicazione\n   * @param checked Indica se il nuovo tema è scuro o chiaro\n   */\n  public toggleTheme({ checked }: MatSlideToggleChange): void {\n    this.isDark = checked;\n    this.themeService.toggleTheme(this.isDark);\n  }\n\n  /**\n   * Metodo per gestire le interazioni con il dialog di logout generale \n   * Occorre reinserire nome utente e password per ri-ottenere il token\n   */\n  public openLogoutDialog(): void {\n    const logoutDialog = this.dialog.open(LogoutDialogComponent, {\n      data: {\n        title: 'Logout generale',\n        description: 'Occorre reinserire username e pin'\n      }\n    });\n\n    logoutDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"exit-option\":\n          this.logoutService.logout();\n          break;\n        case \"stay-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  /**\n   * Metodo per gestire le interazioni con il dialog di logout parziale \n   * Occorre reinserire il pin per ri-accedere ai servizi in qualità di operatore\n   */\n  public openLogoutUserDialog(): void {\n    const logoutDialog = this.dialog.open(LogoutDialogComponent, {\n      data: {\n        title: 'Logout parziale',\n        description: 'Occorre reinserire il pin'\n      }\n    });\n\n    logoutDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"exit-option\":\n          this.logoutService.logoutUserId();\n          break;\n        case \"stay-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  {{(today | date:'MMMM')! | titlecase | translate}} {{today | date:'yyyy'}} -\n    {{\"Settimana\" | translate}} {{today | date: 'ww'}}\n  \n  \n    \n    \n    \n  \n\n  \n    \n  \n  \n    \n      {{language | translate}}\n    \n  \n\n  {{user}}\n  \n\n  \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                #toolbar {\n    width: 100%;\n    height: 70px;\n}\n\n.spacer {\n    flex: 1 1 auto;\n}\n\nimg {\n    width: 40px;\n    border-radius: 40px;\n}\n\n#toolbar>* {\n    margin-left: 1em;\n}\n\n#dark-theme-slider {\n    display: flex;\n    align-items: center;\n    transition-duration: 0ms;\n}\n\n#dark-theme-slider>* {\n    margin-left: 0.2em;\n}\n\n.checkmark:before {\n    content: 'L';\n    font-family: arial;\n    transform: scaleX(-1) rotate(-35deg);\n    display: inline-block;\n    vertical-align: top;\n    line-height: 1em;\n    width: 1em;\n    height: 1em;\n    margin-left: 0.5em;\n    text-align: center;\n    position: absolute;\n    left: 0;\n}\n\n.entry {\n    margin-left: 1em;\n}\n\n#logo {\n    flex: 0 0 60px;\n    height: 30px;\n    background-repeat: no-repeat;\n    background-size: contain;\n    margin-right: 1em;\n}\n\n.logout-mobile,\n#translation {\n    width: 48px;\n    height: 48px;\n    border-radius: 100%;\n    border: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{(today | date:\\'MMMM\\')! | titlecase | translate}} {{today | date:\\'yyyy\\'}} -    {{\"Settimana\" | translate}} {{today | date: \\'ww\\'}}                                      {{language | translate}}        {{user}}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SplashScreenComponent', 'selector': 'app-splash-screen'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update$Params.html":{"url":"interfaces/Update$Params.html","title":"interface - Update$Params","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Update$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-save-log/9000004-update.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per aggiornare un log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         QualitysavelogModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QualitysavelogModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { QualitysavelogModel } from '../../models/qualitysavelog-model';\n\n/**\n * Interfaccia che definisce i parametri per aggiornare un log di qualità\n */\nexport interface Update$Params {\n  AdesuiteToken: string;\n  body: QualitysavelogModel\n}\n\n/**\n * Funzione di utilità per aggiornare un log di qualità\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - il log aggiornato\n */\nexport function Update(http: HttpClient, rootUrl: string, params: Update$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, Update.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'aggiornamento di un log di qualità\n */\nUpdate.PATH = '/9000004/qualitysavelog/update';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api/api-configuration.ts\n            \n            injectable\n            ApiConfiguration\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/api/api-configuration.ts\n            \n            interface\n            ApiConfigurationParams\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/api/base-service.ts\n            \n            injectable\n            BaseService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/authentication/login.ts\n            \n            interface\n            Login$Params\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/api/fn/authentication/login.ts\n            \n            function\n            login\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/authentication/logout.ts\n            \n            interface\n            Logout$Params\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/api/fn/authentication/logout.ts\n            \n            function\n            logout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/operators/fetch.ts\n            \n            interface\n            Fetch$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/operators/fetch.ts\n            \n            function\n            fetch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-attribute/fetch-3.ts\n            \n            interface\n            Fetch_3$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-attribute/fetch-3.ts\n            \n            function\n            fetch_3\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-phase/fetch-2.ts\n            \n            interface\n            Fetch_2$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-phase/fetch-2.ts\n            \n            function\n            fetch_2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-add.ts\n            \n            interface\n            Add$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-add.ts\n            \n            function\n            Add\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-delete.ts\n            \n            interface\n            Delete$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-delete.ts\n            \n            function\n            Delete\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-update.ts\n            \n            interface\n            Update$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-update.ts\n            \n            function\n            Update\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/fetch-1.ts\n            \n            interface\n            Fetch_1$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/fetch-1.ts\n            \n            function\n            fetch_1\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/models/error-model.ts\n            \n            interface\n            ErrorModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-request-operators-model.ts\n            \n            interface\n            FetchRequestOperatorsModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-request-qualityattribute-model.ts\n            \n            interface\n            FetchRequestQualityattributeModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-request-qualityphase-model.ts\n            \n            interface\n            FetchRequestQualityphaseModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-request-qualitysavelog-model.ts\n            \n            interface\n            FetchRequestQualitysavelogModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-response-operators-model.ts\n            \n            interface\n            FetchResponseOperatorsModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-response-qualityattribute-model.ts\n            \n            interface\n            FetchResponseQualityattributeModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-response-qualityphase-model.ts\n            \n            interface\n            FetchResponseQualityphaseModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-response-qualitysavelog-model.ts\n            \n            interface\n            FetchResponseQualitysavelogModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/filter-operators-model.ts\n            \n            interface\n            FilterOperatorsModel\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/api/models/filter-qualityattribute-model.ts\n            \n            interface\n            FilterQualityattributeModel\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/api/models/filter-qualityphase-model.ts\n            \n            interface\n            FilterQualityphaseModel\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/api/models/filter-qualitysavelog-model.ts\n            \n            interface\n            FilterQualitysavelogModel\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/api/models/operators-model.ts\n            \n            interface\n            OperatorsModel\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/api/models/order-operators-model.ts\n            \n            interface\n            OrderOperatorsModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/order-qualityattribute-model.ts\n            \n            interface\n            OrderQualityattributeModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/order-qualityphase-model.ts\n            \n            interface\n            OrderQualityphaseModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/order-qualitysavelog-model.ts\n            \n            interface\n            OrderQualitysavelogModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/qualityattribute-model.ts\n            \n            interface\n            JsonList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/qualityattribute-model.ts\n            \n            interface\n            optionType\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/qualityattribute-model.ts\n            \n            interface\n            QualityattributeModel\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/api/models/qualityphase-model.ts\n            \n            interface\n            QualityphaseModel\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/app/api/models/qualitysavelog-model.ts\n            \n            interface\n            QualitysavelogModel\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            HeaderParameter\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            Parameter\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            ParameterCodec\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            PathParameter\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            QueryParameter\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            RequestBuilder\n            \n                37 %\n                (6/16)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            interface\n            ParameterOptions\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            variable\n            ParameterCodecInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/api/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/api/services/operators.service.ts\n            \n            injectable\n            OperatorsService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/api/services/quality-attribute.service.ts\n            \n            injectable\n            QualityAttributeService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/api/services/quality-phase.service.ts\n            \n            injectable\n            QualityPhaseService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/api/services/quality-save-log.service.ts\n            \n            injectable\n            QualitySaveLogService\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts\n            \n            component\n            ConfirmDataDialogComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/log-modifier/log-modifier.component.ts\n            \n            component\n            LogModifierComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/components/log-viewer/log-viewer.component.ts\n            \n            component\n            LogViewerComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/components/login-pin/login-pin.component.ts\n            \n            component\n            LoginPinComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/components/login-username/login-username.component.ts\n            \n            component\n            LoginUsernameComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/logout-dialog/logout-dialog.component.ts\n            \n            component\n            LogoutDialogComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/phases/phases.component.ts\n            \n            component\n            PhasesComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/splash-screen/splash-screen.component.ts\n            \n            component\n            SplashScreenComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            interface\n            Message\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/pipes/options.pipe.ts\n            \n            pipe\n            OptionsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/safe-html.pipe.ts\n            \n            pipe\n            SafePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/active-attributes/active-attributes.service.ts\n            \n            injectable\n            ActiveAttributesService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/active-phase/active-phase.service.ts\n            \n            injectable\n            ActivePhaseService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/auth-informations/auth-informations.service.ts\n            \n            injectable\n            AuthInformationsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/iframe-initializer/iframe-initializer.service.ts\n            \n            injectable\n            IframeInitializerService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/logout/logout.service.ts\n            \n            injectable\n            LogoutService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/main-view-communications/main-view-communications.service.ts\n            \n            injectable\n            MainViewCommunicationsService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/cdk : ^16.2.6\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/material : ^16.2.6\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            @angular/service-worker : ^16.2.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Add   (src/.../9000004-add.ts)\n                        \n                        \n                            Delete   (src/.../9000004-delete.ts)\n                        \n                        \n                            fetch   (src/.../fetch.ts)\n                        \n                        \n                            fetch_1   (src/.../fetch-1.ts)\n                        \n                        \n                            fetch_2   (src/.../fetch-2.ts)\n                        \n                        \n                            fetch_3   (src/.../fetch-3.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            login   (src/.../login.ts)\n                        \n                        \n                            logout   (src/.../logout.ts)\n                        \n                        \n                            Update   (src/.../9000004-update.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/api/fn/quality-save-log/9000004-add.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Add\n                        \n                    \n                \n            \n            \n                \nAdd(http: HttpClient, rootUrl: string, params: Add$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                    Funzione di utilità per aggiungere un log di qualità per la fase attiva\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Servizio di utilità per eseguire chiamate HTTP\n\n                                    \n                                \n                                \n                                    rootUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL di base della richiesta\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                Add$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametri per effettuare la richiesta\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Contesto HTTP della richiesta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto Observable contenete il body della risposta - il log inserito\n\n                    \n                \n            \n        \n    \n    src/app/api/fn/quality-save-log/9000004-delete.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Delete\n                        \n                    \n                \n            \n            \n                \nDelete(http: HttpClient, rootUrl: string, params: Delete$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                    Funzione di utilità per eliminare un log di qualità\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Servizio di utilità per eseguire chiamate HTTP\n\n                                    \n                                \n                                \n                                    rootUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL di base della richiesta\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                Delete$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametri per effettuare la richiesta\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Contesto HTTP della richiesta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto Observable contenete il body della risposta - il log eliminato\n\n                    \n                \n            \n        \n    \n    src/app/api/fn/operators/fetch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fetch\n                        \n                    \n                \n            \n            \n                \nfetch(http: HttpClient, rootUrl: string, params: Fetch$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                    Funzione di utilità per il login - pin\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Servizio di utilità per eseguire chiamate HTTP\n\n                                    \n                                \n                                \n                                    rootUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL di base della richiesta\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                Fetch$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametri per effettuare la richiesta\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Contesto HTTP della richiesta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto Observable contenete il body della risposta\n\n                    \n                \n            \n        \n    \n    src/app/api/fn/quality-save-log/fetch-1.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fetch_1\n                        \n                    \n                \n            \n            \n                \nfetch_1(http: HttpClient, rootUrl: string, params: Fetch_1$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                    Funzione di utilità per ottenere un log di qualità\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Servizio di utilità per eseguire chiamate HTTP\n\n                                    \n                                \n                                \n                                    rootUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL di base della richiesta\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                Fetch_1$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametri per effettuare la richiesta\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Contesto HTTP della richiesta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto Observable contenete il body della risposta - i log di qualità\n\n                    \n                \n            \n        \n    \n    src/app/api/fn/quality-phase/fetch-2.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fetch_2\n                        \n                    \n                \n            \n            \n                \nfetch_2(http: HttpClient, rootUrl: string, params: Fetch_2$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                    Funzione di utilità per ottenere una fase di produzione\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Servizio di utilità per eseguire chiamate HTTP\n\n                                    \n                                \n                                \n                                    rootUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL di base della richiesta\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                Fetch_2$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametri per effettuare la richiesta\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Contesto HTTP della richiesta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto Observable contenete il body della risposta - le fasi di produzione\n\n                    \n                \n            \n        \n    \n    src/app/api/fn/quality-attribute/fetch-3.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fetch_3\n                        \n                    \n                \n            \n            \n                \nfetch_3(http: HttpClient, rootUrl: string, params: Fetch_3$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                    Funzione di utilità per ottenere gli attributi di qualità di una fase\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Servizio di utilità per eseguire chiamate HTTP\n\n                                    \n                                \n                                \n                                    rootUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL di base della richiesta\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                Fetch_3$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametri per effettuare la richiesta\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Contesto HTTP della richiesta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto Observable contenete il body della risposta - gli attributi di qualità di una fase\n\n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/api/fn/authentication/login.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(http: HttpClient, rootUrl: string, params: Login$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                    Funzione di utilità per il login - username\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Servizio di utilità per eseguire chiamate HTTP\n\n                                    \n                                \n                                \n                                    rootUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL di base della richiesta\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                Login$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametri per effettuare la richiesta\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Contesto HTTP della richiesta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto Observable contenete il body della risposta\n\n                    \n                \n            \n        \n    \n    src/app/api/fn/authentication/logout.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(http: HttpClient, rootUrl: string, params: Logout$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                    Funzione di utilità per il logout\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Servizio di utilità per eseguire chiamate HTTP\n\n                                    \n                                \n                                \n                                    rootUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL di base della richiesta\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                Logout$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametri per effettuare la richiesta\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Contesto HTTP della richiesta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto Observable contenete il body della risposta\n\n                    \n                \n            \n        \n    \n    src/app/api/fn/quality-save-log/9000004-update.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Update\n                        \n                    \n                \n            \n            \n                \nUpdate(http: HttpClient, rootUrl: string, params: Update$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                    Funzione di utilità per aggiornare un log di qualità\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                            HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Servizio di utilità per eseguire chiamate HTTP\n\n                                    \n                                \n                                \n                                    rootUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL di base della richiesta\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                Update$Params\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametri per effettuare la richiesta\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            HttpContext\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Contesto HTTP della richiesta\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        Oggetto Observable contenete il body della risposta - il log aggiornato\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nADeQA\nThis project was generated with Angular CLI version 16.2.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/optionType.html":{"url":"interfaces/optionType.html","title":"interface - optionType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  optionType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche delle opzioni di un attributo di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         JsonList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JsonList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JsonList {\n  key: string[],\n  value: string[]\n}\n\n/**\n * Interfaccia che definisce le caratteristiche delle opzioni di un attributo di qualità\n */\nexport interface optionType {\n  type: string,\n  value: JsonList\n}\n\n/**\n * Interfaccia che definisce le caratteristiche di un attributo di qualità\n */\nexport interface QualityattributeModel {\n  ad_reference_id?: number;\n  attributedescription?: string;\n  attributename?: string;\n  attributeseqno?: number;\n  attributevalue?: string;\n  attributevaluetype?: 'Y' | 'N' | 'S' | 'L';\n  c_project_attribute_group_id?: number;\n  groupdescription?: string;\n  groupname?: string;\n  m_product_category_id?: number;\n  m_product_id?: number;\n  optionvalue?: optionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nApiConfiguration\n\nApiConfiguration\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nApiConfiguration->ApiModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nApiModule -->\n\nAuthenticationService->ApiModule\n\n\n\n\n\nOperatorsService\n\nOperatorsService\n\nApiModule -->\n\nOperatorsService->ApiModule\n\n\n\n\n\nQualityAttributeService\n\nQualityAttributeService\n\nApiModule -->\n\nQualityAttributeService->ApiModule\n\n\n\n\n\nQualityPhaseService\n\nQualityPhaseService\n\nApiModule -->\n\nQualityPhaseService->ApiModule\n\n\n\n\n\nQualitySaveLogService\n\nQualitySaveLogService\n\nApiModule -->\n\nQualitySaveLogService->ApiModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmDataDialogComponent\n\nConfirmDataDialogComponent\n\nAppModule -->\n\nConfirmDataDialogComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLogModifierComponent\n\nLogModifierComponent\n\nAppModule -->\n\nLogModifierComponent->AppModule\n\n\n\n\n\nLogViewerComponent\n\nLogViewerComponent\n\nAppModule -->\n\nLogViewerComponent->AppModule\n\n\n\n\n\nLoginPinComponent\n\nLoginPinComponent\n\nAppModule -->\n\nLoginPinComponent->AppModule\n\n\n\n\n\nLoginUsernameComponent\n\nLoginUsernameComponent\n\nAppModule -->\n\nLoginUsernameComponent->AppModule\n\n\n\n\n\nLogoutDialogComponent\n\nLogoutDialogComponent\n\nAppModule -->\n\nLogoutDialogComponent->AppModule\n\n\n\n\n\nOptionsPipe\n\nOptionsPipe\n\nAppModule -->\n\nOptionsPipe->AppModule\n\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\nAppModule -->\n\nPhasesComponent->AppModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nAppModule -->\n\nSafePipe->AppModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nAppModule -->\n\nSidenavComponent->AppModule\n\n\n\n\n\nSplashScreenComponent\n\nSplashScreenComponent\n\nAppModule -->\n\nSplashScreenComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    35 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StrictHttpResponse   (src/.../strict-http-response.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/api/strict-http-response.ts\n    \n    \n        \n            \n                \n                    \n                    StrictHttpResponse\n                \n            \n            \n                \n                    Constrains the http response to not have the body defined as T | null, but T only.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ParameterCodecInstance   (src/.../request-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/api/request-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ParameterCodecInstance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ParameterCodec()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
