var COMPODOC_SEARCH_INDEX = {
    "index": { "version": "2.3.9", "fields": ["title", "body"], "fieldVectors": [["title/injectables/ActiveAttributesService.html", [0, 1.004, 1, 2.742]], ["body/injectables/ActiveAttributesService.html", [0, 1.13, 1, 3.086, 2, 1.285, 3, 0.106, 4, 0.095, 5, 0.095, 6, 4.41, 7, 5.05, 8, 2.693, 9, 0.312, 10, 2.16, 11, 0.718, 12, 2.605, 13, 2.944, 14, 3.633, 15, 5.723, 16, 3.603, 17, 5.249, 18, 5.249, 19, 0.831, 20, 3.492, 21, 3.987, 22, 0.128, 23, 0.31, 24, 2.127, 25, 4.748, 26, 1.093, 27, 4.571, 28, 4.571, 29, 1.899, 30, 6.017, 31, 2.896, 32, 0.691, 33, 3.087, 34, 4.41, 35, 3.241, 36, 2.829, 37, 4.529, 38, 1.407, 39, 4.571, 40, 1.584, 41, 1.207, 42, 1.177, 43, 0.013, 44, 1.098, 45, 0.207, 46, 0.534, 47, 2.031, 48, 1.142, 49, 3.603, 50, 3.811, 51, 3.091, 52, 2.158, 53, 2.348, 54, 2.348, 55, 2.462, 56, 0.925, 57, 3.851, 58, 4.571, 59, 3.597, 60, 3.087, 61, 2.66, 62, 2.695, 63, 3.086, 64, 3.086, 65, 4.063, 66, 3.987, 67, 1.105, 68, 1.756, 69, 4.571, 70, 3.811, 71, 3.087, 72, 4.542, 73, 1.945, 74, 3.091, 75, 3.603, 76, 3.086, 77, 4.571, 78, 0.894, 79, 4.743, 80, 4.571, 81, 4.571, 82, 3.987, 83, 4.571, 84, 3.603, 85, 3.987, 86, 4.571, 87, 2.306, 88, 2.829, 89, 2.348, 90, 1.599, 91, 3.987, 92, 4.571, 93, 3.603, 94, 3.091, 95, 2.732, 96, 4.571, 97, 4.571, 98, 3.087, 99, 2.713, 100, 5.249, 101, 2.101, 102, 3.316, 103, 1.701, 104, 3.987, 105, 3.987, 106, 4.571, 107, 3.087, 108, 2.896, 109, 3.603, 110, 3.987, 111, 5.487, 112, 0.901, 113, 1.207, 114, 3.987, 115, 3.603, 116, 0.679, 117, 1.663, 118, 0.714, 119, 1.149, 120, 1.845, 121, 2.693, 122, 2.084, 123, 2.239, 124, 2.433, 125, 1.515, 126, 1.663, 127, 1.955, 128, 2.896, 129, 2.084, 130, 1.069, 131, 1.337, 132, 1.237, 133, 0.106, 134, 0.454, 135, 1.719, 136, 1.337, 137, 3.087, 138, 3.087, 139, 1.899, 140, 3.083, 141, 2.954, 142, 3.448, 143, 3.448, 144, 3.448, 145, 3.448, 146, 3.448, 147, 3.448, 148, 3.448, 149, 2.559, 150, 3.448, 151, 3.448, 152, 3.448, 153, 3.087, 154, 3.083, 155, 3.083, 156, 2.589, 157, 2.589, 158, 2.589, 159, 2.589, 160, 1.979, 161, 2.061, 162, 1.845, 163, 0.789, 164, 1.515, 165, 0.815, 166, 1.451, 167, 1.515, 168, 1.749, 169, 3.087, 170, 1.451, 171, 2.239, 172, 3.087, 173, 3.087, 174, 3.087, 175, 1.218, 176, 3.087, 177, 1.38, 178, 3.087, 179, 5.443, 180, 3.087, 181, 3.087, 182, 3.087, 183, 3.087, 184, 3.087, 185, 3.087, 186, 2.433, 187, 3.087, 188, 3.087, 189, 3.087, 190, 3.087, 191, 3.087, 192, 3.087, 193, 3.087, 194, 3.087, 195, 3.087, 196, 3.087, 197, 2.693, 198, 0.007, 199, 0.007]], ["title/injectables/ActivePhaseService.html", [0, 1.004, 37, 2.573]], ["body/injectables/ActivePhaseService.html", [0, 1.436, 2, 1.805, 3, 0.149, 4, 0.133, 5, 0.133, 6, 4.76, 9, 0.283, 10, 2.513, 11, 0.802, 12, 3.031, 14, 3.156, 19, 0.873, 20, 3.914, 22, 0.179, 23, 0.394, 24, 2.121, 26, 1.389, 29, 2.121, 31, 3.681, 32, 1.466, 37, 3.681, 38, 1.527, 40, 2.013, 41, 2.06, 42, 0.848, 43, 0.013, 44, 0.792, 45, 0.202, 46, 0.385, 48, 1.131, 50, 3.292, 56, 1.578, 57, 4.201, 59, 4.491, 61, 2.605, 62, 2.328, 65, 4.727, 66, 5.716, 67, 1.076, 68, 1.696, 73, 2.262, 74, 2.985, 78, 1.369, 90, 1.3, 94, 2.985, 99, 3.156, 100, 6.107, 101, 2.53, 102, 5.45, 103, 2.162, 104, 5.069, 105, 5.069, 108, 3.681, 111, 6.049, 112, 1.696, 113, 1.849, 116, 0.639, 118, 1.003, 119, 1.614, 120, 2.592, 122, 5.073, 131, 1.878, 132, 1.738, 133, 0.149, 134, 0.638, 135, 1.108, 175, 0.97, 198, 0.009, 199, 0.009, 200, 3.418, 201, 5.79, 202, 5.811, 203, 1.64, 204, 3.13, 205, 6.553, 206, 7, 207, 5.811, 208, 4.336, 209, 5.811, 210, 4.336, 211, 6.107, 212, 5.811, 213, 4.336, 214, 4.215, 215, 3.292, 216, 5.811, 217, 5.811, 218, 5.811, 219, 3.924, 220, 3.473, 221, 2.328, 222, 5.811, 223, 5.811, 224, 4.215, 225, 5.811, 226, 4.336, 227, 4.336]], ["title/interfaces/Add$Params.html", [228, 0.044, 229, 2.742]], ["body/interfaces/Add$Params.html", [3, 0.166, 4, 0.149, 5, 0.149, 9, 0.236, 11, 0.667, 19, 0.929, 20, 2.939, 22, 0.2, 23, 0.424, 41, 1.828, 43, 0.013, 45, 0.192, 47, 1.464, 48, 1.118, 56, 1.4, 57, 3.368, 67, 0.796, 73, 2.363, 78, 1.223, 99, 2.186, 101, 2.671, 103, 1.804, 113, 1.28, 116, 0.756, 119, 1.804, 130, 1.68, 133, 0.214, 135, 1.868, 139, 1.369, 163, 1.768, 164, 3.589, 165, 1.999, 175, 1.399, 177, 1.464, 198, 0.01, 199, 0.01, 228, 0.053, 229, 4.673, 230, 0.981, 231, 2.746, 232, 2.746, 233, 3.071, 234, 3.821, 235, 1.308, 236, 1.446, 237, 3.253, 238, 6.252, 239, 4.536, 240, 2.446, 241, 1.931, 242, 0.886, 243, 4.142, 244, 1.825, 245, 2.021, 246, 3.166, 247, 1.464, 248, 2.611, 249, 1.622, 250, 2.099, 251, 2.603, 252, 2.099, 253, 2.064, 254, 1.159, 255, 1.804, 256, 1.369, 257, 2.611, 258, 3.274, 259, 2.49, 260, 3.212, 261, 3.517, 262, 2.49, 263, 2.166, 264, 1.74, 265, 1.464, 266, 2.398, 267, 2.49, 268, 2.237, 269, 2.49, 270, 2.49, 271, 2.099, 272, 3.821, 273, 2.186, 274, 4.229, 275, 2.611, 276, 2.611, 277, 6.252, 278, 2.746, 279, 2.898, 280, 2.898, 281, 2.611, 282, 2.092, 283, 2.611, 284, 2.611, 285, 1.943, 286, 1.943, 287, 2.099, 288, 2.611, 289, 3.728, 290, 1.943, 291, 2.099, 292, 1.567, 293, 2.49, 294, 1.622, 295, 2.611, 296, 2.611, 297, 2.38, 298, 4.848, 299, 4.229]], ["title/injectables/ApiConfiguration.html", [0, 1.004, 300, 1.909]], ["body/injectables/ApiConfiguration.html", [0, 1.782, 2, 2.543, 3, 0.209, 4, 0.188, 5, 0.188, 9, 0.297, 22, 0.252, 23, 0.489, 38, 1.278, 42, 1.194, 43, 0.013, 45, 0.188, 90, 1.366, 112, 1.783, 116, 0.596, 118, 1.413, 131, 2.645, 132, 2.447, 133, 0.247, 134, 0.899, 198, 0.011, 199, 0.011, 228, 0.067, 242, 0.93, 263, 2.747, 300, 3.39, 301, 5.684, 302, 4.814, 303, 6.291, 304, 3.885, 305, 6.291, 306, 6.108, 307, 5.328, 308, 4.124]], ["title/interfaces/ApiConfigurationParams.html", [228, 0.044, 308, 2.742]], ["body/interfaces/ApiConfigurationParams.html", [0, 1.787, 3, 0.21, 4, 0.189, 5, 0.189, 9, 0.298, 22, 0.254, 23, 0.491, 42, 1.414, 43, 0.013, 45, 0.189, 46, 0.641, 116, 0.598, 118, 1.419, 131, 2.656, 132, 2.458, 133, 0.248, 134, 0.903, 198, 0.011, 199, 0.011, 228, 0.067, 230, 1.241, 242, 0.962, 263, 2.806, 300, 2.884, 301, 4.836, 302, 4.836, 303, 5.352, 304, 3.305, 305, 5.352, 307, 6.308, 308, 4.883]], ["title/modules/ApiModule.html", [309, 2.573, 310, 2.946]], ["body/modules/ApiModule.html", [3, 0.168, 4, 0.151, 5, 0.151, 9, 0.238, 26, 1.17, 32, 1.095, 34, 4.922, 38, 1.024, 42, 0.957, 43, 0.013, 44, 0.893, 45, 0.151, 46, 0.651, 67, 0.804, 113, 1.661, 116, 0.795, 118, 1.132, 123, 3.55, 133, 0.168, 134, 0.72, 163, 1.607, 175, 1.095, 198, 0.01, 199, 0.01, 232, 2.772, 244, 1.836, 247, 1.478, 253, 1.776, 265, 1.478, 300, 3.714, 304, 3.745, 308, 4.955, 309, 4.404, 310, 6.114, 311, 3.1, 312, 3.305, 313, 2.119, 314, 4.958, 315, 3.857, 316, 5.784, 317, 4.563, 318, 4.269, 319, 4.269, 320, 4.922, 321, 4.644, 322, 4.644, 323, 5.246, 324, 4.958, 325, 3.857, 326, 3.55, 327, 4.894, 328, 3.985, 329, 5.487, 330, 3.985, 331, 4.894, 332, 6.29, 333, 4.894, 334, 6.952, 335, 4.894, 336, 4.894, 337, 4.894, 338, 5.48, 339, 6.29, 340, 2.636, 341, 4.894, 342, 6.952, 343, 4.894, 344, 4.894, 345, 4.894, 346, 3.857, 347, 4.269, 348, 4.269, 349, 6.29, 350, 6.29, 351, 4.894, 352, 4.894, 353, 4.894, 354, 4.248, 355, 4.894, 356, 4.269, 357, 4.269, 358, 2.925, 359, 2.772, 360, 4.894]], ["title/components/AppComponent.html", [203, 1.146, 361, 1.691]], ["body/components/AppComponent.html", [3, 0.181, 4, 0.163, 5, 0.163, 10, 2.374, 19, 0.878, 32, 1.185, 38, 1.108, 40, 2.292, 41, 1.747, 42, 1.036, 43, 0.013, 44, 1.317, 45, 0.163, 46, 0.47, 47, 1.599, 116, 0.645, 118, 1.225, 132, 2.65, 133, 0.181, 134, 0.78, 135, 1.353, 136, 2.294, 198, 0.01, 199, 0.01, 203, 2.036, 240, 2.138, 313, 2.294, 361, 3.145, 362, 3.109, 363, 2.601, 364, 2.601, 365, 2.601, 366, 2.601, 367, 4.621, 368, 2.388, 369, 4.112, 370, 3.938, 371, 3.247, 372, 7.212, 373, 3.247, 374, 6.614, 375, 4.621, 376, 4.491, 377, 5.297, 378, 4.798, 379, 6.614, 380, 3.398, 381, 2.721, 382, 3.563, 383, 4.621, 384, 5.297, 385, 4.621, 386, 3.109, 387, 2.461, 388, 2.601, 389, 2.811, 390, 2.601, 391, 2.601, 392, 2.205, 393, 2.601, 394, 1.546, 395, 3.247, 396, 2.123, 397, 2.601, 398, 2.123, 399, 2.374, 400, 2.601, 401, 2.123, 402, 2.601, 403, 2.205, 404, 2.601, 405, 2.205, 406, 1.971, 407, 2.205, 408, 2.601, 409, 2.205, 410, 2.601, 411, 2.205, 412, 2.601, 413, 2.205, 414, 2.601, 415, 2.601, 416, 2.601]], ["title/modules/AppModule.html", [309, 2.573, 354, 2.742]], ["body/modules/AppModule.html", [3, 0.129, 4, 0.116, 5, 0.116, 43, 0.013, 113, 0.993, 116, 0.832, 118, 0.869, 133, 0.18, 134, 0.553, 175, 0.841, 198, 0.008, 199, 0.008, 244, 1.775, 247, 1.135, 273, 1.694, 309, 2.381, 311, 2.381, 312, 2.538, 313, 1.627, 314, 4.794, 315, 4.794, 316, 4.152, 317, 2.726, 324, 4.152, 325, 2.962, 326, 2.726, 338, 4.152, 346, 4.152, 347, 5.305, 348, 4.595, 354, 5.712, 357, 4.595, 361, 3.296, 370, 1.767, 380, 2.706, 381, 1.93, 392, 2.995, 394, 1.538, 396, 2.96, 398, 2.882, 401, 2.882, 403, 2.995, 405, 2.995, 407, 2.995, 409, 2.995, 411, 2.995, 413, 2.995, 417, 3.278, 418, 3.278, 419, 3.278, 420, 3.278, 421, 4.557, 422, 4.857, 423, 4.857, 424, 2.962, 425, 5.267, 426, 5.267, 427, 5.267, 428, 4.152, 429, 2.129, 430, 3.758, 431, 3.758, 432, 4.595, 433, 2.726, 434, 3.278, 435, 5.267, 436, 3.758, 437, 5.267, 438, 3.758, 439, 5.267, 440, 3.758, 441, 3.758, 442, 5.267, 443, 3.758, 444, 5.267, 445, 3.758, 446, 3.758, 447, 5.267, 448, 3.149, 449, 2.246, 450, 2.246, 451, 5.267, 452, 3.758, 453, 5.267, 454, 2.381, 455, 5.267, 456, 3.758, 457, 5.267, 458, 3.758, 459, 5.267, 460, 3.758, 461, 5.267, 462, 3.278, 463, 3.278, 464, 5.267, 465, 3.758, 466, 5.267, 467, 5.267, 468, 2.538, 469, 2.726, 470, 3.278, 471, 3.278, 472, 5.267, 473, 2.962, 474, 3.758, 475, 3.758, 476, 2.962, 477, 3.758, 478, 3.758, 479, 3.758, 480, 5.267, 481, 3.758, 482, 5.267, 483, 3.758, 484, 3.758, 485, 2.538, 486, 3.821, 487, 3.758, 488, 3.758, 489, 5.267, 490, 3.758, 491, 5.267, 492, 3.758, 493, 5.267, 494, 3.758, 495, 3.758, 496, 2.726, 497, 3.758, 498, 5.267, 499, 3.758, 500, 3.758, 501, 3.278, 502, 4.595, 503, 3.758, 504, 3.758, 505, 3.758, 506, 3.278, 507, 3.758, 508, 3.278, 509, 3.278, 510, 3.758, 511, 3.278, 512, 3.758, 513, 3.758, 514, 3.758, 515, 2.962, 516, 3.758, 517, 3.758, 518, 3.758, 519, 3.758, 520, 3.758, 521, 3.758, 522, 3.758, 523, 3.758, 524, 3.278, 525, 3.758, 526, 2.962, 527, 3.758, 528, 3.758, 529, 3.758, 530, 3.278, 531, 3.758, 532, 3.758, 533, 3.758, 534, 2.538, 535, 3.758, 536, 2.024, 537, 3.278, 538, 3.758]], ["title/modules/AppRoutingModule.html", [309, 2.573, 423, 2.742]], ["body/modules/AppRoutingModule.html", [3, 0.203, 4, 0.183, 5, 0.183, 43, 0.013, 116, 0.783, 118, 1.372, 133, 0.203, 134, 0.873, 139, 1.674, 198, 0.011, 199, 0.011, 203, 2.217, 292, 2.538, 311, 3.758, 317, 4.303, 338, 5.587, 346, 4.675, 396, 3.037, 398, 2.84, 401, 2.84, 423, 4.786, 432, 6.182, 433, 4.303, 434, 5.174, 469, 4.303, 470, 5.174, 471, 5.174, 539, 5.931, 540, 5.931, 541, 7.087, 542, 5.499, 543, 3.546, 544, 5.931, 545, 3.758, 546, 5.931, 547, 5.931, 548, 4.675, 549, 5.931]], ["title/injectables/AuthInformationsService.html", [0, 1.004, 36, 1.909]], ["body/injectables/AuthInformationsService.html", [0, 1.099, 2, 1.238, 3, 0.102, 4, 0.091, 5, 0.091, 9, 0.307, 10, 1.595, 11, 0.63, 19, 0.856, 22, 0.123, 23, 0.302, 24, 2.136, 26, 1.063, 29, 2.18, 32, 1.191, 36, 2.089, 38, 1.629, 40, 1.54, 42, 1.155, 43, 0.013, 44, 1.078, 45, 0.218, 46, 0.524, 48, 1.002, 52, 1.783, 53, 3.408, 61, 2.198, 62, 1.781, 67, 1.209, 68, 2.064, 78, 1.479, 89, 3.408, 90, 1.321, 103, 1.654, 112, 1.937, 116, 0.519, 118, 0.688, 125, 3.85, 127, 1.883, 131, 1.287, 132, 1.191, 133, 0.102, 134, 0.438, 135, 1.509, 160, 2.558, 161, 3.691, 167, 2.9, 175, 1.321, 198, 0.007, 199, 0.007, 214, 3.224, 221, 1.781, 224, 3.224, 239, 5.129, 242, 0.943, 321, 1.777, 340, 2.394, 399, 1.595, 406, 1.654, 550, 4.442, 551, 2.593, 552, 4.445, 553, 3.742, 554, 6.517, 555, 3.894, 556, 7.228, 557, 5.153, 558, 5.907, 559, 3.503, 560, 4.445, 561, 4.445, 562, 2.55, 563, 5.229, 564, 3.503, 565, 3.877, 566, 4.445, 567, 4.445, 568, 4.445, 569, 4.445, 570, 2.973, 571, 4.445, 572, 2.657, 573, 4.656, 574, 4.615, 575, 5.907, 576, 6.634, 577, 2.973, 578, 4.445, 579, 4.445, 580, 4.445, 581, 3.224, 582, 4.445, 583, 3.877, 584, 3.503, 585, 5.601, 586, 5.339, 587, 4.445, 588, 3.503, 589, 3.503, 590, 2.182, 591, 4.445, 592, 3.503, 593, 2.973, 594, 4.445, 595, 3.877, 596, 4.445, 597, 1.342, 598, 2.365, 599, 2.973, 600, 3.877, 601, 3.877, 602, 2.518, 603, 3.503, 604, 2.973, 605, 4.774, 606, 5.153, 607, 4.774, 608, 5.129, 609, 6.634, 610, 2.973, 611, 2.973, 612, 6.167, 613, 3.305, 614, 2.973, 615, 2.973, 616, 6.167, 617, 3.742, 618, 5.153, 619, 5.229, 620, 2.973, 621, 2.973, 622, 4.445, 623, 2.973, 624, 2.973, 625, 4.445, 626, 3.877, 627, 2.973, 628, 2.973, 629, 2.973, 630, 2.973, 631, 2.973, 632, 2.973, 633, 2.973, 634, 2.973, 635, 1.777, 636, 2.593, 637, 5.907, 638, 2.593, 639, 6.323, 640, 2.973, 641, 6.323, 642, 2.593, 643, 5.907, 644, 2.593, 645, 3.034, 646, 2.973, 647, 2.973, 648, 2.973, 649, 2.973, 650, 2.973, 651, 2.973, 652, 2.973, 653, 2.973, 654, 2.973, 655, 2.973, 656, 2.973, 657, 2.973, 658, 2.593, 659, 2.343]], ["title/injectables/AuthenticationService.html", [0, 1.004, 320, 2.573]], ["body/injectables/AuthenticationService.html", [0, 1.268, 2, 1.507, 3, 0.124, 4, 0.111, 5, 0.111, 22, 0.15, 23, 0.348, 24, 1.448, 26, 1.226, 32, 0.81, 38, 1.562, 42, 1.338, 43, 0.013, 44, 1.249, 45, 0.249, 46, 0.648, 67, 1.065, 90, 1.148, 101, 2.931, 112, 1.497, 116, 0.76, 118, 0.837, 119, 1.347, 131, 1.567, 132, 1.45, 133, 0.124, 134, 0.533, 161, 1.632, 163, 1.816, 165, 2.134, 175, 1.45, 198, 0.008, 199, 0.008, 242, 0.829, 244, 1.892, 245, 2.563, 246, 2.807, 247, 1.093, 249, 1.211, 250, 1.567, 251, 2.481, 252, 1.567, 253, 1.932, 254, 1.941, 256, 2.108, 265, 1.093, 268, 2.581, 282, 2.703, 291, 2.221, 292, 2.095, 300, 3.047, 304, 1.95, 320, 3.25, 328, 4.73, 330, 4.502, 340, 1.95, 399, 2.726, 406, 2.826, 545, 4.73, 660, 3.157, 661, 2.411, 662, 3.672, 663, 4.799, 664, 5.958, 665, 5.958, 666, 3.25, 667, 6.482, 668, 6.482, 669, 3.25, 670, 3.619, 671, 2.293, 672, 5.129, 673, 4.935, 674, 3.619, 675, 3.798, 676, 5.547, 677, 3.51, 678, 4.377, 679, 5.042, 680, 5.042, 681, 5.042, 682, 3.875, 683, 5.129, 684, 3.619, 685, 4.377, 686, 4.106, 687, 5.129, 688, 4.935, 689, 3.619, 690, 5.129, 691, 3.619, 692, 3.619, 693, 4.377, 694, 3.047, 695, 3.619, 696, 2.05, 697, 2.444, 698, 2.293, 699, 5.129, 700, 5.129, 701, 2.444, 702, 3.619, 703, 2.411, 704, 3.619, 705, 3.464, 706, 3.464, 707, 3.619, 708, 3.619, 709, 2.293]], ["title/injectables/BaseService.html", [0, 1.004, 662, 2.3]], ["body/injectables/BaseService.html", [0, 1.632, 2, 2.2, 3, 0.181, 4, 0.163, 5, 0.163, 9, 0.257, 22, 0.218, 23, 0.448, 24, 2.034, 32, 1.477, 38, 1.579, 42, 1.291, 43, 0.013, 44, 1.205, 45, 0.222, 46, 0.669, 67, 1.239, 68, 1.542, 116, 0.703, 118, 1.222, 132, 3.024, 133, 0.181, 134, 1.06, 175, 1.182, 198, 0.01, 199, 0.01, 242, 0.974, 244, 2.203, 247, 1.595, 253, 2.034, 263, 2.691, 264, 2.709, 265, 1.994, 300, 3.547, 304, 2.846, 329, 5.761, 340, 3.88, 559, 5.205, 645, 3.7, 662, 3.741, 666, 4.564, 669, 3.347, 671, 4.184, 698, 5.02, 710, 6.776, 711, 4.609, 712, 5.284, 713, 5.284, 714, 5.284, 715, 5.284, 716, 7.546, 717, 6.604, 718, 6.604, 719, 6.604, 720, 5.284, 721, 5.284, 722, 3.741, 723, 6.604, 724, 6.604, 725, 5.284, 726, 5.284]], ["title/components/ConfirmDataDialogComponent.html", [203, 1.146, 392, 1.691]], ["body/components/ConfirmDataDialogComponent.html", [3, 0.118, 4, 0.106, 5, 0.106, 9, 0.282, 10, 2.275, 11, 0.813, 12, 2.143, 19, 0.857, 22, 0.142, 23, 0.336, 26, 1.184, 29, 2.236, 32, 0.77, 38, 1.507, 40, 1.715, 41, 1.307, 42, 0.673, 43, 0.013, 44, 1.058, 45, 0.207, 46, 0.514, 48, 0.952, 50, 2.804, 56, 1.457, 61, 2.601, 63, 3.343, 67, 0.952, 68, 2.04, 73, 2.048, 74, 2.543, 75, 3.902, 78, 0.968, 89, 3.255, 94, 2.977, 116, 0.483, 117, 3.122, 118, 0.796, 133, 0.118, 134, 0.507, 135, 1.265, 198, 0.008, 199, 0.008, 203, 1.636, 240, 2.048, 242, 0.702, 313, 1.491, 361, 1.434, 362, 2.327, 363, 1.69, 364, 1.69, 365, 1.69, 366, 1.69, 368, 1.552, 369, 3.86, 370, 3.696, 371, 2.43, 373, 2.43, 378, 3.591, 382, 3.97, 386, 2.327, 387, 1.842, 388, 1.69, 389, 2.358, 390, 1.69, 391, 1.69, 392, 2.638, 393, 3.86, 394, 2.413, 395, 2.43, 396, 1.38, 397, 1.69, 398, 1.38, 399, 1.777, 400, 1.69, 401, 1.38, 402, 1.69, 403, 1.434, 404, 1.69, 405, 1.434, 406, 1.281, 407, 1.434, 408, 1.69, 409, 1.434, 410, 1.69, 411, 1.434, 412, 1.69, 413, 1.434, 414, 1.69, 415, 1.69, 416, 1.69, 454, 2.181, 496, 5.346, 536, 2.667, 613, 2.795, 727, 6.428, 728, 2.714, 729, 5.534, 730, 6.097, 731, 4.95, 732, 1.777, 733, 5.056, 734, 4.318, 735, 5.856, 736, 5.056, 737, 6.097, 738, 5.856, 739, 3.59, 740, 3.004, 741, 5.856, 742, 4.318, 743, 4.318, 744, 2.232, 745, 3.343, 746, 5.056, 747, 5.056, 748, 3.914, 749, 5.056, 750, 3.283, 751, 5.526, 752, 5.676, 753, 6.713, 754, 3.296, 755, 3.296, 756, 3.443, 757, 5.528, 758, 5.528, 759, 4.995, 760, 6.337, 761, 4.279, 762, 3.443, 763, 3.443, 764, 4.318, 765, 3.004, 766, 2.325, 767, 4.318, 768, 3.004, 769, 3.004, 770, 3.443, 771, 3.004, 772, 3.004, 773, 3.343, 774, 3.004, 775, 1.855, 776, 3.004, 777, 3.004, 778, 3.004, 779, 4.318, 780, 3.591, 781, 3.136, 782, 4.318, 783, 4.318, 784, 2.181, 785, 1.855, 786, 2.543, 787, 3.004, 788, 2.181, 789, 2.498, 790, 2.543, 791, 2.498, 792, 3.343, 793, 2.181, 794, 2.325, 795, 3.004, 796, 1.552, 797, 2.058, 798, 2.058, 799, 3.122, 800, 2.498, 801, 1.855, 802, 2.325, 803, 3.914, 804, 3.136, 805, 2.498, 806, 2.325, 807, 2.498, 808, 3.004, 809, 3.443]], ["title/components/DashboardComponent.html", [203, 1.146, 396, 1.627]], ["body/components/DashboardComponent.html", [3, 0.093, 4, 0.083, 5, 0.083, 9, 0.202, 10, 2.024, 11, 0.711, 12, 2.441, 13, 1.601, 19, 0.91, 22, 0.112, 23, 0.281, 24, 1.989, 26, 0.991, 29, 1.94, 32, 0.607, 35, 2.712, 36, 2.65, 38, 1.438, 40, 1.437, 41, 1.095, 42, 0.811, 43, 0.013, 44, 1.029, 45, 0.197, 46, 0.368, 47, 1.702, 48, 1.102, 51, 2.13, 52, 1.252, 53, 2.896, 54, 2.13, 55, 2.234, 56, 1.296, 64, 2.8, 67, 0.681, 68, 1.646, 73, 2.397, 74, 2.13, 76, 3.807, 78, 1.344, 89, 2.586, 90, 0.607, 93, 3.269, 94, 2.896, 95, 2.479, 103, 1.543, 112, 0.792, 116, 0.625, 118, 0.627, 125, 1.331, 126, 1.461, 133, 0.093, 134, 0.399, 135, 1.44, 136, 1.174, 139, 0.766, 160, 2.976, 161, 1.87, 162, 1.621, 163, 0.693, 167, 1.331, 175, 0.607, 198, 0.006, 199, 0.006, 203, 1.421, 204, 2.234, 220, 4.211, 221, 2.434, 237, 1.949, 240, 1.822, 264, 1.488, 273, 1.223, 313, 1.174, 361, 1.129, 362, 1.949, 363, 1.331, 364, 1.331, 365, 1.331, 366, 1.331, 368, 1.223, 369, 3.685, 370, 3.629, 371, 2.036, 373, 2.036, 386, 1.949, 387, 1.543, 388, 1.331, 389, 2.098, 390, 1.331, 391, 1.331, 392, 1.129, 393, 1.331, 394, 1.47, 395, 2.036, 396, 2.259, 397, 1.331, 398, 1.087, 399, 2.18, 400, 1.331, 401, 1.087, 402, 1.331, 403, 1.129, 404, 1.331, 405, 1.129, 406, 1.009, 407, 1.129, 408, 1.331, 409, 1.129, 410, 1.331, 411, 1.129, 412, 1.331, 413, 1.129, 414, 2.036, 415, 1.331, 416, 1.331, 429, 2.349, 543, 1.621, 548, 3.269, 550, 1.536, 553, 2.627, 554, 3.617, 555, 2.234, 559, 3.269, 574, 1.621, 581, 4.647, 597, 1.934, 598, 0.907, 601, 2.366, 612, 3.617, 613, 1.726, 616, 3.617, 617, 3.572, 645, 1.393, 732, 1.488, 752, 3.269, 754, 2.768, 755, 2.471, 780, 4.09, 786, 3.809, 788, 1.718, 801, 1.461, 810, 2.366, 811, 5.638, 812, 5.034, 813, 5.034, 814, 4.147, 815, 7.188, 816, 4.391, 817, 4.391, 818, 5.034, 819, 4.918, 820, 2.138, 821, 4.854, 822, 5.814, 823, 3.807, 824, 4.918, 825, 5.638, 826, 5.638, 827, 5.638, 828, 4.09, 829, 4.147, 830, 4.147, 831, 3.617, 832, 4.147, 833, 4.147, 834, 3.189, 835, 5.588, 836, 5.418, 837, 3.617, 838, 4.918, 839, 4.147, 840, 4.147, 841, 4.147, 842, 3.008, 843, 2.234, 844, 3.008, 845, 3.269, 846, 2.8, 847, 4.147, 848, 4.147, 849, 3.269, 850, 2.712, 851, 3.617, 852, 3.269, 853, 5.299, 854, 2.739, 855, 2.18, 856, 3.617, 857, 3.269, 858, 4.147, 859, 4.147, 860, 4.918, 861, 2.712, 862, 3.45, 863, 5.588, 864, 4.147, 865, 3.194, 866, 3.617, 867, 4.147, 868, 2.712, 869, 2.627, 870, 4.918, 871, 2.65, 872, 3.617, 873, 3.807, 874, 4.918, 875, 3.617, 876, 3.008, 877, 4.147, 878, 4.147, 879, 4.147, 880, 2.712, 881, 2.712, 882, 2.712, 883, 2.712, 884, 2.712, 885, 4.147, 886, 2.366, 887, 2.586, 888, 2.366, 889, 2.138, 890, 2.138, 891, 2.712, 892, 2.712, 893, 2.712, 894, 4.147, 895, 1.87, 896, 6.665, 897, 4.147, 898, 2.712, 899, 3.269, 900, 2.712, 901, 2.366, 902, 2.712, 903, 2.712, 904, 2.712, 905, 2.712, 906, 2.712, 907, 2.366, 908, 2.712, 909, 2.712, 910, 2.712, 911, 2.712, 912, 2.712, 913, 2.712, 914, 2.712, 915, 2.138, 916, 2.712, 917, 2.366, 918, 2.366, 919, 2.712, 920, 2.366, 921, 2.366, 922, 2.712, 923, 2.712, 924, 2.366, 925, 2.712, 926, 2.712, 927, 2.712, 928, 2.712, 929, 2.712, 930, 2.366, 931, 2.712, 932, 2.138, 933, 2.138, 934, 2.366, 935, 3.617, 936, 2.366, 937, 2.712, 938, 3.617, 939, 5.299, 940, 2.366, 941, 2.366, 942, 2.712, 943, 2.712, 944, 2.712, 945, 2.366, 946, 4.147, 947, 2.138, 948, 3.703, 949, 2.479, 950, 3.848, 951, 3.194, 952, 2.712, 953, 2.712, 954, 2.366, 955, 3.617, 956, 2.8, 957, 4.147, 958, 1.967, 959, 2.366, 960, 2.712, 961, 1.393, 962, 1.718, 963, 2.138, 964, 2.366, 965, 2.366, 966, 2.366, 967, 2.366, 968, 1.967, 969, 1.718, 970, 2.366]], ["title/interfaces/Delete$Params.html", [228, 0.044, 971, 2.742]], ["body/interfaces/Delete$Params.html", [3, 0.167, 4, 0.15, 5, 0.15, 9, 0.237, 11, 0.67, 19, 0.93, 22, 0.202, 23, 0.426, 41, 1.833, 43, 0.013, 45, 0.225, 47, 1.472, 48, 1.075, 56, 0.986, 67, 0.801, 73, 2.368, 78, 1.227, 99, 2.199, 101, 2.679, 103, 1.815, 113, 1.288, 116, 0.757, 119, 1.815, 130, 1.689, 133, 0.215, 135, 1.872, 139, 1.377, 163, 1.773, 164, 3.597, 165, 2.003, 175, 1.404, 177, 1.472, 198, 0.01, 199, 0.01, 228, 0.053, 230, 0.986, 231, 2.762, 232, 2.762, 233, 3.089, 235, 1.313, 236, 1.452, 237, 3.263, 240, 2.45, 241, 1.935, 242, 0.888, 243, 2.762, 244, 1.832, 245, 2.028, 246, 3.173, 247, 1.472, 248, 2.627, 249, 1.631, 250, 2.112, 251, 2.613, 252, 2.112, 253, 2.069, 254, 1.166, 255, 1.815, 256, 1.377, 257, 2.627, 258, 3.293, 259, 2.505, 260, 3.224, 262, 2.505, 263, 2.174, 264, 1.75, 265, 1.472, 266, 2.404, 267, 2.505, 268, 2.243, 269, 2.505, 270, 2.505, 271, 2.112, 273, 2.199, 275, 2.627, 276, 2.627, 279, 2.915, 280, 2.915, 281, 2.627, 282, 2.1, 283, 2.627, 284, 2.627, 285, 1.954, 286, 1.954, 287, 2.112, 288, 2.627, 289, 3.739, 290, 1.954, 291, 2.112, 292, 1.576, 293, 2.505, 294, 1.631, 295, 2.627, 296, 2.627, 297, 2.394, 598, 1.631, 766, 4.238, 971, 4.687, 972, 3.844, 973, 6.054, 974, 2.505, 975, 4.254, 976, 4.254, 977, 6.276, 978, 3.537, 979, 4.876, 980, 4.254]], ["title/interfaces/ErrorModel.html", [228, 0.044, 981, 2.427]], ["body/interfaces/ErrorModel.html", [3, 0.213, 4, 0.192, 5, 0.192, 9, 0.395, 11, 0.665, 19, 0.724, 22, 0.257, 23, 0.495, 43, 0.013, 45, 0.224, 46, 0.708, 56, 1.26, 73, 2.013, 133, 0.213, 198, 0.011, 199, 0.011, 228, 0.068, 230, 1.26, 235, 1.303, 236, 1.44, 242, 0.998, 253, 1.758, 981, 4.361, 982, 5.433, 983, 1.88, 984, 3.355, 985, 4.206, 986, 6.96]], ["title/interfaces/Fetch$Params.html", [228, 0.044, 635, 2.427]], ["body/interfaces/Fetch$Params.html", [3, 0.169, 4, 0.152, 5, 0.152, 9, 0.24, 11, 0.675, 19, 0.811, 22, 0.204, 23, 0.429, 41, 1.843, 43, 0.013, 45, 0.195, 47, 1.49, 48, 1.079, 56, 0.998, 67, 0.811, 78, 1.439, 94, 2.535, 99, 2.225, 101, 2.694, 103, 1.836, 113, 1.303, 116, 0.772, 119, 1.836, 130, 2.191, 133, 0.217, 135, 1.881, 139, 1.393, 163, 1.783, 164, 3.614, 165, 2.01, 175, 1.415, 177, 1.49, 198, 0.01, 199, 0.01, 228, 0.054, 230, 0.998, 235, 1.323, 236, 1.463, 237, 3.281, 242, 0.892, 244, 1.846, 245, 2.044, 246, 3.187, 247, 1.49, 248, 2.658, 249, 1.651, 250, 2.137, 251, 2.633, 252, 2.137, 253, 2.078, 254, 1.512, 255, 1.836, 256, 1.785, 257, 2.658, 259, 2.535, 260, 3.249, 262, 2.535, 263, 2.191, 264, 1.771, 265, 1.49, 266, 2.418, 267, 2.535, 268, 2.256, 269, 2.535, 270, 2.535, 271, 2.137, 273, 2.225, 275, 2.658, 276, 2.658, 279, 2.95, 280, 2.95, 281, 2.658, 282, 2.116, 283, 2.658, 284, 2.658, 285, 1.977, 286, 1.977, 287, 2.137, 288, 2.658, 289, 3.76, 290, 1.977, 291, 2.137, 292, 1.595, 293, 2.535, 294, 1.651, 295, 2.658, 296, 2.658, 297, 2.423, 399, 2.642, 635, 4.172, 987, 3.89, 988, 4.4, 989, 5.34, 990, 3.583, 991, 3.78, 992, 3.332, 993, 4.305, 994, 6.324, 995, 2.95, 996, 4.305]], ["title/interfaces/FetchRequestOperatorsModel.html", [228, 0.044, 989, 2.946]], ["body/interfaces/FetchRequestOperatorsModel.html", [3, 0.179, 4, 0.161, 5, 0.161, 9, 0.254, 11, 0.699, 13, 2.9, 19, 0.873, 22, 0.216, 23, 0.445, 43, 0.013, 45, 0.231, 46, 0.719, 48, 1.12, 56, 1.325, 87, 2.835, 116, 0.639, 130, 2.27, 133, 0.179, 166, 3.531, 168, 4.255, 170, 3.531, 198, 0.01, 199, 0.01, 228, 0.057, 230, 1.055, 235, 1.371, 236, 1.515, 256, 1.473, 266, 2.27, 294, 2.513, 399, 2.352, 562, 2.603, 598, 2.642, 602, 4.255, 983, 1.575, 984, 3.529, 988, 3.916, 989, 4.752, 991, 4.281, 997, 2.81, 998, 2.529, 999, 5.073, 1000, 5.073, 1001, 5.449, 1002, 5.449, 1003, 4.424, 1004, 4.255, 1005, 3.711, 1006, 4.752, 1007, 4.474, 1008, 4.474, 1009, 3.711, 1010, 3.711, 1011, 4.752, 1012, 3.784, 1013, 3.784, 1014, 3.784, 1015, 3.784]], ["title/interfaces/FetchRequestQualityattributeModel.html", [228, 0.044, 1016, 2.946]], ["body/interfaces/FetchRequestQualityattributeModel.html", [3, 0.179, 4, 0.161, 5, 0.161, 9, 0.254, 11, 0.699, 13, 2.9, 14, 3.387, 19, 0.918, 22, 0.216, 23, 0.445, 43, 0.013, 45, 0.231, 46, 0.719, 48, 1.12, 56, 1.325, 87, 2.835, 116, 0.639, 130, 2.27, 133, 0.179, 166, 3.531, 168, 4.255, 170, 3.531, 198, 0.01, 199, 0.01, 228, 0.057, 230, 1.055, 235, 1.371, 236, 1.515, 241, 1.73, 256, 1.473, 266, 2.27, 294, 2.513, 562, 2.603, 598, 2.642, 602, 4.255, 983, 1.575, 984, 3.529, 997, 2.81, 998, 2.529, 1000, 5.073, 1001, 5.449, 1002, 5.449, 1003, 4.424, 1004, 4.255, 1005, 3.711, 1006, 4.752, 1007, 4.474, 1008, 4.474, 1009, 3.711, 1010, 3.711, 1011, 4.752, 1013, 3.784, 1015, 3.784, 1016, 4.752, 1017, 4.281, 1018, 3.784, 1019, 3.784]], ["title/interfaces/FetchRequestQualityphaseModel.html", [228, 0.044, 1020, 2.946]], ["body/interfaces/FetchRequestQualityphaseModel.html", [3, 0.179, 4, 0.161, 5, 0.161, 9, 0.254, 11, 0.699, 19, 0.918, 22, 0.216, 23, 0.445, 43, 0.013, 45, 0.231, 46, 0.719, 48, 1.12, 52, 2.268, 56, 1.325, 87, 2.835, 116, 0.639, 130, 2.27, 133, 0.179, 166, 3.531, 168, 4.255, 170, 3.531, 198, 0.01, 199, 0.01, 228, 0.057, 230, 1.055, 235, 1.371, 236, 1.515, 241, 1.73, 256, 1.473, 266, 2.27, 294, 2.513, 562, 2.603, 598, 2.642, 602, 4.255, 871, 3.531, 983, 1.575, 984, 3.529, 997, 2.81, 998, 2.529, 1000, 5.073, 1001, 5.449, 1002, 5.449, 1003, 4.424, 1004, 4.255, 1005, 3.711, 1006, 4.752, 1007, 4.474, 1008, 4.474, 1009, 3.711, 1010, 3.711, 1011, 4.752, 1013, 3.784, 1015, 3.784, 1020, 4.752, 1021, 4.281, 1022, 3.784, 1023, 3.784]], ["title/interfaces/FetchRequestQualitysavelogModel.html", [228, 0.044, 1024, 2.946]], ["body/interfaces/FetchRequestQualitysavelogModel.html", [3, 0.179, 4, 0.161, 5, 0.161, 9, 0.254, 11, 0.699, 19, 0.942, 22, 0.216, 23, 0.445, 43, 0.013, 45, 0.231, 46, 0.719, 48, 1.12, 56, 1.325, 87, 2.835, 116, 0.639, 130, 2.27, 133, 0.179, 166, 3.531, 168, 4.255, 170, 3.531, 198, 0.01, 199, 0.01, 228, 0.057, 230, 1.055, 235, 1.371, 236, 1.515, 240, 2.428, 241, 1.984, 256, 1.473, 266, 2.27, 294, 2.513, 562, 2.603, 598, 2.642, 602, 4.255, 983, 1.575, 984, 3.529, 997, 2.81, 998, 2.529, 1000, 5.073, 1001, 5.449, 1002, 5.449, 1003, 4.424, 1004, 4.255, 1005, 3.711, 1006, 4.752, 1007, 4.474, 1008, 4.474, 1009, 3.711, 1010, 3.711, 1011, 4.752, 1013, 3.784, 1015, 3.784, 1024, 4.752, 1025, 4.281, 1026, 3.784, 1027, 3.784]], ["title/interfaces/FetchResponseOperatorsModel.html", [228, 0.044, 992, 2.742]], ["body/interfaces/FetchResponseOperatorsModel.html", [3, 0.182, 4, 0.163, 5, 0.163, 9, 0.258, 11, 0.707, 19, 0.946, 22, 0.22, 23, 0.45, 43, 0.013, 45, 0.233, 46, 0.722, 48, 0.939, 56, 1.34, 87, 2.793, 116, 0.518, 130, 1.84, 133, 0.182, 166, 3.554, 170, 3.554, 198, 0.01, 199, 0.01, 221, 3.029, 228, 0.058, 230, 1.074, 235, 1.386, 236, 1.532, 254, 1.27, 266, 2.295, 271, 3.274, 294, 2.529, 394, 2.207, 562, 2.619, 598, 2.745, 755, 3.252, 983, 1.603, 984, 3.569, 991, 3.175, 992, 4.474, 997, 2.861, 998, 2.918, 999, 5.105, 1004, 4.283, 1005, 3.753, 1007, 4.283, 1008, 4.283, 1010, 3.753, 1028, 5.484, 1029, 5.484, 1030, 4.474, 1031, 4.806, 1032, 4.806, 1033, 4.806, 1034, 3.853, 1035, 5.311]], ["title/interfaces/FetchResponseQualityattributeModel.html", [228, 0.044, 1036, 2.742]], ["body/interfaces/FetchResponseQualityattributeModel.html", [3, 0.18, 4, 0.162, 5, 0.162, 9, 0.256, 11, 0.703, 14, 3.396, 19, 0.969, 22, 0.217, 23, 0.447, 43, 0.013, 45, 0.232, 46, 0.72, 48, 0.933, 56, 1.332, 70, 2.978, 87, 2.784, 116, 0.513, 130, 1.821, 133, 0.18, 166, 3.541, 170, 3.541, 198, 0.01, 199, 0.01, 221, 3.018, 228, 0.057, 230, 1.063, 235, 1.377, 236, 1.523, 241, 1.989, 254, 1.257, 266, 2.281, 271, 3.262, 294, 2.52, 394, 2.199, 562, 2.61, 598, 2.74, 755, 3.232, 983, 1.587, 984, 3.546, 997, 2.832, 998, 2.908, 1004, 4.267, 1005, 3.729, 1007, 4.267, 1008, 4.267, 1010, 3.729, 1017, 3.142, 1028, 5.464, 1029, 5.464, 1030, 4.445, 1031, 4.775, 1032, 4.775, 1033, 4.775, 1036, 4.445, 1037, 5.257]], ["title/interfaces/FetchResponseQualityphaseModel.html", [228, 0.044, 1038, 2.742]], ["body/interfaces/FetchResponseQualityphaseModel.html", [3, 0.18, 4, 0.162, 5, 0.162, 9, 0.256, 11, 0.703, 19, 0.969, 22, 0.217, 23, 0.447, 43, 0.013, 45, 0.232, 46, 0.72, 48, 0.933, 56, 1.332, 59, 3.142, 87, 2.784, 116, 0.513, 130, 1.821, 133, 0.18, 166, 3.541, 170, 3.541, 198, 0.01, 199, 0.01, 221, 3.018, 228, 0.057, 230, 1.063, 235, 1.377, 236, 1.523, 241, 1.989, 254, 1.257, 266, 2.281, 271, 3.262, 294, 2.52, 394, 2.199, 562, 2.61, 598, 2.74, 755, 3.232, 871, 3.541, 983, 1.587, 984, 3.546, 997, 2.832, 998, 2.908, 1004, 4.267, 1005, 3.729, 1007, 4.267, 1008, 4.267, 1010, 3.729, 1021, 3.142, 1028, 5.464, 1029, 5.464, 1030, 4.445, 1031, 4.775, 1032, 4.775, 1033, 4.775, 1038, 4.445, 1039, 5.257]], ["title/interfaces/FetchResponseQualitysavelogModel.html", [228, 0.044, 1040, 2.742]], ["body/interfaces/FetchResponseQualitysavelogModel.html", [3, 0.18, 4, 0.162, 5, 0.162, 9, 0.256, 11, 0.703, 19, 0.969, 22, 0.217, 23, 0.447, 43, 0.013, 45, 0.232, 46, 0.72, 48, 0.933, 56, 1.332, 87, 2.784, 116, 0.513, 130, 1.821, 133, 0.18, 166, 3.541, 170, 3.541, 198, 0.01, 199, 0.01, 221, 3.018, 228, 0.057, 230, 1.063, 235, 1.377, 236, 1.523, 240, 2.434, 241, 1.989, 243, 2.978, 254, 1.257, 258, 3.55, 266, 2.281, 271, 3.262, 294, 2.52, 394, 2.199, 562, 2.61, 598, 2.74, 755, 3.232, 983, 1.587, 984, 3.546, 997, 2.832, 998, 2.908, 1004, 4.267, 1005, 3.729, 1007, 4.267, 1008, 4.267, 1010, 3.729, 1025, 3.142, 1028, 5.464, 1029, 5.464, 1030, 4.445, 1031, 4.775, 1032, 4.775, 1033, 4.775, 1040, 4.445]], ["title/interfaces/Fetch_1$Params.html", [228, 0.044, 1041, 2.742]], ["body/interfaces/Fetch_1$Params.html", [3, 0.167, 4, 0.15, 5, 0.15, 9, 0.237, 11, 0.669, 19, 0.929, 22, 0.201, 23, 0.425, 41, 1.831, 43, 0.013, 45, 0.193, 47, 1.469, 48, 1.074, 56, 0.984, 62, 2.778, 67, 0.799, 73, 1.572, 78, 0.951, 99, 2.193, 101, 2.676, 103, 1.81, 113, 1.285, 116, 0.77, 119, 1.81, 130, 2.171, 133, 0.215, 135, 1.871, 139, 1.373, 163, 1.771, 164, 3.594, 165, 2.001, 175, 1.402, 177, 1.469, 198, 0.01, 199, 0.01, 228, 0.053, 230, 0.984, 231, 2.756, 232, 2.756, 235, 1.311, 236, 1.449, 237, 3.259, 240, 2.449, 241, 2.001, 242, 0.887, 244, 1.829, 245, 2.025, 246, 3.17, 247, 1.469, 248, 2.621, 249, 1.628, 250, 2.107, 251, 2.609, 252, 2.107, 253, 2.067, 254, 1.498, 255, 1.81, 256, 1.769, 257, 2.621, 259, 2.499, 260, 3.219, 262, 2.499, 263, 2.171, 264, 1.746, 265, 1.469, 266, 2.402, 267, 2.499, 268, 2.241, 269, 2.499, 270, 2.499, 271, 2.107, 273, 2.193, 275, 2.621, 276, 2.621, 279, 2.908, 280, 2.908, 281, 2.621, 282, 2.097, 283, 2.621, 284, 2.621, 285, 1.949, 286, 1.949, 287, 2.107, 288, 2.621, 289, 3.734, 290, 1.949, 291, 2.107, 292, 1.572, 293, 2.499, 294, 1.628, 295, 2.621, 296, 2.621, 297, 2.388, 754, 2.388, 990, 3.55, 995, 2.908, 1024, 5.311, 1025, 3.746, 1040, 3.285, 1041, 4.681, 1042, 3.529, 1043, 3.835, 1044, 4.244, 1045, 6.267, 1046, 3.835, 1047, 4.244]], ["title/interfaces/Fetch_2$Params.html", [228, 0.044, 1048, 2.742]], ["body/interfaces/Fetch_2$Params.html", [3, 0.166, 4, 0.149, 5, 0.149, 9, 0.236, 11, 0.668, 19, 0.929, 20, 2.282, 22, 0.201, 23, 0.425, 41, 1.829, 43, 0.013, 45, 0.193, 47, 1.465, 48, 1.073, 52, 2.091, 56, 0.982, 62, 2.775, 67, 0.797, 78, 0.949, 99, 2.188, 101, 2.673, 103, 1.806, 113, 1.282, 116, 0.769, 119, 1.806, 130, 2.168, 133, 0.214, 135, 1.869, 139, 1.37, 163, 1.769, 164, 3.591, 165, 2, 175, 1.4, 177, 1.465, 198, 0.01, 199, 0.01, 228, 0.053, 230, 0.982, 231, 2.749, 235, 1.309, 236, 1.447, 237, 3.255, 242, 0.886, 244, 1.827, 245, 2.022, 246, 3.167, 247, 1.465, 248, 2.614, 249, 1.624, 250, 2.102, 251, 2.605, 252, 2.102, 253, 2.065, 254, 1.496, 255, 1.806, 256, 1.766, 257, 2.614, 259, 2.493, 260, 3.214, 262, 2.493, 263, 2.168, 264, 1.742, 265, 1.465, 266, 2.399, 267, 2.493, 268, 2.238, 269, 2.493, 270, 2.493, 271, 2.102, 273, 2.188, 275, 2.614, 276, 2.614, 279, 2.901, 280, 2.901, 281, 2.614, 282, 2.093, 283, 2.614, 284, 2.614, 285, 1.945, 286, 1.945, 287, 2.102, 288, 2.614, 289, 3.73, 290, 1.945, 291, 2.102, 292, 1.569, 293, 2.493, 294, 1.624, 295, 2.614, 296, 2.614, 297, 2.383, 597, 1.465, 871, 3.439, 990, 3.544, 995, 2.901, 998, 1.873, 1020, 5.306, 1021, 3.74, 1038, 3.277, 1046, 3.826, 1048, 4.676, 1049, 3.521, 1050, 3.826, 1051, 6.604, 1052, 4.234, 1053, 6.257, 1054, 4.234]], ["title/interfaces/Fetch_3$Params.html", [228, 0.044, 1055, 2.742]], ["body/interfaces/Fetch_3$Params.html", [3, 0.163, 4, 0.147, 5, 0.147, 9, 0.232, 11, 0.66, 13, 2.805, 14, 3.395, 19, 0.961, 20, 3.539, 22, 0.197, 23, 0.42, 41, 1.814, 43, 0.013, 45, 0.19, 47, 1.44, 48, 1.067, 50, 2.702, 56, 0.965, 62, 2.752, 67, 0.783, 78, 0.932, 99, 2.15, 101, 2.651, 103, 1.775, 113, 1.26, 116, 0.766, 119, 1.775, 130, 2.143, 133, 0.212, 135, 1.857, 139, 1.346, 163, 1.754, 164, 3.567, 165, 1.989, 175, 1.384, 177, 1.44, 198, 0.009, 199, 0.009, 228, 0.052, 230, 0.965, 231, 2.702, 235, 1.294, 236, 1.431, 237, 3.228, 241, 1.989, 242, 0.88, 244, 1.806, 245, 1.999, 246, 3.146, 247, 1.44, 248, 2.569, 249, 1.596, 250, 2.065, 251, 2.576, 252, 2.065, 253, 2.051, 254, 1.479, 255, 1.775, 256, 1.746, 257, 2.569, 259, 2.45, 260, 3.178, 262, 2.45, 263, 2.143, 264, 1.712, 265, 1.44, 266, 2.379, 267, 2.45, 268, 2.219, 269, 2.45, 270, 2.45, 271, 2.065, 273, 2.15, 275, 2.569, 276, 2.569, 279, 2.851, 280, 2.851, 281, 2.569, 282, 2.07, 283, 2.569, 284, 2.569, 285, 1.911, 286, 1.911, 287, 2.065, 288, 2.569, 289, 3.699, 290, 1.911, 291, 2.065, 292, 1.541, 293, 2.45, 294, 1.596, 295, 2.569, 296, 2.569, 297, 2.341, 990, 3.504, 995, 2.851, 998, 2.906, 1016, 5.271, 1017, 3.698, 1036, 3.22, 1046, 3.759, 1055, 4.637, 1056, 3.46, 1057, 3.759, 1058, 4.16, 1059, 6.186, 1060, 4.16]], ["title/interfaces/FilterOperatorsModel.html", [228, 0.044, 1012, 2.946]], ["body/interfaces/FilterOperatorsModel.html", [3, 0.187, 4, 0.168, 5, 0.168, 9, 0.265, 11, 0.583, 13, 2.107, 22, 0.226, 23, 0.457, 43, 0.013, 44, 1.334, 45, 0.225, 46, 0.709, 48, 0.774, 62, 2.187, 78, 1.067, 90, 1.708, 133, 0.187, 140, 4.324, 154, 4.324, 155, 4.141, 156, 4.141, 157, 4.141, 158, 4.141, 159, 4.141, 198, 0.01, 199, 0.01, 228, 0.06, 230, 1.104, 235, 1.142, 236, 1.263, 242, 0.886, 597, 1.648, 983, 1.648, 991, 3.263, 999, 3.686, 1012, 4.889, 1061, 3.686, 1062, 3.092, 1063, 2.941, 1064, 3.96, 1065, 5.762, 1066, 5.303, 1067, 5.303, 1068, 5.303, 1069, 5.303, 1070, 4.37, 1071, 5.303, 1072, 5.303, 1073, 5.303]], ["title/interfaces/FilterQualityattributeModel.html", [228, 0.044, 1018, 2.946]], ["body/interfaces/FilterQualityattributeModel.html", [3, 0.183, 4, 0.164, 5, 0.164, 9, 0.259, 11, 0.569, 13, 2.058, 14, 2.404, 19, 0.62, 20, 2.506, 22, 0.22, 23, 0.451, 43, 0.013, 45, 0.223, 46, 0.704, 48, 0.942, 56, 1.079, 57, 2.872, 62, 2.136, 78, 1.043, 90, 1.694, 133, 0.183, 140, 4.289, 141, 3.551, 142, 4.582, 143, 4.582, 144, 4.582, 145, 4.582, 146, 4.582, 147, 4.582, 148, 4.582, 149, 3.4, 150, 4.582, 151, 4.582, 152, 4.582, 154, 4.289, 155, 4.097, 156, 4.097, 157, 4.097, 158, 4.097, 159, 4.097, 198, 0.01, 199, 0.01, 228, 0.058, 230, 1.079, 235, 1.116, 236, 1.233, 241, 1.408, 242, 0.876, 597, 1.61, 983, 1.61, 1017, 3.187, 1018, 4.818, 1061, 3.6, 1062, 3.02, 1063, 2.872, 1064, 3.868]], ["title/interfaces/FilterQualityphaseModel.html", [228, 0.044, 1022, 2.946]], ["body/interfaces/FilterQualityphaseModel.html", [3, 0.177, 4, 0.159, 5, 0.159, 9, 0.251, 11, 0.55, 19, 0.6, 22, 0.213, 23, 0.441, 43, 0.013, 45, 0.219, 46, 0.699, 48, 0.731, 52, 1.557, 62, 2.067, 78, 1.009, 90, 1.674, 133, 0.177, 140, 4.238, 141, 3.498, 149, 3.349, 154, 4.238, 155, 4.036, 156, 4.036, 157, 4.036, 158, 4.036, 159, 4.036, 198, 0.01, 199, 0.01, 228, 0.056, 230, 1.043, 235, 1.079, 236, 1.193, 241, 1.362, 242, 0.863, 597, 1.557, 709, 4.514, 790, 3.66, 871, 2.425, 974, 3.66, 983, 1.557, 1021, 3.083, 1022, 4.719, 1061, 3.483, 1062, 2.922, 1063, 2.778, 1064, 3.742, 1074, 4.811, 1075, 4.811, 1076, 4.811, 1077, 4.811, 1078, 4.811, 1079, 4.811, 1080, 4.811, 1081, 4.811, 1082, 4.811, 1083, 4.811, 1084, 4.811, 1085, 4.811]], ["title/interfaces/FilterQualitysavelogModel.html", [228, 0.044, 1026, 2.946]], ["body/interfaces/FilterQualitysavelogModel.html", [3, 0.194, 4, 0.175, 5, 0.175, 9, 0.276, 11, 0.606, 19, 0.66, 22, 0.235, 23, 0.468, 43, 0.013, 45, 0.229, 46, 0.715, 48, 0.805, 62, 2.275, 78, 1.11, 90, 1.731, 133, 0.194, 140, 4.383, 154, 4.383, 155, 4.214, 156, 4.214, 157, 4.214, 158, 4.214, 159, 4.214, 198, 0.011, 199, 0.011, 228, 0.062, 230, 1.149, 235, 1.188, 236, 1.313, 240, 1.835, 241, 1.5, 242, 0.901, 597, 1.714, 974, 3.821, 983, 1.714, 1025, 3.394, 1026, 5.008, 1061, 3.834, 1062, 3.216, 1063, 3.058, 1064, 4.119, 1070, 4.446, 1086, 5.863, 1087, 5.396, 1088, 5.863]], ["title/classes/HeaderParameter.html", [134, 0.598, 1089, 2.187]], ["body/classes/HeaderParameter.html", [3, 0.075, 4, 0.068, 5, 0.068, 9, 0.107, 22, 0.091, 23, 0.239, 24, 1.419, 26, 0.841, 29, 1.952, 32, 0.787, 38, 1.227, 42, 1.251, 43, 0.013, 44, 1.236, 45, 0.203, 46, 0.39, 67, 0.578, 68, 1.468, 87, 2.43, 88, 3.103, 90, 1.858, 112, 0.642, 113, 1.826, 116, 0.214, 133, 0.075, 134, 0.907, 139, 2.236, 160, 3.049, 163, 1.574, 165, 0.929, 175, 1.688, 177, 0.664, 198, 0.005, 199, 0.005, 215, 3.323, 228, 0.024, 242, 0.98, 244, 0.642, 245, 1.422, 247, 0.664, 249, 1.472, 253, 1.242, 254, 0.526, 255, 0.818, 256, 1.552, 263, 0.762, 264, 1.579, 265, 0.664, 268, 1.137, 278, 1.246, 282, 0.736, 285, 1.41, 286, 1.41, 290, 2.645, 292, 2.133, 359, 1.246, 387, 0.818, 389, 0.818, 394, 1.284, 590, 2.468, 645, 1.129, 661, 2.363, 675, 1.034, 677, 2.758, 694, 1.034, 696, 2.848, 703, 1.034, 722, 2.848, 732, 0.789, 775, 1.184, 796, 0.991, 854, 1.983, 855, 1.905, 862, 2.37, 895, 1.983, 1089, 1.895, 1090, 1.314, 1091, 2.37, 1092, 1.184, 1093, 4.233, 1094, 2.708, 1095, 4.604, 1096, 3.115, 1097, 2.553, 1098, 3.005, 1099, 3.725, 1100, 2.199, 1101, 3.467, 1102, 2.103, 1103, 4.209, 1104, 2.199, 1105, 2.629, 1106, 3.945, 1107, 1.918, 1108, 2.103, 1109, 2.103, 1110, 3.682, 1111, 1.314, 1112, 1.314, 1113, 1.314, 1114, 2.629, 1115, 1.314, 1116, 1.314, 1117, 2.103, 1118, 1.314, 1119, 1.807, 1120, 1.314, 1121, 1.314, 1122, 1.314, 1123, 2.103, 1124, 1.314, 1125, 1.314, 1126, 1.314, 1127, 1.314, 1128, 1.895, 1129, 1.314, 1130, 1.314, 1131, 1.184, 1132, 2.103, 1133, 1.314, 1134, 2.103, 1135, 2.103, 1136, 1.314, 1137, 3.826, 1138, 3.573, 1139, 3.826, 1140, 2.103, 1141, 1.314, 1142, 3.507, 1143, 2.629, 1144, 4.274, 1145, 2.629, 1146, 1.314, 1147, 1.314, 1148, 2.103, 1149, 2.103, 1150, 1.314, 1151, 2.103, 1152, 1.184, 1153, 2.629, 1154, 2.103, 1155, 1.314, 1156, 4.133, 1157, 3.826, 1158, 1.314, 1159, 3.005, 1160, 1.314, 1161, 1.314, 1162, 1.314, 1163, 1.314, 1164, 1.314, 1165, 1.314, 1166, 1.184, 1167, 3.005, 1168, 1.314, 1169, 1.314, 1170, 1.314, 1171, 2.103, 1172, 2.103, 1173, 1.314, 1174, 1.314, 1175, 2.629, 1176, 1.246, 1177, 1.314, 1178, 1.314, 1179, 1.314, 1180, 1.314, 1181, 1.314, 1182, 1.314, 1183, 1.314, 1184, 1.314, 1185, 3.287, 1186, 1.314, 1187, 1.314, 1188, 1.314, 1189, 1.314, 1190, 1.184, 1191, 1.314, 1192, 2.103, 1193, 3.005, 1194, 3.005, 1195, 2.103, 1196, 1.314, 1197, 1.314, 1198, 2.629, 1199, 1.314, 1200, 1.314, 1201, 2.629, 1202, 2.629, 1203, 1.314, 1204, 2.103, 1205, 1.314, 1206, 1.314, 1207, 1.314, 1208, 1.314, 1209, 1.314, 1210, 1.314, 1211, 1.314, 1212, 1.314, 1213, 1.314, 1214, 1.314, 1215, 2.103, 1216, 1.314, 1217, 1.246, 1218, 1.314, 1219, 1.314, 1220, 1.314, 1221, 1.314, 1222, 1.314, 1223, 1.314, 1224, 1.314, 1225, 1.314, 1226, 1.314, 1227, 1.314, 1228, 1.314, 1229, 1.314, 1230, 1.314, 1231, 1.314, 1232, 1.314, 1233, 1.314, 1234, 2.7, 1235, 1.314, 1236, 1.314, 1237, 2.103, 1238, 2.629, 1239, 3.507, 1240, 1.314, 1241, 1.314, 1242, 1.314, 1243, 1.314, 1244, 1.314, 1245, 3.826, 1246, 2.629, 1247, 2.103, 1248, 1.314, 1249, 3.287, 1250, 1.314, 1251, 1.314, 1252, 1.314, 1253, 1.314, 1254, 2.848, 1255, 3.507, 1256, 1.314, 1257, 1.314, 1258, 1.314, 1259, 1.314, 1260, 1.314, 1261, 1.314, 1262, 1.314, 1263, 1.314, 1264, 1.314, 1265, 1.314, 1266, 1.314, 1267, 1.314, 1268, 1.314, 1269, 1.314, 1270, 1.314, 1271, 1.314, 1272, 2.103, 1273, 1.314, 1274, 1.314, 1275, 1.314, 1276, 1.314, 1277, 1.314, 1278, 1.314, 1279, 1.314, 1280, 1.314, 1281, 1.314, 1282, 1.314, 1283, 2.103, 1284, 1.314, 1285, 1.314, 1286, 1.314, 1287, 1.314, 1288, 1.314, 1289, 1.314, 1290, 1.314, 1291, 1.314, 1292, 1.314, 1293, 1.314]], ["title/injectables/IframeInitializerService.html", [0, 1.004, 828, 2.946]], ["body/injectables/IframeInitializerService.html", [0, 1.141, 2, 1.303, 3, 0.107, 4, 0.096, 5, 0.169, 9, 0.295, 10, 2.174, 11, 0.493, 19, 0.967, 20, 2.17, 22, 0.129, 24, 2.104, 26, 1.104, 29, 1.549, 32, 0.7, 35, 3.48, 36, 2.847, 37, 4.642, 38, 1.148, 40, 1.6, 41, 1.6, 42, 1.073, 43, 0.013, 44, 1.002, 45, 0.221, 46, 0.487, 47, 2.353, 48, 1.056, 49, 3.639, 51, 3.111, 52, 1.394, 53, 2.372, 54, 2.372, 55, 2.487, 56, 0.934, 57, 2.487, 61, 2.254, 67, 0.758, 68, 1.768, 73, 2.319, 78, 1.367, 90, 0.7, 95, 1.87, 108, 3.837, 116, 0.737, 118, 0.724, 120, 1.87, 121, 2.729, 122, 2.113, 123, 2.27, 124, 2.466, 125, 1.536, 126, 1.685, 127, 1.982, 131, 1.355, 132, 1.254, 133, 0.107, 134, 0.461, 135, 1.931, 136, 1.355, 139, 1.303, 140, 1.772, 141, 1.536, 149, 1.471, 154, 1.772, 155, 2.615, 156, 1.772, 157, 1.772, 158, 1.772, 159, 1.772, 160, 2.376, 161, 1.411, 162, 1.87, 163, 0.799, 164, 1.536, 165, 0.826, 166, 1.471, 167, 1.536, 168, 1.772, 170, 1.471, 177, 1.394, 198, 0.007, 199, 0.007, 204, 2.487, 214, 3.349, 220, 3.621, 221, 1.85, 235, 0.966, 242, 0.819, 254, 0.748, 297, 2.267, 322, 4.29, 376, 4.065, 380, 1.607, 381, 1.607, 394, 1.348, 399, 1.123, 406, 1.718, 448, 3.621, 449, 1.87, 450, 1.87, 562, 1.901, 572, 2.76, 585, 3.349, 597, 1.829, 602, 1.772, 607, 2.113, 613, 3.102, 709, 1.982, 744, 3.36, 745, 3.118, 748, 3.118, 750, 2.615, 754, 2.974, 755, 2.267, 790, 1.607, 828, 3.349, 834, 3.476, 835, 5.897, 836, 5.657, 837, 6.26, 843, 2.487, 844, 3.349, 846, 4.565, 865, 3.431, 871, 2.579, 887, 3.472, 888, 2.729, 889, 4.774, 890, 4.774, 915, 2.466, 918, 4.027, 920, 2.729, 921, 2.729, 924, 2.729, 932, 2.466, 974, 2.372, 981, 2.76, 985, 2.113, 1074, 2.113, 1075, 2.113, 1076, 2.113, 1077, 2.113, 1078, 2.113, 1079, 2.113, 1080, 2.113, 1081, 2.113, 1082, 2.113, 1083, 2.113, 1084, 2.113, 1085, 2.113, 1138, 2.17, 1294, 2.729, 1295, 4.617, 1296, 5.284, 1297, 4.617, 1298, 2.925, 1299, 2.729, 1300, 4.947, 1301, 4.947, 1302, 4.29, 1303, 3.129, 1304, 4.617, 1305, 4.093, 1306, 3.639, 1307, 3.639, 1308, 4.027, 1309, 2.76, 1310, 2.76, 1311, 2.76, 1312, 2.76, 1313, 4.617, 1314, 3.129, 1315, 4.027, 1316, 4.617, 1317, 3.349, 1318, 4.617, 1319, 4.617, 1320, 4.027, 1321, 4.027, 1322, 2.925, 1323, 3.129, 1324, 2.925, 1325, 2.925, 1326, 2.76, 1327, 2.76, 1328, 2.925, 1329, 2.925, 1330, 3.129, 1331, 3.129, 1332, 3.129, 1333, 1.982, 1334, 1.982, 1335, 1.982, 1336, 3.705, 1337, 2.466, 1338, 2.466, 1339, 2.27, 1340, 3.129, 1341, 2.113, 1342, 3.129, 1343, 2.729, 1344, 2.27, 1345, 2.27, 1346, 3.639, 1347, 2.729, 1348, 3.129, 1349, 3.129, 1350, 3.476, 1351, 3.476, 1352, 3.349, 1353, 3.349, 1354, 3.639, 1355, 2.27, 1356, 4.325, 1357, 4.325, 1358, 2.466, 1359, 2.466, 1360, 2.27, 1361, 2.27, 1362, 3.129, 1363, 2.466, 1364, 2.729, 1365, 2.466, 1366, 3.129]], ["title/interfaces/JsonList.html", [128, 2.573, 228, 0.044]], ["body/interfaces/JsonList.html", [3, 0.192, 4, 0.173, 5, 0.173, 9, 0.273, 11, 0.79, 19, 0.935, 22, 0.232, 23, 0.465, 43, 0.013, 45, 0.228, 52, 2.234, 70, 3.177, 72, 4.626, 73, 2.391, 74, 3.8, 88, 3.622, 90, 1.768, 128, 4.687, 129, 3.787, 133, 0.253, 141, 2.753, 142, 3.553, 143, 3.553, 144, 3.553, 145, 3.553, 146, 3.553, 147, 3.553, 148, 3.553, 149, 2.636, 150, 3.553, 151, 3.553, 152, 3.553, 198, 0.01, 199, 0.01, 228, 0.081, 230, 1.134, 235, 1.548, 236, 1.711, 241, 1.954, 242, 1.018, 358, 3.352, 597, 2.068, 598, 2.644, 754, 2.753, 876, 4.068, 983, 1.693, 1367, 4.687, 1368, 4.626, 1369, 3.352, 1370, 4.42, 1371, 3.553]], ["title/injectables/LanguageService.html", [0, 1.004, 1300, 2.742]], ["body/injectables/LanguageService.html", [0, 1.555, 2, 2.037, 3, 0.168, 4, 0.151, 5, 0.214, 9, 0.338, 10, 2.634, 11, 0.671, 19, 0.903, 22, 0.202, 23, 0.427, 26, 1.504, 29, 2.193, 32, 1.095, 38, 1.455, 40, 2.179, 41, 1.661, 42, 1.23, 43, 0.013, 44, 1.148, 45, 0.214, 46, 0.558, 47, 1.899, 48, 0.892, 61, 2.341, 67, 0.804, 68, 1.836, 78, 1.435, 84, 4.958, 90, 1.095, 111, 5.983, 112, 1.429, 113, 1.661, 114, 5.487, 116, 0.678, 118, 1.132, 119, 1.821, 131, 2.119, 132, 1.961, 133, 0.168, 134, 0.72, 135, 1.607, 136, 2.119, 177, 1.899, 198, 0.01, 199, 0.01, 221, 2.521, 242, 0.842, 375, 4.269, 376, 4.476, 380, 2.514, 381, 2.514, 385, 4.269, 562, 2.179, 595, 5.487, 597, 1.899, 613, 3.055, 744, 3.503, 843, 3.389, 844, 5.913, 873, 4.248, 1300, 4.248, 1307, 6.425, 1309, 3.76, 1310, 3.76, 1311, 3.76, 1312, 3.76, 1372, 4.269, 1373, 6.064, 1374, 6.29, 1375, 6.29, 1376, 6.29, 1377, 4.894, 1378, 6.892, 1379, 4.958, 1380, 6.29, 1381, 6.29, 1382, 4.269, 1383, 4.269, 1384, 4.894, 1385, 4.894]], ["title/components/LogModifierComponent.html", [203, 1.146, 403, 1.691]], ["body/components/LogModifierComponent.html", [1, 4.081, 3, 0.072, 4, 0.065, 5, 0.131, 6, 1.329, 7, 1.522, 9, 0.261, 10, 1.756, 11, 0.742, 12, 2.487, 13, 2.428, 14, 3.272, 15, 3.55, 16, 2.671, 17, 2.956, 18, 2.956, 19, 0.946, 20, 3.449, 21, 4.268, 22, 0.176, 23, 0.23, 24, 1.883, 25, 3.718, 26, 0.81, 29, 2.203, 31, 2.7, 32, 0.469, 35, 2.636, 36, 2.3, 38, 1.478, 40, 1.174, 41, 1.292, 42, 0.662, 43, 0.013, 44, 0.893, 45, 0.21, 46, 0.301, 47, 1.734, 48, 1.116, 50, 2.772, 51, 2.513, 52, 1.477, 53, 1.74, 54, 2.189, 55, 1.825, 56, 1.468, 57, 2.893, 61, 2.667, 63, 3.304, 64, 2.878, 65, 2.288, 67, 1.033, 68, 2.063, 70, 1.188, 73, 2.316, 74, 1.74, 78, 1.334, 87, 2.258, 90, 1.201, 95, 1.254, 108, 2.7, 109, 1.654, 110, 2.956, 112, 1.836, 113, 1.762, 115, 1.654, 116, 0.651, 117, 2.296, 118, 0.485, 120, 1.254, 125, 1.03, 126, 1.13, 133, 0.072, 134, 0.309, 135, 1.544, 136, 0.908, 139, 1.203, 161, 0.946, 162, 1.254, 167, 2.092, 175, 0.469, 177, 1.023, 186, 4.233, 197, 1.83, 198, 0.005, 199, 0.005, 201, 4.948, 203, 1.203, 204, 1.825, 221, 2.673, 239, 3.55, 240, 2.511, 241, 1.716, 242, 0.808, 261, 2.458, 293, 2.189, 313, 0.908, 361, 0.873, 362, 1.593, 363, 1.03, 364, 1.03, 365, 1.03, 366, 1.03, 368, 0.946, 369, 3.469, 370, 3.322, 371, 1.663, 373, 1.663, 376, 3.563, 378, 3.092, 380, 1.078, 381, 1.078, 382, 3.094, 386, 1.593, 387, 1.261, 388, 1.03, 389, 1.821, 390, 1.03, 391, 1.03, 392, 1.411, 393, 2.402, 394, 1.568, 395, 1.663, 396, 0.841, 397, 1.03, 398, 0.841, 399, 1.53, 400, 1.03, 401, 0.841, 402, 1.03, 403, 2.037, 404, 1.03, 405, 0.873, 406, 0.781, 407, 0.873, 408, 1.03, 409, 0.873, 410, 1.03, 411, 0.873, 412, 1.03, 413, 0.873, 414, 1.03, 415, 1.03, 416, 1.03, 421, 1.329, 448, 2.925, 449, 1.254, 450, 1.254, 454, 1.329, 468, 1.417, 473, 5.649, 486, 1.522, 496, 1.522, 534, 2.288, 536, 2.296, 550, 1.188, 562, 1.99, 572, 2.025, 581, 2.458, 584, 3.857, 590, 3.602, 597, 1.023, 598, 0.702, 602, 1.919, 603, 3.857, 613, 1.411, 729, 4.505, 730, 5.01, 732, 1.216, 738, 2.956, 739, 2.772, 744, 2.206, 745, 2.288, 750, 1.919, 751, 2.458, 754, 3.189, 755, 3.189, 773, 2.288, 774, 1.83, 781, 3.985, 784, 2.7, 785, 2.296, 786, 2.189, 790, 1.078, 792, 1.417, 794, 1.417, 796, 1.528, 797, 2.025, 799, 3.094, 801, 2.636, 834, 1.329, 843, 1.825, 854, 1.528, 855, 1.467, 856, 2.956, 865, 2.772, 869, 2.146, 875, 2.956, 876, 4.166, 887, 1.74, 895, 2.206, 947, 1.654, 948, 1.825, 949, 2.025, 950, 2.7, 951, 1.919, 956, 1.417, 961, 1.078, 962, 1.329, 964, 2.956, 969, 1.329, 998, 1.889, 1087, 1.522, 1094, 1.13, 1234, 1.03, 1254, 1.919, 1298, 2.146, 1305, 3.639, 1306, 2.671, 1309, 2.025, 1310, 2.025, 1311, 2.025, 1312, 2.025, 1315, 2.956, 1322, 2.146, 1324, 2.146, 1325, 2.146, 1326, 2.025, 1327, 3.76, 1328, 2.146, 1329, 2.146, 1333, 1.329, 1334, 1.329, 1335, 1.329, 1350, 1.329, 1351, 1.329, 1369, 1.254, 1371, 1.329, 1386, 5.649, 1387, 1.83, 1388, 3.388, 1389, 4.268, 1390, 4.262, 1391, 3.388, 1392, 4.262, 1393, 3.718, 1394, 3.304, 1395, 5.37, 1396, 4.262, 1397, 4.893, 1398, 5.37, 1399, 1.83, 1400, 3.857, 1401, 2.098, 1402, 5.272, 1403, 2.956, 1404, 2.098, 1405, 2.098, 1406, 3.388, 1407, 2.098, 1408, 2.098, 1409, 2.098, 1410, 2.098, 1411, 3.388, 1412, 2.956, 1413, 3.388, 1414, 3.388, 1415, 4.893, 1416, 3.388, 1417, 2.098, 1418, 3.388, 1419, 3.388, 1420, 2.098, 1421, 2.098, 1422, 2.098, 1423, 5.37, 1424, 2.098, 1425, 4.268, 1426, 3.857, 1427, 2.098, 1428, 3.388, 1429, 2.098, 1430, 2.956, 1431, 4.527, 1432, 2.098, 1433, 3.388, 1434, 3.388, 1435, 1.654, 1436, 1.83, 1437, 2.098, 1438, 1.83, 1439, 1.83, 1440, 1.83, 1441, 2.098, 1442, 2.098, 1443, 1.654, 1444, 3.388, 1445, 3.388, 1446, 3.388, 1447, 3.388, 1448, 2.098, 1449, 2.671, 1450, 2.098, 1451, 1.654, 1452, 2.098, 1453, 3.388, 1454, 4.262, 1455, 2.878, 1456, 2.098, 1457, 2.098, 1458, 2.098, 1459, 2.098, 1460, 3.388, 1461, 4.262, 1462, 2.098, 1463, 2.671, 1464, 2.671, 1465, 3.857, 1466, 2.098, 1467, 3.388, 1468, 4.527, 1469, 1.83, 1470, 2.098, 1471, 2.098, 1472, 2.098, 1473, 2.098, 1474, 4.268, 1475, 4.893, 1476, 2.671, 1477, 1.417, 1478, 2.956, 1479, 2.878, 1480, 2.098, 1481, 1.329, 1482, 2.098, 1483, 2.098, 1484, 1.654, 1485, 2.098, 1486, 1.654, 1487, 2.098, 1488, 1.83, 1489, 1.83, 1490, 1.654]], ["title/components/LogViewerComponent.html", [203, 1.146, 407, 1.691]], ["body/components/LogViewerComponent.html", [1, 4.897, 3, 0.121, 4, 0.109, 5, 0.181, 6, 2.234, 7, 2.558, 9, 0.286, 10, 2.3, 11, 0.752, 12, 2.774, 13, 2.473, 14, 3.27, 15, 3.653, 19, 0.924, 20, 3.409, 22, 0.146, 23, 0.342, 24, 1.913, 26, 1.204, 29, 1.658, 32, 0.789, 38, 1.34, 40, 1.744, 41, 1.692, 42, 0.985, 43, 0.013, 44, 1.169, 45, 0.228, 46, 0.447, 47, 1.934, 48, 1.07, 50, 2.852, 52, 1.52, 54, 1.811, 56, 1.467, 61, 2.384, 62, 2.018, 63, 3.4, 65, 3.4, 67, 0.827, 68, 1.87, 73, 1.627, 87, 2.3, 89, 2.586, 90, 0.789, 95, 2.108, 112, 1.029, 113, 1.33, 116, 0.625, 117, 3.164, 118, 0.816, 133, 0.121, 134, 0.519, 135, 1.731, 136, 1.527, 167, 1.731, 177, 1.52, 186, 2.779, 198, 0.008, 199, 0.008, 201, 4.915, 203, 1.658, 204, 3.451, 221, 2.018, 240, 2.587, 241, 1.33, 242, 0.854, 313, 1.527, 361, 1.468, 362, 2.367, 363, 1.731, 364, 1.731, 365, 1.731, 366, 1.731, 368, 1.59, 369, 3.875, 370, 3.711, 371, 2.472, 373, 2.472, 376, 4.201, 380, 1.811, 381, 1.811, 382, 2.712, 386, 2.367, 387, 1.874, 388, 1.731, 389, 2.384, 390, 1.731, 391, 1.731, 392, 1.468, 393, 1.731, 394, 1.029, 395, 2.472, 396, 1.413, 397, 1.731, 398, 1.413, 399, 2.108, 400, 1.731, 401, 1.413, 402, 1.731, 403, 1.468, 404, 1.731, 405, 1.468, 406, 1.312, 407, 2.667, 408, 1.731, 409, 1.468, 410, 1.731, 411, 1.468, 412, 1.731, 413, 1.468, 414, 1.731, 415, 1.731, 416, 1.731, 448, 3.829, 449, 2.108, 450, 2.108, 476, 5.34, 534, 3.4, 536, 3.164, 562, 2.219, 572, 3.01, 584, 3.969, 597, 1.52, 613, 2.096, 732, 1.807, 739, 3.629, 744, 2.27, 745, 3.4, 750, 2.852, 751, 3.653, 754, 2.472, 784, 3.721, 785, 1.899, 786, 3.017, 796, 2.27, 797, 3.01, 799, 2.712, 801, 2.712, 834, 2.234, 843, 2.712, 865, 3.629, 876, 3.653, 887, 2.586, 947, 2.779, 948, 2.712, 951, 1.997, 962, 3.19, 966, 4.392, 969, 2.234, 998, 1.944, 1094, 1.899, 1298, 3.19, 1305, 4.463, 1306, 3.969, 1309, 3.01, 1310, 3.01, 1311, 3.01, 1312, 3.01, 1322, 3.19, 1324, 3.19, 1325, 3.19, 1326, 3.01, 1327, 3.829, 1328, 3.19, 1329, 3.19, 1333, 2.234, 1334, 2.234, 1335, 2.234, 1350, 2.234, 1351, 2.234, 1386, 5.34, 1389, 4.392, 1393, 5.123, 1399, 3.076, 1402, 4.392, 1425, 4.392, 1426, 3.969, 1430, 5.588, 1436, 3.076, 1438, 3.076, 1439, 3.076, 1440, 3.076, 1451, 2.779, 1455, 2.381, 1476, 3.969, 1477, 2.381, 1478, 4.392, 1479, 2.381, 1488, 3.076, 1489, 3.076, 1490, 2.779, 1491, 3.076, 1492, 5.873, 1493, 5.035, 1494, 5.035, 1495, 3.526, 1496, 5.035, 1497, 4.392, 1498, 3.526, 1499, 3.526, 1500, 3.526]], ["title/interfaces/Login$Params.html", [228, 0.044, 673, 2.742]], ["body/interfaces/Login$Params.html", [3, 0.173, 4, 0.156, 5, 0.156, 9, 0.246, 11, 0.686, 19, 0.821, 22, 0.209, 23, 0.436, 41, 1.866, 43, 0.013, 45, 0.217, 47, 1.528, 48, 1.087, 56, 1.024, 67, 0.832, 78, 1.453, 94, 2.6, 99, 2.283, 101, 2.726, 103, 1.884, 113, 1.337, 116, 0.748, 119, 1.884, 133, 0.22, 135, 1.898, 139, 1.429, 163, 1.805, 165, 2.026, 175, 1.438, 177, 1.528, 198, 0.01, 199, 0.01, 228, 0.055, 230, 1.024, 235, 1.345, 236, 1.487, 237, 3.32, 242, 0.856, 244, 1.876, 245, 2.078, 246, 3.217, 247, 1.528, 248, 2.727, 249, 1.694, 250, 2.192, 251, 2.676, 252, 2.192, 253, 2.098, 254, 1.21, 255, 1.884, 256, 1.429, 257, 2.727, 259, 2.6, 260, 3.302, 262, 2.6, 263, 2.227, 264, 1.817, 265, 1.528, 266, 2.447, 267, 2.6, 268, 2.283, 269, 2.6, 270, 2.6, 271, 2.192, 273, 2.283, 275, 2.727, 276, 2.727, 281, 2.727, 282, 2.151, 283, 2.727, 284, 2.727, 285, 2.029, 286, 2.029, 287, 2.192, 288, 2.727, 289, 3.805, 290, 2.029, 291, 2.192, 292, 1.636, 293, 2.6, 294, 1.694, 295, 2.727, 296, 2.727, 297, 2.485, 399, 2.753, 555, 4.131, 673, 4.77, 766, 4.341, 995, 3.026, 1501, 3.99, 1502, 3.419, 1503, 4.416, 1504, 6.428]], ["title/components/LoginPinComponent.html", [203, 1.146, 398, 1.627]], ["body/components/LoginPinComponent.html", [3, 0.057, 4, 0.051, 5, 0.111, 9, 0.229, 10, 1.516, 11, 0.545, 12, 2.213, 13, 1.073, 15, 2.016, 16, 1.301, 19, 0.937, 22, 0.068, 23, 0.189, 24, 1.783, 26, 0.665, 29, 2.06, 32, 0.369, 35, 2.753, 36, 1.986, 38, 1.321, 40, 0.963, 41, 1.508, 42, 0.826, 43, 0.013, 44, 1.042, 45, 0.199, 46, 0.375, 47, 1.724, 48, 1.107, 51, 1.428, 52, 1.275, 53, 2.17, 54, 2.422, 55, 1.497, 56, 1.242, 57, 1.497, 61, 2.406, 62, 1.114, 64, 4.147, 67, 0.938, 68, 1.843, 78, 1.387, 79, 4.028, 89, 2.625, 90, 1.277, 94, 1.428, 103, 1.902, 112, 0.811, 116, 0.599, 117, 1.939, 118, 0.382, 120, 0.986, 125, 0.81, 126, 0.889, 127, 1.045, 133, 0.057, 134, 0.243, 135, 1.687, 136, 0.714, 139, 1.612, 140, 3.234, 154, 3.234, 155, 2.04, 156, 1.574, 157, 1.574, 158, 1.574, 159, 1.574, 160, 2.573, 161, 2.574, 162, 1.661, 163, 0.422, 164, 0.81, 165, 0.436, 166, 0.776, 167, 3.175, 168, 0.935, 170, 0.776, 171, 2.612, 175, 0.622, 177, 0.839, 198, 0.004, 199, 0.004, 203, 1.016, 204, 2.753, 220, 1.661, 221, 1.693, 224, 2.016, 237, 1.986, 240, 0.898, 241, 0.734, 242, 0.859, 254, 0.395, 261, 2.016, 266, 1.464, 272, 4.5, 297, 1.364, 313, 0.714, 321, 3.413, 361, 0.687, 362, 1.306, 363, 1.364, 364, 0.81, 365, 0.81, 366, 0.81, 368, 0.744, 369, 3.241, 370, 3.103, 371, 1.364, 373, 1.364, 376, 3.234, 380, 0.848, 381, 0.848, 382, 2.54, 386, 1.306, 387, 1.34, 388, 0.81, 389, 1.572, 390, 0.81, 391, 0.81, 392, 0.687, 393, 0.81, 394, 0.482, 395, 1.364, 396, 0.661, 397, 0.81, 398, 1.693, 399, 2.708, 400, 0.81, 401, 0.661, 402, 0.81, 403, 0.687, 404, 0.81, 405, 0.687, 406, 0.614, 407, 0.687, 408, 0.81, 409, 0.687, 410, 0.81, 411, 0.687, 412, 0.81, 413, 0.687, 414, 0.81, 415, 0.81, 416, 0.81, 429, 1.574, 448, 2.525, 449, 0.986, 450, 0.986, 468, 1.114, 469, 4.691, 526, 1.301, 534, 1.114, 536, 1.939, 543, 0.986, 548, 2.191, 550, 0.935, 553, 2.281, 555, 1.497, 557, 3.685, 562, 1.464, 564, 3.33, 572, 3.055, 574, 2.152, 583, 2.424, 589, 2.191, 590, 3.519, 597, 0.839, 598, 1.577, 607, 2.431, 608, 2.612, 613, 2.92, 617, 2.676, 619, 2.191, 635, 2.152, 636, 1.439, 642, 1.439, 644, 1.439, 732, 0.998, 739, 2.393, 744, 1.253, 750, 1.574, 754, 1.364, 755, 0.81, 761, 1.877, 784, 3.89, 785, 1.497, 786, 3.558, 788, 2.987, 789, 1.197, 790, 3.052, 791, 1.197, 792, 2.853, 793, 3.617, 794, 3.451, 796, 0.744, 797, 2.525, 798, 3.055, 799, 3.401, 800, 1.197, 801, 3.556, 802, 1.114, 803, 3.671, 804, 3.238, 805, 3.065, 806, 1.114, 807, 1.197, 821, 4.147, 823, 2.431, 831, 2.424, 834, 2.987, 842, 2.016, 843, 2.276, 852, 2.191, 854, 1.905, 855, 1.829, 865, 3.234, 869, 1.761, 871, 1.306, 873, 1.877, 887, 1.428, 895, 1.623, 899, 2.191, 932, 2.838, 933, 2.191, 948, 2.276, 949, 2.818, 950, 3.444, 951, 4.019, 956, 1.114, 958, 1.197, 961, 1.428, 962, 1.761, 963, 1.301, 967, 1.439, 968, 2.612, 969, 3.617, 981, 1.661, 985, 2.431, 988, 4.428, 998, 1.631, 999, 3.451, 1003, 3.451, 1030, 2.853, 1063, 1.497, 1065, 2.191, 1066, 2.016, 1067, 2.016, 1068, 2.016, 1069, 2.016, 1070, 1.661, 1071, 2.612, 1072, 2.016, 1073, 2.016, 1096, 1.574, 1138, 2.216, 1234, 0.81, 1298, 1.761, 1305, 3.238, 1309, 1.661, 1310, 1.661, 1311, 1.661, 1312, 1.661, 1317, 2.016, 1321, 2.424, 1322, 1.761, 1324, 3.238, 1325, 2.676, 1326, 1.661, 1327, 1.661, 1328, 1.761, 1329, 1.761, 1333, 1.045, 1334, 1.045, 1335, 1.045, 1336, 2.853, 1337, 2.838, 1338, 2.191, 1339, 2.016, 1341, 2.431, 1344, 1.197, 1345, 1.197, 1346, 1.301, 1350, 1.045, 1351, 2.281, 1352, 2.016, 1353, 2.016, 1354, 2.191, 1355, 1.197, 1356, 2.838, 1357, 2.191, 1358, 1.301, 1359, 1.301, 1360, 1.197, 1363, 2.191, 1364, 1.439, 1365, 2.191, 1403, 3.685, 1426, 2.191, 1431, 2.838, 1435, 1.301, 1443, 2.191, 1449, 2.191, 1455, 2.431, 1479, 3.184, 1481, 1.045, 1484, 2.838, 1486, 1.301, 1502, 2.853, 1505, 5.097, 1506, 1.439, 1507, 3.6, 1508, 2.779, 1509, 4.113, 1510, 3.716, 1511, 2.779, 1512, 4.224, 1513, 1.439, 1514, 4.742, 1515, 2.779, 1516, 2.424, 1517, 2.424, 1518, 2.779, 1519, 2.424, 1520, 2.424, 1521, 2.779, 1522, 3.707, 1523, 2.424, 1524, 3.685, 1525, 2.424, 1526, 2.424, 1527, 2.191, 1528, 2.191, 1529, 2.779, 1530, 1.65, 1531, 2.779, 1532, 2.779, 1533, 2.779, 1534, 4.224, 1535, 3.685, 1536, 2.779, 1537, 3.141, 1538, 2.191, 1539, 2.779, 1540, 2.779, 1541, 2.779, 1542, 1.65, 1543, 2.779, 1544, 2.779, 1545, 1.65, 1546, 2.424, 1547, 2.424, 1548, 2.779, 1549, 4.028, 1550, 1.65, 1551, 2.424, 1552, 2.424, 1553, 1.65, 1554, 2.779, 1555, 1.65, 1556, 2.779, 1557, 4.224, 1558, 2.424, 1559, 3.685, 1560, 2.016, 1561, 1.65, 1562, 2.779, 1563, 2.779, 1564, 1.65, 1565, 1.65, 1566, 3.065, 1567, 2.424, 1568, 2.424, 1569, 2.424, 1570, 2.191, 1571, 2.191, 1572, 2.424, 1573, 2.424, 1574, 2.424, 1575, 2.424, 1576, 2.779, 1577, 4.224, 1578, 3.6, 1579, 3.6, 1580, 2.779, 1581, 2.424, 1582, 2.779, 1583, 1.65, 1584, 2.779, 1585, 1.65, 1586, 1.65, 1587, 1.65, 1588, 1.439, 1589, 1.65, 1590, 2.424, 1591, 1.65, 1592, 1.439, 1593, 1.439, 1594, 1.439, 1595, 1.439, 1596, 2.838, 1597, 1.65, 1598, 1.65, 1599, 1.65, 1600, 2.779, 1601, 1.65, 1602, 1.65, 1603, 1.65, 1604, 1.65, 1605, 1.65, 1606, 1.65, 1607, 1.65, 1608, 1.301, 1609, 2.424, 1610, 3.141, 1611, 2.424, 1612, 2.424, 1613, 2.424, 1614, 2.424, 1615, 3.685, 1616, 2.424, 1617, 1.439, 1618, 3.944, 1619, 3.141, 1620, 2.838, 1621, 2.838, 1622, 3.141, 1623, 2.191, 1624, 1.439, 1625, 2.424, 1626, 1.439, 1627, 1.114, 1628, 1.439, 1629, 1.439, 1630, 1.439, 1631, 3.141, 1632, 1.65, 1633, 1.439, 1634, 2.191, 1635, 2.431, 1636, 1.65, 1637, 2.424, 1638, 1.301, 1639, 2.424, 1640, 3.685, 1641, 1.439, 1642, 3.141, 1643, 3.141, 1644, 1.439, 1645, 1.439, 1646, 1.301, 1647, 1.439, 1648, 2.424, 1649, 1.301, 1650, 3.141, 1651, 3.685, 1652, 2.838, 1653, 1.439, 1654, 1.439, 1655, 1.65, 1656, 1.439, 1657, 2.191, 1658, 1.439, 1659, 1.439, 1660, 2.424, 1661, 1.439, 1662, 1.439, 1663, 1.439, 1664, 1.65, 1665, 2.779, 1666, 1.65, 1667, 1.65, 1668, 1.65, 1669, 1.65, 1670, 1.65, 1671, 2.779, 1672, 1.65, 1673, 1.65, 1674, 1.301, 1675, 2.779, 1676, 2.424, 1677, 1.439, 1678, 1.439, 1679, 1.301, 1680, 1.439]], ["title/components/LoginUsernameComponent.html", [203, 1.146, 401, 1.627]], ["body/components/LoginUsernameComponent.html", [3, 0.076, 4, 0.069, 5, 0.136, 9, 0.216, 10, 1.817, 11, 0.54, 12, 2.554, 19, 0.959, 22, 0.092, 23, 0.241, 24, 1.815, 26, 0.85, 29, 1.994, 32, 0.498, 35, 2.727, 36, 2.38, 38, 1.295, 40, 1.231, 41, 1.698, 42, 0.695, 43, 0.013, 44, 0.924, 45, 0.209, 46, 0.315, 47, 1.781, 48, 1.001, 51, 1.825, 52, 1.073, 53, 1.825, 54, 2.278, 55, 1.914, 56, 1.024, 61, 1.884, 64, 3.419, 67, 0.728, 68, 1.615, 73, 1.149, 78, 1.329, 89, 3.03, 90, 0.795, 94, 1.825, 103, 1.884, 112, 1.037, 116, 0.647, 117, 2.389, 118, 0.515, 120, 1.331, 125, 1.093, 126, 1.199, 127, 1.41, 133, 0.076, 134, 0.328, 135, 1.643, 136, 0.964, 139, 1.003, 160, 1.539, 161, 2.495, 162, 2.651, 163, 0.569, 165, 0.588, 167, 2.177, 171, 3.673, 175, 0.498, 177, 1.073, 198, 0.005, 199, 0.005, 203, 1.252, 204, 2.727, 221, 1.424, 224, 2.578, 240, 1.149, 242, 0.715, 254, 0.85, 266, 1.231, 313, 0.964, 320, 3.208, 361, 0.927, 362, 1.671, 363, 1.093, 364, 1.093, 365, 1.093, 366, 1.093, 368, 1.004, 369, 3.521, 370, 3.372, 371, 1.745, 373, 1.745, 376, 3.642, 380, 1.143, 381, 1.143, 382, 3.335, 386, 1.671, 387, 1.322, 388, 1.093, 389, 1.884, 390, 1.093, 391, 1.093, 392, 0.927, 393, 1.093, 394, 0.65, 395, 1.745, 396, 0.892, 397, 1.093, 398, 0.892, 399, 2.877, 400, 1.093, 401, 2.029, 402, 1.093, 403, 0.927, 404, 1.093, 405, 0.927, 406, 0.828, 407, 0.927, 408, 1.093, 409, 0.927, 410, 1.093, 411, 0.927, 412, 1.093, 413, 0.927, 414, 1.093, 415, 1.093, 416, 1.093, 429, 2.013, 433, 4.664, 448, 3.027, 449, 1.331, 450, 1.331, 468, 1.503, 526, 2.801, 536, 2.389, 543, 1.331, 550, 1.261, 553, 3.208, 555, 3.463, 562, 1.231, 563, 3.991, 564, 3.991, 572, 3.526, 574, 2.124, 589, 2.801, 590, 3.789, 597, 1.073, 605, 2.4, 613, 2.941, 617, 3.208, 638, 3.869, 732, 1.276, 739, 2.868, 744, 1.602, 750, 2.013, 754, 1.745, 755, 1.093, 784, 3.506, 785, 1.199, 786, 3.852, 788, 2.81, 789, 1.615, 790, 3.404, 791, 1.615, 792, 3.419, 793, 4.073, 794, 3.983, 797, 2.651, 798, 3.526, 799, 3.661, 800, 1.615, 801, 3.805, 802, 1.503, 803, 2.995, 804, 2.251, 805, 3.217, 806, 1.503, 807, 2.578, 821, 4.589, 823, 3.419, 842, 2.578, 843, 2.727, 854, 2.283, 855, 2.192, 865, 3.642, 869, 2.251, 873, 2.4, 887, 1.825, 895, 2, 899, 2.801, 901, 3.1, 917, 1.942, 938, 1.942, 948, 2.727, 949, 3.027, 950, 3.922, 951, 4.316, 956, 1.503, 958, 3.217, 961, 1.825, 962, 2.251, 963, 1.755, 965, 3.1, 968, 3.673, 969, 4.073, 981, 1.331, 985, 2.4, 988, 2.124, 1234, 1.093, 1298, 2.251, 1305, 3.737, 1309, 2.124, 1310, 2.124, 1311, 2.124, 1312, 2.124, 1317, 3.673, 1322, 2.251, 1324, 3.737, 1325, 3.208, 1326, 2.124, 1327, 2.124, 1328, 2.251, 1329, 2.251, 1333, 1.41, 1334, 1.41, 1335, 1.41, 1341, 1.503, 1344, 1.615, 1345, 1.615, 1350, 2.251, 1351, 2.81, 1352, 1.615, 1353, 2.578, 1355, 1.615, 1363, 2.801, 1431, 3.496, 1435, 1.755, 1443, 1.755, 1449, 2.801, 1455, 2.995, 1479, 3.737, 1481, 1.41, 1484, 2.801, 1486, 1.755, 1502, 4.589, 1505, 5.067, 1509, 4.827, 1510, 4.362, 1513, 1.942, 1514, 5.4, 1516, 3.1, 1519, 3.1, 1520, 3.1, 1522, 4.279, 1523, 3.1, 1524, 4.417, 1525, 3.1, 1526, 3.1, 1527, 2.801, 1528, 2.801, 1546, 3.1, 1547, 3.1, 1549, 4.649, 1551, 3.1, 1552, 3.1, 1559, 3.1, 1566, 3.673, 1567, 3.1, 1568, 3.1, 1569, 3.1, 1570, 2.801, 1571, 2.801, 1572, 3.1, 1573, 3.1, 1574, 3.1, 1575, 3.1, 1581, 1.942, 1588, 1.942, 1596, 3.496, 1608, 1.755, 1609, 3.1, 1610, 3.869, 1611, 3.1, 1615, 3.1, 1617, 1.942, 1618, 4.279, 1619, 3.869, 1620, 3.496, 1621, 3.496, 1622, 3.869, 1623, 2.801, 1624, 1.942, 1625, 3.1, 1626, 1.942, 1627, 1.503, 1628, 1.942, 1629, 1.942, 1630, 1.942, 1631, 3.869, 1633, 1.942, 1634, 2.801, 1635, 2.995, 1637, 3.1, 1638, 1.755, 1639, 3.1, 1640, 3.1, 1641, 1.942, 1642, 3.1, 1643, 3.1, 1644, 1.942, 1645, 1.942, 1646, 1.755, 1647, 1.942, 1648, 1.942, 1651, 1.942, 1652, 4.362, 1653, 1.942, 1656, 1.942, 1657, 2.801, 1658, 1.942, 1659, 3.1, 1660, 3.1, 1661, 1.942, 1662, 1.942, 1663, 1.942, 1674, 1.755, 1676, 3.869, 1677, 1.942, 1678, 3.1, 1679, 1.755, 1680, 1.942, 1681, 1.942, 1682, 4.435, 1683, 3.554, 1684, 5.063, 1685, 3.554, 1686, 2.226, 1687, 3.554, 1688, 2.226, 1689, 2.226, 1690, 2.226, 1691, 2.226, 1692, 3.1, 1693, 2.226, 1694, 2.226, 1695, 2.226, 1696, 2.226, 1697, 2.226, 1698, 3.554, 1699, 1.942, 1700, 2.226, 1701, 2.226, 1702, 2.226]], ["title/interfaces/Logout$Params.html", [228, 0.044, 688, 2.742]], ["body/interfaces/Logout$Params.html", [3, 0.176, 4, 0.159, 5, 0.159, 9, 0.251, 11, 0.694, 19, 0.828, 22, 0.213, 23, 0.441, 41, 1.881, 43, 0.013, 45, 0.159, 47, 1.555, 48, 1.093, 56, 1.042, 67, 0.846, 78, 1.462, 94, 2.646, 99, 2.323, 101, 2.749, 103, 1.917, 113, 1.361, 116, 0.752, 119, 1.917, 133, 0.223, 135, 1.911, 139, 1.454, 163, 1.819, 165, 2.036, 175, 1.454, 177, 1.555, 198, 0.01, 199, 0.01, 228, 0.056, 230, 1.042, 235, 1.36, 236, 1.503, 237, 3.347, 242, 0.624, 244, 1.897, 245, 2.101, 246, 3.238, 247, 1.555, 248, 2.775, 249, 1.723, 250, 2.231, 251, 2.706, 252, 2.231, 253, 2.111, 254, 1.232, 255, 1.917, 256, 1.454, 257, 2.775, 259, 2.646, 260, 3.339, 262, 2.646, 263, 2.252, 264, 1.849, 265, 1.555, 266, 2.467, 267, 2.646, 268, 2.301, 269, 2.646, 270, 2.646, 271, 2.231, 273, 2.323, 275, 2.775, 276, 2.775, 281, 2.775, 282, 2.174, 283, 2.775, 284, 2.775, 285, 2.064, 286, 2.064, 287, 2.231, 288, 2.775, 289, 3.836, 290, 2.064, 291, 2.231, 292, 1.665, 293, 2.646, 294, 1.723, 295, 2.775, 296, 2.775, 297, 2.529, 406, 2.869, 688, 4.808, 995, 3.079, 1703, 4.06, 1704, 4.494, 1705, 6.499]], ["title/components/LogoutDialogComponent.html", [203, 1.146, 405, 1.691]], ["body/components/LogoutDialogComponent.html", [3, 0.121, 4, 0.109, 5, 0.109, 9, 0.286, 10, 2.303, 11, 0.818, 19, 0.82, 22, 0.146, 23, 0.343, 26, 1.207, 29, 2.246, 32, 0.792, 38, 1.519, 40, 1.749, 41, 1.695, 42, 0.692, 43, 0.013, 44, 1.074, 45, 0.209, 46, 0.522, 48, 0.834, 50, 3.635, 56, 1.469, 61, 2.625, 63, 4.333, 67, 0.966, 68, 2.059, 73, 2.074, 74, 2.593, 75, 3.979, 78, 0.987, 89, 3.623, 94, 3.023, 116, 0.492, 117, 3.17, 118, 0.818, 133, 0.121, 134, 0.521, 135, 1.29, 198, 0.008, 199, 0.008, 203, 1.661, 221, 2.023, 240, 1.631, 242, 0.611, 313, 1.532, 361, 1.473, 362, 2.373, 363, 1.737, 364, 1.737, 365, 1.737, 366, 1.737, 368, 1.595, 369, 3.878, 370, 3.713, 371, 2.478, 373, 2.478, 382, 4.128, 386, 2.373, 387, 1.878, 388, 1.737, 389, 2.388, 390, 1.737, 391, 1.737, 392, 1.473, 393, 1.737, 394, 1.033, 395, 2.478, 396, 1.418, 397, 1.737, 398, 1.418, 399, 1.812, 400, 1.737, 401, 1.418, 402, 1.737, 403, 1.473, 404, 1.737, 405, 2.671, 406, 2.762, 407, 1.473, 408, 1.737, 409, 1.473, 410, 1.737, 411, 1.473, 412, 1.737, 413, 1.473, 414, 1.737, 415, 1.737, 416, 1.737, 454, 2.241, 485, 5.012, 536, 2.719, 613, 2.824, 728, 2.789, 729, 5.551, 732, 1.812, 733, 5.133, 734, 4.403, 735, 5.918, 736, 5.133, 737, 6.153, 739, 3.635, 740, 3.086, 741, 5.918, 742, 4.403, 743, 5.597, 744, 2.276, 745, 4.333, 746, 5.133, 747, 5.133, 748, 3.973, 749, 5.133, 750, 3.333, 751, 5.559, 752, 5.722, 757, 5.597, 758, 5.597, 759, 5.057, 761, 4.333, 764, 4.403, 765, 4.403, 766, 2.389, 767, 4.403, 768, 3.086, 769, 3.086, 771, 3.086, 772, 3.086, 773, 3.408, 775, 1.906, 776, 3.086, 777, 3.086, 778, 3.086, 779, 4.403, 780, 3.662, 781, 3.198, 782, 4.403, 783, 4.403, 784, 2.241, 785, 1.906, 786, 2.593, 787, 3.086, 788, 2.241, 789, 2.567, 790, 2.593, 791, 2.567, 792, 3.408, 793, 2.241, 794, 2.389, 795, 3.086, 796, 1.595, 797, 2.115, 798, 2.115, 799, 3.17, 800, 2.567, 801, 1.906, 802, 2.389, 803, 4.333, 804, 3.198, 805, 2.567, 806, 3.408, 807, 3.662, 808, 3.086, 1706, 6.475, 1707, 5.047, 1708, 5.347, 1709, 5.347, 1710, 3.538, 1711, 6.416, 1712, 3.538, 1713, 3.538, 1714, 6.416, 1715, 5.047, 1716, 5.047, 1717, 5.047, 1718, 3.538]], ["title/injectables/LogoutService.html", [0, 1.004, 1302, 2.427]], ["body/injectables/LogoutService.html", [0, 1.504, 2, 1.936, 3, 0.159, 4, 0.143, 5, 0.143, 9, 0.296, 10, 2.583, 11, 0.818, 12, 3.318, 19, 0.837, 22, 0.192, 24, 1.313, 26, 1.455, 29, 2.163, 32, 1.04, 35, 3.654, 36, 3.383, 38, 1.419, 40, 2.108, 41, 1.607, 42, 0.909, 43, 0.013, 44, 0.849, 45, 0.143, 46, 0.413, 47, 1.837, 48, 1.02, 51, 3.126, 52, 2.173, 53, 3.697, 54, 3.126, 55, 3.278, 61, 2.678, 67, 1, 68, 2.101, 78, 1.602, 103, 2.265, 116, 0.662, 118, 1.076, 124, 3.666, 125, 2.283, 126, 2.505, 131, 2.014, 132, 1.863, 133, 0.159, 134, 0.685, 135, 1.555, 136, 2.014, 161, 3.455, 198, 0.009, 199, 0.009, 406, 3.103, 429, 3.447, 543, 2.78, 553, 3.855, 562, 2.493, 563, 4.797, 565, 6.278, 573, 4.797, 574, 4.302, 586, 5.559, 613, 2.534, 744, 2.744, 754, 2.988, 820, 3.666, 821, 5.457, 842, 4.415, 843, 3.278, 907, 5.309, 933, 3.666, 1302, 3.638, 1692, 4.057, 1719, 4.057, 1720, 5.309, 1721, 5.309, 1722, 6.086, 1723, 6.086, 1724, 7.196, 1725, 6.086, 1726, 7.196, 1727, 6.278, 1728, 7.196, 1729, 4.65, 1730, 4.65, 1731, 7.196, 1732, 7.196, 1733, 4.65, 1734, 4.797, 1735, 4.65, 1736, 4.65]], ["title/interfaces/Message.html", [228, 0.044, 887, 2.086]], ["body/interfaces/Message.html", [3, 0.199, 4, 0.179, 5, 0.179, 9, 0.282, 11, 0.62, 22, 0.24, 23, 0.475, 43, 0.013, 45, 0.252, 73, 1.876, 78, 1.135, 93, 4.576, 133, 0.199, 149, 3.665, 161, 3.515, 198, 0.011, 199, 0.011, 220, 3.471, 228, 0.063, 230, 1.174, 235, 1.215, 242, 1.009, 555, 4.2, 598, 2.785, 607, 5.072, 608, 5.448, 836, 4.576, 887, 3.594, 974, 4.005, 1296, 5.065, 1326, 3.471, 1737, 5.065, 1738, 5.806, 1739, 5.806, 1740, 7.797, 1741, 6.801, 1742, 7.797]], ["title/interfaces/OperatorsModel.html", [228, 0.044, 1034, 2.946]], ["body/interfaces/OperatorsModel.html", [3, 0.185, 4, 0.167, 5, 0.167, 9, 0.263, 11, 0.578, 19, 0.63, 22, 0.224, 23, 0.455, 43, 0.013, 44, 1.39, 45, 0.255, 46, 0.757, 52, 1.635, 73, 1.75, 133, 0.185, 198, 0.01, 199, 0.01, 228, 0.059, 230, 1.096, 235, 1.133, 236, 1.253, 242, 1.031, 358, 4.765, 598, 2.667, 983, 1.635, 1034, 4.865, 1065, 6.001, 1066, 5.522, 1067, 5.522, 1068, 5.522, 1069, 5.522, 1070, 4.551, 1071, 5.522, 1072, 5.522, 1073, 5.522, 1367, 3.431, 1369, 4.765, 1560, 3.929, 1743, 4.724]], ["title/injectables/OperatorsService.html", [0, 1.004, 321, 2.427]], ["body/injectables/OperatorsService.html", [0, 1.455, 2, 1.84, 3, 0.151, 4, 0.136, 5, 0.136, 22, 0.183, 23, 0.399, 24, 1.661, 26, 1.407, 32, 0.989, 38, 1.537, 42, 1.294, 43, 0.013, 44, 1.208, 45, 0.244, 46, 0.652, 67, 0.967, 90, 0.989, 101, 2.836, 112, 1.29, 116, 0.781, 118, 1.022, 119, 1.645, 130, 1.532, 131, 1.914, 132, 1.771, 133, 0.151, 134, 0.651, 163, 1.69, 165, 2.069, 175, 1.317, 198, 0.009, 199, 0.009, 219, 5.207, 242, 0.713, 244, 2.059, 245, 2.492, 246, 2.548, 247, 1.335, 249, 1.479, 250, 1.914, 251, 2.45, 252, 1.914, 253, 2.074, 254, 1.915, 256, 1.991, 265, 1.335, 268, 2.492, 282, 2.62, 291, 1.914, 292, 1.902, 300, 3.316, 304, 2.381, 321, 3.518, 328, 4.469, 330, 4.192, 340, 2.381, 545, 4.469, 635, 4.609, 661, 2.767, 662, 3.996, 663, 4.468, 666, 3.729, 669, 3.729, 671, 2.8, 675, 3.682, 676, 5.408, 677, 3.316, 678, 3.974, 679, 4.764, 680, 4.764, 681, 4.764, 682, 3.518, 685, 3.974, 686, 3.729, 693, 3.974, 694, 2.767, 696, 2.504, 697, 2.985, 698, 2.8, 701, 2.985, 703, 2.078, 705, 2.985, 706, 2.985, 990, 2.504, 991, 2.642, 992, 3.974, 996, 5.134, 1744, 3.856, 1745, 6.616, 1746, 7.054, 1747, 4.42, 1748, 5.885, 1749, 4.42, 1750, 5.885, 1751, 4.42, 1752, 4.42, 1753, 5.885, 1754, 4.42, 1755, 4.42]], ["title/pipes/OptionsPipe.html", [287, 1.758, 421, 2.573]], ["body/pipes/OptionsPipe.html", [3, 0.179, 4, 0.161, 5, 0.161, 9, 0.319, 10, 2.571, 11, 0.764, 12, 3.101, 14, 2.954, 26, 1.247, 29, 1.849, 32, 1.167, 38, 1.091, 40, 1.807, 41, 1.378, 42, 1.02, 43, 0.013, 44, 1.307, 45, 0.161, 46, 0.463, 48, 0.929, 50, 3.711, 52, 1.978, 56, 1.598, 61, 2.438, 67, 1.076, 72, 5.226, 78, 1.4, 88, 3.531, 116, 0.509, 118, 1.207, 133, 0.179, 134, 0.768, 135, 1.674, 175, 1.167, 198, 0.01, 199, 0.01, 242, 0.982, 287, 2.837, 294, 2.192, 368, 2.352, 421, 4.15, 562, 2.736, 597, 2.162, 603, 5.921, 613, 2.727, 619, 5.164, 732, 1.873, 759, 5.164, 781, 4.15, 930, 5.715, 1327, 4.49, 1474, 5.715, 1481, 3.305, 1538, 5.164, 1756, 4.112, 1757, 4.551, 1758, 6.551, 1759, 6.551, 1760, 5.217, 1761, 7.512, 1762, 6.551, 1763, 6.551, 1764, 6.551, 1765, 7.898, 1766, 5.164, 1767, 6.551, 1768, 6.551, 1769, 6.551, 1770, 6.551, 1771, 5.715, 1772, 5.217, 1773, 5.217, 1774, 5.217, 1775, 5.217]], ["title/interfaces/OrderOperatorsModel.html", [228, 0.044, 1014, 2.946]], ["body/interfaces/OrderOperatorsModel.html", [3, 0.196, 4, 0.176, 5, 0.176, 9, 0.279, 11, 0.612, 13, 2.213, 22, 0.237, 23, 0.471, 43, 0.013, 44, 1.364, 45, 0.214, 46, 0.689, 48, 0.813, 78, 1.121, 133, 0.196, 198, 0.011, 199, 0.011, 228, 0.062, 230, 1.16, 235, 1.2, 236, 1.326, 597, 1.731, 961, 3.988, 983, 1.731, 991, 3.427, 999, 3.871, 1009, 3.248, 1014, 5.037, 1062, 3.248, 1063, 3.088, 1066, 5.419, 1067, 5.419, 1068, 5.419, 1069, 5.419, 1070, 4.465, 1071, 5.419, 1072, 5.419, 1073, 5.419, 1776, 3.871, 1777, 5.243, 1778, 5.044, 1779, 5.044]], ["title/interfaces/OrderQualityattributeModel.html", [228, 0.044, 1019, 2.946]], ["body/interfaces/OrderQualityattributeModel.html", [3, 0.191, 4, 0.172, 5, 0.172, 9, 0.271, 11, 0.595, 13, 2.153, 14, 2.515, 19, 0.648, 22, 0.231, 23, 0.463, 43, 0.013, 45, 0.21, 46, 0.682, 48, 0.791, 78, 1.091, 133, 0.191, 141, 3.623, 142, 4.676, 143, 4.676, 144, 4.676, 145, 4.676, 146, 4.676, 147, 4.676, 148, 4.676, 149, 3.469, 150, 4.676, 151, 4.676, 152, 4.676, 198, 0.01, 199, 0.01, 228, 0.061, 230, 1.128, 235, 1.167, 236, 1.29, 241, 1.473, 597, 1.684, 961, 3.951, 983, 1.684, 1009, 3.16, 1017, 3.334, 1019, 4.954, 1062, 3.16, 1063, 3.005, 1776, 3.766, 1777, 5.194, 1778, 4.984, 1779, 4.984]], ["title/interfaces/OrderQualityphaseModel.html", [228, 0.044, 1023, 2.946]], ["body/interfaces/OrderQualityphaseModel.html", [3, 0.184, 4, 0.165, 5, 0.165, 9, 0.261, 11, 0.572, 19, 0.623, 22, 0.222, 23, 0.452, 43, 0.013, 45, 0.205, 46, 0.673, 48, 0.76, 52, 1.618, 78, 1.048, 133, 0.184, 141, 3.559, 149, 3.408, 198, 0.01, 199, 0.01, 228, 0.058, 230, 1.084, 235, 1.121, 236, 1.24, 241, 1.416, 597, 1.618, 709, 4.593, 790, 3.724, 871, 2.519, 961, 3.896, 974, 3.724, 983, 1.618, 1009, 3.036, 1021, 3.204, 1023, 4.833, 1062, 3.036, 1063, 2.887, 1074, 4.896, 1075, 4.896, 1076, 4.896, 1077, 4.896, 1078, 4.896, 1079, 4.896, 1080, 4.896, 1081, 4.896, 1082, 4.896, 1083, 4.896, 1084, 4.896, 1085, 4.896, 1776, 3.619, 1777, 5.122, 1778, 4.896, 1779, 4.896]], ["title/interfaces/OrderQualitysavelogModel.html", [228, 0.044, 1027, 2.946]], ["body/interfaces/OrderQualitysavelogModel.html", [3, 0.203, 4, 0.182, 5, 0.182, 9, 0.288, 11, 0.632, 19, 0.689, 22, 0.245, 23, 0.481, 43, 0.013, 45, 0.218, 46, 0.696, 48, 0.84, 78, 1.158, 133, 0.203, 198, 0.011, 199, 0.011, 228, 0.065, 230, 1.198, 235, 1.239, 236, 1.37, 240, 1.914, 241, 1.564, 597, 1.788, 961, 4.032, 974, 3.891, 983, 1.788, 1009, 3.355, 1025, 3.54, 1027, 5.137, 1062, 3.355, 1063, 3.191, 1070, 4.528, 1086, 5.971, 1087, 5.495, 1088, 5.971, 1776, 4, 1777, 5.3, 1778, 5.115, 1779, 5.115]], ["title/classes/Parameter.html", [134, 0.598, 1093, 2.187]], ["body/classes/Parameter.html", [3, 0.076, 4, 0.068, 5, 0.068, 9, 0.108, 22, 0.092, 23, 0.24, 24, 1.426, 26, 0.847, 29, 1.957, 32, 0.793, 38, 1.156, 42, 1.209, 43, 0.013, 44, 1.208, 45, 0.198, 46, 0.314, 67, 0.364, 68, 1.475, 87, 2.436, 88, 3.112, 90, 1.859, 112, 0.647, 113, 1.831, 116, 0.216, 133, 0.076, 134, 0.945, 139, 2.239, 160, 3.056, 163, 1.579, 165, 0.936, 175, 1.691, 177, 0.67, 198, 0.005, 199, 0.005, 215, 3.336, 228, 0.024, 242, 0.985, 244, 0.647, 245, 1.43, 247, 0.67, 249, 1.48, 253, 1, 254, 0.53, 255, 0.825, 256, 1.426, 263, 0.768, 264, 1.588, 265, 1.07, 268, 1.145, 278, 1.256, 282, 0.742, 285, 1.42, 286, 1.42, 290, 2.652, 292, 2.139, 359, 1.256, 387, 0.825, 389, 0.825, 394, 1.291, 590, 2.48, 645, 1.139, 661, 2.08, 675, 1.043, 677, 2.596, 694, 1.043, 703, 1.043, 722, 2.862, 732, 0.796, 775, 1.195, 796, 1, 854, 2.49, 855, 1.916, 862, 2.383, 895, 1.995, 1089, 1.195, 1090, 1.326, 1091, 3.172, 1092, 1.195, 1093, 4.155, 1094, 2.383, 1095, 4.61, 1096, 2.506, 1097, 2.57, 1098, 3.02, 1099, 3.734, 1102, 1.326, 1103, 3.957, 1105, 2.645, 1106, 3.957, 1108, 2.118, 1109, 2.118, 1110, 3.695, 1111, 1.326, 1112, 1.326, 1113, 1.326, 1114, 2.645, 1115, 1.326, 1116, 1.326, 1117, 2.118, 1118, 1.326, 1119, 1.82, 1120, 1.326, 1121, 1.326, 1122, 1.326, 1123, 2.118, 1124, 1.326, 1125, 1.326, 1126, 1.326, 1127, 1.326, 1128, 1.908, 1129, 1.326, 1130, 1.326, 1131, 1.195, 1132, 2.118, 1133, 1.326, 1134, 3.02, 1135, 3.02, 1136, 1.326, 1137, 3.838, 1138, 3.579, 1139, 3.838, 1140, 2.118, 1141, 1.326, 1142, 3.52, 1143, 2.645, 1144, 4.284, 1145, 2.645, 1146, 1.326, 1147, 1.326, 1148, 2.118, 1149, 2.118, 1150, 1.326, 1151, 2.118, 1152, 1.195, 1153, 2.645, 1154, 2.118, 1155, 1.326, 1156, 4.144, 1157, 3.838, 1158, 1.326, 1159, 3.02, 1160, 1.326, 1161, 1.326, 1162, 1.326, 1163, 1.326, 1164, 1.326, 1165, 1.326, 1166, 1.195, 1167, 3.02, 1168, 1.326, 1169, 1.326, 1170, 1.326, 1171, 2.118, 1172, 2.118, 1173, 1.326, 1174, 1.326, 1175, 2.645, 1176, 1.256, 1177, 1.326, 1178, 1.326, 1179, 1.326, 1180, 1.326, 1181, 1.326, 1182, 1.326, 1183, 1.326, 1184, 1.326, 1185, 3.301, 1186, 1.326, 1187, 1.326, 1188, 1.326, 1189, 1.326, 1190, 1.195, 1191, 1.326, 1192, 2.118, 1193, 3.02, 1194, 3.02, 1195, 2.118, 1196, 1.326, 1197, 1.326, 1198, 2.645, 1199, 1.326, 1200, 1.326, 1201, 2.645, 1202, 2.645, 1203, 1.326, 1204, 2.118, 1205, 1.326, 1206, 1.326, 1207, 1.326, 1208, 1.326, 1209, 1.326, 1210, 1.326, 1211, 1.326, 1212, 1.326, 1213, 1.326, 1214, 1.326, 1215, 2.118, 1216, 1.326, 1217, 1.256, 1218, 1.326, 1219, 1.326, 1220, 1.326, 1221, 1.326, 1222, 1.326, 1223, 1.326, 1224, 1.326, 1225, 1.326, 1226, 1.326, 1227, 1.326, 1228, 1.326, 1229, 1.326, 1230, 1.326, 1231, 1.326, 1232, 1.326, 1233, 1.326, 1234, 2.711, 1235, 1.326, 1236, 1.326, 1237, 2.118, 1238, 2.645, 1239, 3.52, 1240, 1.326, 1241, 1.326, 1242, 1.326, 1243, 1.326, 1244, 1.326, 1245, 3.838, 1246, 2.645, 1247, 2.118, 1248, 1.326, 1249, 3.301, 1250, 1.326, 1251, 1.326, 1252, 1.326, 1253, 1.326, 1254, 2.862, 1255, 3.52, 1256, 1.326, 1257, 1.326, 1258, 1.326, 1259, 1.326, 1260, 1.326, 1261, 1.326, 1262, 1.326, 1263, 1.326, 1264, 1.326, 1265, 1.326, 1266, 1.326, 1267, 1.326, 1268, 1.326, 1269, 1.326, 1270, 1.326, 1271, 1.326, 1272, 2.118, 1273, 1.326, 1274, 1.326, 1275, 1.326, 1276, 1.326, 1277, 1.326, 1278, 1.326, 1279, 1.326, 1280, 1.326, 1281, 1.326, 1282, 1.326, 1283, 2.118, 1284, 1.326, 1285, 1.326, 1286, 1.326, 1287, 1.326, 1288, 1.326, 1289, 1.326, 1290, 1.326, 1291, 1.326, 1292, 1.326, 1293, 1.326, 1780, 2.218, 1781, 4.424, 1782, 2.218]], ["title/classes/ParameterCodec.html", [134, 0.598, 1119, 2.086]], ["body/classes/ParameterCodec.html", [3, 0.076, 4, 0.068, 5, 0.068, 9, 0.108, 22, 0.092, 24, 1.427, 26, 0.848, 29, 1.56, 32, 0.497, 38, 1.058, 42, 1.295, 43, 0.013, 44, 1.172, 45, 0.19, 46, 0.448, 67, 0.83, 68, 1.476, 87, 2.437, 88, 3.26, 90, 1.85, 113, 1.831, 116, 0.217, 133, 0.076, 134, 0.91, 139, 2.239, 160, 3.056, 163, 1.58, 165, 0.937, 175, 1.691, 177, 0.67, 198, 0.005, 199, 0.005, 215, 3.337, 228, 0.024, 242, 0.993, 244, 0.648, 245, 1.431, 247, 0.67, 249, 1.481, 253, 1.001, 254, 0.531, 255, 0.826, 256, 1.427, 263, 0.769, 264, 1.589, 265, 0.67, 268, 1.146, 278, 1.258, 282, 0.743, 285, 1.421, 286, 1.421, 290, 2.653, 292, 2.14, 359, 2.009, 387, 0.826, 389, 0.826, 394, 1.292, 590, 2.482, 645, 1.14, 661, 2.081, 675, 1.044, 677, 2.598, 694, 1.044, 703, 1.044, 722, 2.864, 732, 1.273, 775, 1.196, 796, 1.001, 854, 1.996, 855, 1.917, 862, 2.385, 895, 1.996, 1089, 1.196, 1090, 1.327, 1091, 2.977, 1092, 1.196, 1093, 4.155, 1094, 2.385, 1095, 4.481, 1096, 2.508, 1098, 2.646, 1099, 3.46, 1102, 1.327, 1103, 3.958, 1105, 2.12, 1106, 3.696, 1108, 2.12, 1109, 2.646, 1110, 3.696, 1111, 2.12, 1112, 2.12, 1113, 2.12, 1114, 3.022, 1115, 2.12, 1116, 2.12, 1117, 2.646, 1118, 2.12, 1119, 2.274, 1120, 2.12, 1121, 1.327, 1122, 2.12, 1123, 2.12, 1124, 2.12, 1125, 1.327, 1126, 2.12, 1127, 1.327, 1128, 1.91, 1129, 1.327, 1130, 1.327, 1131, 1.196, 1132, 2.12, 1133, 1.327, 1134, 2.12, 1135, 2.12, 1136, 1.327, 1137, 3.839, 1138, 3.58, 1139, 3.839, 1140, 2.12, 1141, 1.327, 1142, 3.522, 1143, 2.646, 1144, 4.285, 1145, 2.646, 1146, 1.327, 1147, 1.327, 1148, 2.12, 1149, 2.12, 1150, 1.327, 1151, 2.12, 1152, 1.196, 1153, 2.646, 1154, 2.12, 1155, 1.327, 1156, 4.145, 1157, 3.839, 1158, 1.327, 1159, 3.022, 1160, 1.327, 1161, 1.327, 1162, 1.327, 1163, 1.327, 1164, 1.327, 1165, 1.327, 1166, 1.196, 1167, 3.022, 1168, 1.327, 1169, 1.327, 1170, 1.327, 1171, 2.12, 1172, 2.12, 1173, 1.327, 1174, 1.327, 1175, 2.646, 1176, 1.258, 1177, 1.327, 1178, 1.327, 1179, 1.327, 1180, 1.327, 1181, 1.327, 1182, 1.327, 1183, 1.327, 1184, 1.327, 1185, 3.303, 1186, 1.327, 1187, 1.327, 1188, 1.327, 1189, 1.327, 1190, 1.196, 1191, 1.327, 1192, 2.12, 1193, 3.022, 1194, 3.022, 1195, 2.12, 1196, 1.327, 1197, 1.327, 1198, 2.646, 1199, 1.327, 1200, 1.327, 1201, 2.646, 1202, 2.646, 1203, 1.327, 1204, 2.12, 1205, 1.327, 1206, 1.327, 1207, 1.327, 1208, 1.327, 1209, 1.327, 1210, 1.327, 1211, 1.327, 1212, 1.327, 1213, 1.327, 1214, 1.327, 1215, 2.12, 1216, 1.327, 1217, 1.258, 1218, 1.327, 1219, 1.327, 1220, 1.327, 1221, 1.327, 1222, 1.327, 1223, 1.327, 1224, 1.327, 1225, 1.327, 1226, 1.327, 1227, 1.327, 1228, 1.327, 1229, 1.327, 1230, 1.327, 1231, 1.327, 1232, 1.327, 1233, 1.327, 1234, 2.713, 1235, 1.327, 1236, 1.327, 1237, 2.12, 1238, 2.646, 1239, 3.522, 1240, 1.327, 1241, 1.327, 1242, 1.327, 1243, 1.327, 1244, 1.327, 1245, 3.839, 1246, 2.646, 1247, 2.12, 1248, 1.327, 1249, 3.303, 1250, 1.327, 1251, 1.327, 1252, 1.327, 1253, 1.327, 1254, 2.864, 1255, 3.522, 1256, 1.327, 1257, 1.327, 1258, 1.327, 1259, 1.327, 1260, 1.327, 1261, 1.327, 1262, 1.327, 1263, 1.327, 1264, 1.327, 1265, 1.327, 1266, 1.327, 1267, 1.327, 1268, 1.327, 1269, 1.327, 1270, 1.327, 1271, 1.327, 1272, 2.12, 1273, 1.327, 1274, 1.327, 1275, 1.327, 1276, 1.327, 1277, 1.327, 1278, 1.327, 1279, 1.327, 1280, 1.327, 1281, 1.327, 1282, 1.327, 1283, 2.12, 1284, 1.327, 1285, 1.327, 1286, 1.327, 1287, 1.327, 1288, 1.327, 1289, 1.327, 1290, 1.327, 1291, 1.327, 1292, 1.327, 1293, 1.327, 1783, 3.546, 1784, 3.546, 1785, 3.546, 1786, 3.546, 1787, 2.22, 1788, 2.22, 1789, 2.22, 1790, 2.22]], ["title/interfaces/ParameterOptions.html", [228, 0.044, 1099, 2.187]], ["body/interfaces/ParameterOptions.html", [3, 0.079, 4, 0.071, 5, 0.071, 9, 0.112, 22, 0.095, 23, 0.247, 24, 1.454, 29, 1.585, 32, 0.513, 42, 1.098, 43, 0.013, 44, 0.94, 45, 0.173, 46, 0.457, 68, 1.503, 87, 2.461, 88, 3.146, 90, 1.85, 113, 1.848, 116, 0.224, 133, 0.079, 134, 0.922, 139, 2.249, 160, 3.082, 163, 1.6, 165, 0.961, 175, 1.701, 177, 0.692, 198, 0.006, 199, 0.006, 215, 3.385, 228, 0.025, 230, 0.464, 242, 0.974, 244, 0.669, 245, 1.462, 247, 0.692, 249, 1.513, 253, 1.027, 254, 0.548, 255, 0.853, 256, 1.454, 263, 0.794, 264, 1.624, 265, 0.692, 268, 1.176, 278, 1.299, 282, 0.767, 285, 1.458, 286, 1.458, 290, 2.682, 292, 2.163, 359, 1.299, 387, 0.853, 389, 0.853, 394, 1.32, 590, 2.528, 645, 1.178, 661, 2.126, 675, 1.078, 677, 2.64, 694, 1.078, 703, 1.078, 722, 2.917, 732, 0.823, 775, 1.235, 796, 1.034, 854, 2.532, 855, 1.958, 862, 2.436, 895, 2.039, 1089, 1.235, 1091, 1.235, 1092, 1.235, 1093, 4.153, 1094, 2.436, 1095, 4.545, 1096, 2.562, 1098, 2.704, 1099, 3.605, 1102, 1.371, 1103, 4, 1105, 2.175, 1106, 3.744, 1108, 2.175, 1109, 2.175, 1110, 3.744, 1111, 1.371, 1112, 1.371, 1113, 1.371, 1114, 2.704, 1115, 1.371, 1116, 1.371, 1117, 2.175, 1118, 1.371, 1119, 1.869, 1120, 1.371, 1121, 1.371, 1122, 1.371, 1123, 2.175, 1124, 1.371, 1125, 1.371, 1126, 1.371, 1127, 1.371, 1128, 1.96, 1129, 2.175, 1130, 2.175, 1131, 2.774, 1132, 3.356, 1133, 1.371, 1134, 2.175, 1135, 2.175, 1136, 1.371, 1137, 3.884, 1138, 3.6, 1139, 3.884, 1140, 2.175, 1141, 1.371, 1142, 3.572, 1143, 2.704, 1144, 4.319, 1145, 2.704, 1146, 1.371, 1147, 1.371, 1148, 2.175, 1149, 2.175, 1150, 1.371, 1151, 2.175, 1152, 1.235, 1153, 2.704, 1154, 2.175, 1155, 1.371, 1156, 4.183, 1157, 3.884, 1158, 1.371, 1159, 3.078, 1160, 1.371, 1161, 1.371, 1162, 1.371, 1163, 1.371, 1164, 1.371, 1165, 1.371, 1166, 1.235, 1167, 3.078, 1168, 1.371, 1169, 1.371, 1170, 1.371, 1171, 2.175, 1172, 2.175, 1173, 1.371, 1174, 1.371, 1175, 2.704, 1176, 1.299, 1177, 1.371, 1178, 1.371, 1179, 1.371, 1180, 1.371, 1181, 1.371, 1182, 1.371, 1183, 1.371, 1184, 1.371, 1185, 3.356, 1186, 1.371, 1187, 1.371, 1188, 1.371, 1189, 1.371, 1190, 1.235, 1191, 1.371, 1192, 2.175, 1193, 3.078, 1194, 3.078, 1195, 2.175, 1196, 1.371, 1197, 1.371, 1198, 2.704, 1199, 1.371, 1200, 1.371, 1201, 2.704, 1202, 2.704, 1203, 1.371, 1204, 2.175, 1205, 1.371, 1206, 1.371, 1207, 1.371, 1208, 1.371, 1209, 1.371, 1210, 1.371, 1211, 1.371, 1212, 1.371, 1213, 1.371, 1214, 1.371, 1215, 2.175, 1216, 1.371, 1217, 1.299, 1218, 1.371, 1219, 1.371, 1220, 1.371, 1221, 1.371, 1222, 1.371, 1223, 1.371, 1224, 1.371, 1225, 1.371, 1226, 1.371, 1227, 1.371, 1228, 1.371, 1229, 1.371, 1230, 1.371, 1231, 1.371, 1232, 1.371, 1233, 1.371, 1234, 2.757, 1235, 1.371, 1236, 1.371, 1237, 2.175, 1238, 2.704, 1239, 3.572, 1240, 1.371, 1241, 1.371, 1242, 1.371, 1243, 1.371, 1244, 1.371, 1245, 3.884, 1246, 2.704, 1247, 2.175, 1248, 1.371, 1249, 3.356, 1250, 1.371, 1251, 1.371, 1252, 1.371, 1253, 1.371, 1254, 2.917, 1255, 3.572, 1256, 1.371, 1257, 1.371, 1258, 1.371, 1259, 1.371, 1260, 1.371, 1261, 1.371, 1262, 1.371, 1263, 1.371, 1264, 1.371, 1265, 1.371, 1266, 1.371, 1267, 1.371, 1268, 1.371, 1269, 1.371, 1270, 1.371, 1271, 1.371, 1272, 2.175, 1273, 1.371, 1274, 1.371, 1275, 1.371, 1276, 1.371, 1277, 1.371, 1278, 1.371, 1279, 1.371, 1280, 1.371, 1281, 1.371, 1282, 1.371, 1283, 2.175, 1284, 1.371, 1285, 1.371, 1286, 1.371, 1287, 1.371, 1288, 1.371, 1289, 1.371, 1290, 1.371, 1291, 1.371, 1292, 1.371, 1293, 1.371]], ["title/classes/PathParameter.html", [134, 0.598, 1152, 2.187]], ["body/classes/PathParameter.html", [3, 0.075, 4, 0.068, 5, 0.068, 9, 0.107, 22, 0.091, 23, 0.239, 24, 1.42, 26, 0.842, 29, 1.952, 32, 0.788, 38, 1.228, 42, 1.252, 43, 0.013, 44, 1.236, 45, 0.203, 46, 0.39, 67, 0.578, 68, 1.468, 87, 2.43, 88, 3.103, 90, 1.858, 112, 0.642, 113, 1.827, 116, 0.215, 133, 0.075, 134, 0.907, 139, 2.236, 160, 3.049, 163, 1.574, 165, 0.93, 175, 1.688, 177, 0.664, 198, 0.005, 199, 0.005, 215, 3.324, 228, 0.024, 242, 0.986, 244, 0.642, 245, 1.422, 247, 0.664, 249, 1.472, 253, 0.994, 254, 0.526, 255, 0.819, 256, 1.42, 263, 0.762, 264, 1.58, 265, 0.664, 268, 1.138, 278, 1.246, 282, 0.736, 285, 1.411, 286, 1.411, 290, 2.645, 292, 2.235, 359, 1.246, 387, 0.819, 389, 0.819, 394, 1.285, 590, 2.469, 645, 1.13, 661, 2.364, 675, 1.034, 677, 2.586, 694, 1.655, 696, 2.849, 703, 1.034, 722, 2.849, 732, 0.79, 775, 1.185, 796, 0.992, 854, 1.984, 855, 1.905, 862, 2.37, 895, 1.984, 1089, 1.185, 1090, 1.315, 1091, 2.37, 1092, 1.185, 1093, 4.234, 1094, 2.37, 1095, 4.604, 1096, 3.116, 1097, 2.554, 1098, 3.006, 1099, 3.725, 1101, 3.469, 1102, 1.315, 1103, 3.946, 1105, 2.63, 1106, 3.946, 1108, 2.104, 1109, 2.104, 1110, 3.683, 1111, 1.315, 1112, 1.315, 1113, 1.315, 1114, 2.63, 1115, 1.315, 1116, 1.315, 1117, 2.104, 1118, 1.315, 1119, 1.808, 1120, 1.315, 1121, 1.315, 1122, 1.315, 1123, 2.104, 1124, 1.315, 1125, 1.315, 1126, 1.315, 1127, 1.315, 1128, 1.896, 1129, 1.315, 1130, 1.315, 1131, 1.185, 1132, 2.104, 1133, 1.315, 1134, 2.104, 1135, 2.104, 1136, 1.315, 1137, 3.826, 1138, 3.574, 1139, 3.826, 1140, 2.104, 1141, 1.315, 1142, 3.507, 1143, 2.63, 1144, 4.275, 1145, 2.63, 1146, 1.315, 1147, 1.315, 1148, 2.104, 1149, 2.104, 1150, 1.315, 1151, 2.104, 1152, 1.896, 1153, 2.63, 1154, 2.104, 1155, 2.104, 1156, 4.134, 1157, 3.826, 1158, 1.315, 1159, 3.006, 1160, 1.315, 1161, 1.315, 1162, 1.315, 1163, 1.315, 1164, 1.315, 1165, 1.315, 1166, 1.185, 1167, 3.006, 1168, 1.315, 1169, 1.315, 1170, 1.315, 1171, 2.104, 1172, 2.104, 1173, 1.315, 1174, 1.315, 1175, 2.63, 1176, 1.246, 1177, 1.315, 1178, 1.315, 1179, 1.315, 1180, 1.315, 1181, 1.315, 1182, 1.315, 1183, 1.315, 1184, 1.315, 1185, 3.288, 1186, 1.315, 1187, 1.315, 1188, 1.315, 1189, 1.315, 1190, 1.185, 1191, 1.315, 1192, 2.104, 1193, 3.006, 1194, 3.006, 1195, 2.104, 1196, 1.315, 1197, 1.315, 1198, 2.63, 1199, 1.315, 1200, 1.315, 1201, 2.63, 1202, 2.63, 1203, 1.315, 1204, 2.104, 1205, 1.315, 1206, 1.315, 1207, 1.315, 1208, 1.315, 1209, 1.315, 1210, 1.315, 1211, 1.315, 1212, 1.315, 1213, 1.315, 1214, 1.315, 1215, 2.104, 1216, 1.315, 1217, 1.246, 1218, 1.315, 1219, 1.315, 1220, 1.315, 1221, 1.315, 1222, 1.315, 1223, 1.315, 1224, 1.315, 1225, 1.315, 1226, 1.315, 1227, 1.315, 1228, 1.315, 1229, 1.315, 1230, 1.315, 1231, 1.315, 1232, 1.315, 1233, 1.315, 1234, 2.701, 1235, 1.315, 1236, 1.315, 1237, 2.104, 1238, 2.63, 1239, 3.507, 1240, 1.315, 1241, 1.315, 1242, 1.315, 1243, 1.315, 1244, 1.315, 1245, 3.826, 1246, 2.63, 1247, 2.104, 1248, 1.315, 1249, 3.288, 1250, 1.315, 1251, 1.315, 1252, 1.315, 1253, 1.315, 1254, 2.849, 1255, 3.507, 1256, 1.315, 1257, 1.315, 1258, 1.315, 1259, 1.315, 1260, 1.315, 1261, 1.315, 1262, 1.315, 1263, 1.315, 1264, 1.315, 1265, 1.315, 1266, 1.315, 1267, 1.315, 1268, 1.315, 1269, 1.315, 1270, 1.315, 1271, 1.315, 1272, 2.104, 1273, 1.315, 1274, 1.315, 1275, 1.315, 1276, 1.315, 1277, 1.315, 1278, 1.315, 1279, 1.315, 1280, 1.315, 1281, 1.315, 1282, 1.315, 1283, 2.104, 1284, 1.315, 1285, 1.315, 1286, 1.315, 1287, 1.315, 1288, 1.315, 1289, 1.315, 1290, 1.315, 1291, 1.315, 1292, 1.315, 1293, 1.315, 1791, 2.2, 1792, 2.2, 1793, 2.2]], ["title/components/PhasesComponent.html", [203, 1.146, 409, 1.691]], ["body/components/PhasesComponent.html", [3, 0.068, 4, 0.061, 5, 0.127, 6, 1.261, 9, 0.254, 10, 1.703, 11, 0.347, 12, 1.406, 13, 0.769, 14, 0.898, 19, 0.927, 20, 3.083, 22, 0.082, 23, 0.22, 24, 1.741, 26, 0.777, 29, 1.934, 32, 0.445, 35, 2.556, 36, 2.231, 37, 3.906, 38, 1.237, 40, 1.125, 41, 1.773, 42, 0.928, 43, 0.013, 44, 1.023, 45, 0.202, 46, 0.421, 47, 1.98, 48, 1.016, 49, 2.56, 51, 3.167, 52, 1.693, 53, 1.668, 54, 1.668, 55, 1.749, 56, 1.196, 57, 2.556, 59, 2.836, 61, 2.086, 62, 1.301, 67, 0.779, 68, 1.726, 76, 2.193, 78, 0.804, 82, 4.139, 84, 3.74, 87, 1.703, 90, 1.169, 95, 2.459, 109, 1.569, 112, 0.948, 113, 1.773, 115, 1.569, 116, 0.622, 117, 2.216, 118, 0.461, 120, 1.19, 122, 1.345, 123, 1.444, 125, 0.978, 126, 1.073, 127, 1.261, 133, 0.068, 134, 0.293, 135, 1.676, 136, 0.862, 139, 2.047, 140, 2.33, 141, 2.903, 149, 2.78, 154, 2.33, 155, 3.176, 156, 3.176, 157, 3.176, 158, 3.493, 159, 3.35, 160, 2.263, 161, 1.464, 162, 1.19, 163, 0.509, 164, 0.978, 165, 0.526, 166, 0.936, 167, 2.019, 168, 1.128, 170, 0.936, 177, 0.981, 198, 0.005, 199, 0.005, 201, 1.444, 203, 1.161, 204, 3.533, 211, 2.833, 214, 1.444, 219, 1.345, 221, 1.301, 240, 1.05, 242, 0.773, 254, 0.476, 313, 0.862, 322, 3.686, 340, 1.749, 361, 0.829, 362, 1.527, 363, 0.978, 364, 0.978, 365, 0.978, 366, 0.978, 368, 0.898, 369, 3.421, 370, 3.276, 371, 1.594, 373, 1.594, 376, 3.493, 380, 1.023, 381, 1.023, 382, 2.556, 386, 2.231, 387, 1.209, 388, 0.978, 389, 1.945, 390, 0.978, 391, 0.978, 392, 0.829, 393, 0.978, 394, 1.201, 395, 1.594, 396, 0.798, 397, 0.978, 398, 0.798, 399, 1.876, 400, 0.978, 401, 0.798, 402, 0.978, 403, 0.829, 404, 0.978, 405, 0.829, 406, 1.53, 407, 0.829, 408, 0.978, 409, 1.975, 410, 0.978, 411, 0.829, 412, 0.978, 413, 0.829, 414, 0.978, 415, 0.978, 416, 0.978, 448, 2.836, 449, 1.19, 450, 1.19, 543, 1.19, 550, 1.128, 562, 2.21, 572, 2.836, 597, 1.862, 598, 1.587, 600, 2.833, 602, 2.33, 605, 2.193, 613, 2.176, 626, 2.833, 709, 4.155, 732, 1.166, 739, 2.688, 744, 2.528, 750, 1.84, 755, 1.594, 785, 1.073, 786, 2.437, 788, 1.261, 790, 3.037, 798, 1.19, 799, 2.216, 821, 1.345, 823, 1.345, 834, 2.606, 843, 1.749, 845, 2.56, 855, 1.781, 865, 2.688, 871, 3.37, 887, 1.668, 895, 2.139, 915, 1.569, 948, 1.749, 949, 1.19, 951, 1.128, 954, 1.737, 956, 2.193, 959, 4.559, 961, 1.023, 968, 1.444, 969, 1.261, 974, 3.037, 981, 1.941, 985, 1.345, 998, 2.164, 1000, 1.345, 1074, 3.993, 1075, 3.993, 1076, 3.993, 1077, 3.993, 1078, 3.993, 1079, 4.429, 1080, 3.993, 1081, 4.534, 1082, 3.993, 1083, 3.993, 1084, 3.993, 1085, 3.993, 1131, 1.073, 1138, 2.457, 1298, 2.057, 1299, 1.737, 1302, 3.686, 1305, 3.311, 1309, 1.941, 1310, 1.941, 1311, 1.941, 1312, 1.941, 1322, 2.057, 1324, 2.057, 1325, 3.006, 1326, 1.941, 1327, 1.941, 1328, 2.057, 1329, 2.606, 1333, 1.261, 1334, 1.261, 1335, 1.261, 1336, 3.204, 1343, 1.737, 1344, 1.444, 1345, 1.444, 1346, 3.242, 1347, 1.737, 1350, 2.057, 1351, 2.606, 1352, 2.356, 1353, 2.356, 1354, 2.56, 1355, 1.444, 1356, 3.242, 1357, 2.56, 1358, 1.569, 1359, 1.569, 1360, 1.444, 1361, 1.444, 1371, 1.261, 1379, 2.56, 1477, 2.193, 1490, 1.569, 1497, 2.833, 1510, 4.12, 1517, 3.588, 1522, 2.356, 1527, 2.56, 1528, 2.56, 1535, 1.737, 1549, 2.56, 1558, 2.833, 1566, 2.356, 1570, 1.569, 1571, 1.569, 1590, 1.737, 1592, 1.737, 1593, 1.737, 1594, 1.737, 1595, 1.737, 1596, 1.569, 1608, 1.569, 1623, 1.569, 1627, 2.777, 1635, 1.345, 1679, 1.569, 1721, 2.833, 1777, 1.345, 1778, 2.193, 1779, 1.345, 1794, 1.737, 1795, 3.248, 1796, 3.248, 1797, 3.248, 1798, 3.248, 1799, 2.356, 1800, 3.248, 1801, 3.248, 1802, 4.113, 1803, 3.248, 1804, 3.248, 1805, 3.248, 1806, 3.248, 1807, 3.248, 1808, 3.248, 1809, 3.248, 1810, 2.833, 1811, 1.991, 1812, 1.991, 1813, 3.248, 1814, 1.991, 1815, 3.248, 1816, 3.248, 1817, 3.248, 1818, 3.248, 1819, 1.991, 1820, 3.248, 1821, 1.991, 1822, 4.113, 1823, 3.248, 1824, 3.248, 1825, 1.569, 1826, 1.991, 1827, 1.991, 1828, 1.991, 1829, 1.991, 1830, 1.991, 1831, 1.991, 1832, 1.991, 1833, 1.991, 1834, 1.991, 1835, 1.991, 1836, 3.248, 1837, 1.991, 1838, 1.991, 1839, 1.991, 1840, 1.991, 1841, 1.991, 1842, 1.991, 1843, 1.991, 1844, 3.248, 1845, 3.248, 1846, 3.248, 1847, 4.113, 1848, 1.991, 1849, 3.248, 1850, 3.248, 1851, 3.248, 1852, 1.991, 1853, 1.991, 1854, 1.991, 1855, 3.248, 1856, 3.248, 1857, 2.833, 1858, 3.248, 1859, 1.991, 1860, 1.737, 1861, 4.745, 1862, 1.991, 1863, 3.74, 1864, 1.991, 1865, 1.991, 1866, 1.991, 1867, 1.991, 1868, 1.991, 1869, 3.248, 1870, 3.248, 1871, 3.248, 1872, 1.991, 1873, 1.991, 1874, 3.248, 1875, 1.991, 1876, 1.991, 1877, 4.745, 1878, 4.113, 1879, 1.991, 1880, 3.248, 1881, 1.991, 1882, 1.991, 1883, 1.991, 1884, 1.991, 1885, 3.248, 1886, 3.248, 1887, 3.248, 1888, 4.745, 1889, 3.248, 1890, 3.248, 1891, 1.991, 1892, 3.248, 1893, 3.248, 1894, 1.991, 1895, 1.991, 1896, 3.248, 1897, 3.248]], ["title/injectables/QualityAttributeService.html", [0, 1.004, 34, 2.573]], ["body/injectables/QualityAttributeService.html", [0, 1.423, 2, 1.781, 3, 0.146, 4, 0.132, 5, 0.132, 9, 0.208, 13, 2.222, 14, 2.596, 22, 0.177, 23, 0.391, 24, 1.625, 26, 1.377, 32, 0.957, 34, 3.648, 38, 1.52, 42, 1.273, 43, 0.013, 44, 1.188, 45, 0.242, 46, 0.645, 48, 0.816, 67, 0.946, 90, 0.957, 101, 2.805, 112, 1.249, 116, 0.777, 118, 0.989, 119, 1.592, 130, 1.482, 131, 1.852, 132, 1.714, 133, 0.146, 134, 0.63, 163, 1.663, 165, 2.053, 175, 1.288, 198, 0.009, 199, 0.009, 242, 0.698, 244, 2.032, 245, 2.472, 246, 2.493, 247, 1.292, 249, 1.431, 250, 1.852, 251, 2.397, 252, 1.852, 253, 2.051, 254, 1.903, 256, 1.965, 265, 1.292, 268, 2.472, 282, 2.601, 291, 1.852, 292, 1.861, 300, 3.273, 304, 2.304, 328, 4.41, 330, 4.123, 340, 2.304, 545, 4.41, 661, 2.707, 662, 3.944, 663, 4.395, 666, 3.648, 669, 3.648, 671, 2.71, 675, 3.655, 676, 5.376, 677, 3.273, 678, 3.888, 679, 4.701, 680, 4.701, 681, 4.701, 682, 3.442, 685, 3.888, 686, 3.648, 693, 3.888, 694, 2.707, 696, 2.423, 697, 2.889, 698, 2.71, 701, 2.889, 703, 2.011, 705, 2.889, 706, 2.889, 990, 2.423, 1017, 2.557, 1036, 3.888, 1055, 5.164, 1056, 4.177, 1060, 5.023, 1341, 3.888, 1799, 4.177, 1810, 5.023, 1898, 5.271, 1899, 3.732, 1900, 5.758, 1901, 6.962, 1902, 5.758, 1903, 6.508, 1904, 6.028, 1905, 6.962, 1906, 4.278, 1907, 5.758, 1908, 4.278, 1909, 5.758, 1910, 4.278, 1911, 4.278, 1912, 4.538, 1913, 4.278, 1914, 4.278]], ["title/injectables/QualityPhaseService.html", [0, 1.004, 322, 2.427]], ["body/injectables/QualityPhaseService.html", [0, 1.427, 2, 1.788, 3, 0.147, 4, 0.132, 5, 0.132, 9, 0.209, 19, 0.671, 22, 0.178, 23, 0.392, 24, 1.63, 26, 1.381, 32, 0.961, 38, 1.522, 42, 1.275, 43, 0.013, 44, 1.191, 45, 0.243, 46, 0.645, 67, 0.948, 76, 3.899, 90, 0.961, 101, 2.809, 103, 2.149, 112, 1.254, 116, 0.777, 118, 0.994, 119, 1.599, 130, 1.488, 131, 1.86, 132, 1.721, 133, 0.147, 134, 0.632, 163, 1.666, 165, 2.055, 175, 1.292, 198, 0.009, 199, 0.009, 200, 3.386, 242, 0.699, 244, 2.036, 245, 2.474, 246, 2.5, 247, 1.297, 249, 1.437, 250, 1.86, 251, 2.404, 252, 1.86, 253, 2.054, 254, 1.905, 256, 1.969, 265, 1.297, 268, 2.474, 282, 2.604, 291, 1.86, 292, 1.866, 294, 1.932, 300, 3.278, 304, 2.314, 322, 3.451, 328, 4.418, 330, 4.132, 340, 2.314, 545, 4.418, 597, 1.743, 661, 2.714, 662, 3.95, 663, 4.404, 666, 3.658, 669, 3.658, 671, 2.721, 675, 3.658, 676, 5.38, 677, 3.278, 678, 3.899, 679, 4.709, 680, 4.709, 681, 4.709, 682, 3.451, 685, 3.899, 686, 3.658, 693, 3.899, 694, 2.714, 696, 2.433, 697, 2.901, 698, 2.721, 701, 2.901, 703, 2.019, 705, 2.901, 706, 2.901, 871, 2.714, 990, 2.433, 1021, 2.568, 1038, 3.899, 1048, 5.169, 1049, 4.189, 1054, 5.037, 1339, 4.189, 1412, 5.037, 1898, 5.278, 1912, 4.551, 1915, 6.522, 1916, 6.034, 1917, 6.974, 1918, 4.296, 1919, 5.774, 1920, 4.296, 1921, 5.774, 1922, 4.296, 1923, 4.296, 1924, 4.296, 1925, 4.296]], ["title/injectables/QualitySaveLogService.html", [0, 1.004, 323, 2.742]], ["body/injectables/QualitySaveLogService.html", [0, 0.969, 2, 1.05, 3, 0.086, 4, 0.078, 5, 0.078, 9, 0.123, 11, 0.418, 22, 0.104, 23, 0.266, 24, 1.107, 26, 0.938, 31, 4.368, 32, 0.564, 38, 1.564, 42, 1.348, 43, 0.013, 44, 1.259, 45, 0.25, 46, 0.637, 67, 1.103, 78, 0.767, 90, 1.214, 101, 2.964, 112, 1.584, 116, 0.749, 118, 0.583, 119, 0.939, 130, 1.359, 131, 1.092, 132, 1.011, 133, 0.086, 134, 0.371, 163, 1.863, 165, 2.157, 175, 1.502, 198, 0.006, 199, 0.006, 229, 4.385, 232, 4.48, 233, 3.941, 240, 1.267, 242, 0.712, 243, 3.074, 244, 1.584, 245, 2.587, 246, 2.907, 247, 0.762, 249, 0.844, 250, 1.092, 251, 2.447, 252, 1.092, 253, 1.659, 254, 1.961, 256, 2.15, 258, 1.703, 265, 0.762, 268, 2.613, 282, 2.732, 291, 2.349, 292, 2.17, 299, 3.421, 300, 2.551, 304, 1.359, 323, 2.648, 328, 4.826, 330, 4.619, 340, 1.359, 545, 4.826, 618, 3.421, 661, 1.843, 662, 3.074, 663, 4.923, 666, 2.484, 669, 2.484, 671, 1.598, 675, 3.839, 676, 5.596, 677, 3.581, 678, 4.533, 679, 5.144, 680, 5.144, 681, 5.144, 682, 4.013, 685, 4.533, 686, 4.253, 693, 4.533, 694, 3.156, 696, 1.429, 697, 1.703, 698, 1.598, 701, 1.703, 703, 2.551, 705, 3.664, 706, 3.664, 754, 1.925, 846, 2.648, 971, 4.385, 978, 5.002, 980, 3.421, 990, 1.429, 1025, 1.508, 1040, 2.648, 1041, 4.385, 1042, 2.845, 1047, 3.421, 1336, 2.648, 1394, 4.656, 1898, 5.422, 1912, 5.292, 1926, 2.2, 1927, 3.921, 1928, 4.81, 1929, 4.81, 1930, 4.81, 1931, 4.81, 1932, 5.426, 1933, 5.426, 1934, 5.118, 1935, 5.426, 1936, 5.426, 1937, 2.522, 1938, 3.921, 1939, 2.522, 1940, 3.921, 1941, 2.522, 1942, 3.921, 1943, 2.522, 1944, 3.921, 1945, 2.522, 1946, 3.921, 1947, 2.522, 1948, 3.921, 1949, 2.522, 1950, 3.921, 1951, 4.385, 1952, 2.522, 1953, 3.921, 1954, 2.522, 1955, 2.522, 1956, 2.522, 1957, 2.522, 1958, 3.421, 1959, 2.522, 1960, 2.522, 1961, 2.522, 1962, 2.522, 1963, 2.522, 1964, 2.522, 1965, 2.522, 1966, 2.522, 1967, 2.522]], ["title/interfaces/QualityattributeModel.html", [70, 2.3, 228, 0.044]], ["body/interfaces/QualityattributeModel.html", [3, 0.169, 4, 0.152, 5, 0.152, 9, 0.239, 11, 0.744, 19, 0.905, 22, 0.203, 23, 0.429, 43, 0.013, 45, 0.255, 46, 0.756, 52, 2.105, 70, 3.577, 72, 3.324, 73, 2.253, 74, 3.581, 88, 2.314, 90, 1.413, 128, 4.001, 129, 3.324, 133, 0.239, 141, 3.61, 142, 4.659, 143, 4.659, 144, 4.659, 145, 4.659, 146, 4.659, 147, 4.659, 148, 4.659, 149, 3.457, 150, 4.659, 151, 4.659, 152, 4.659, 198, 0.01, 199, 0.01, 228, 0.076, 230, 0.996, 235, 1.459, 236, 1.612, 241, 1.841, 242, 1.022, 358, 4.167, 597, 1.486, 598, 2.798, 983, 1.486, 1367, 4.417, 1368, 4.966, 1369, 4.167, 1370, 5.495, 1371, 4.417]], ["title/interfaces/QualityphaseModel.html", [59, 2.427, 228, 0.044]], ["body/interfaces/QualityphaseModel.html", [3, 0.166, 4, 0.149, 5, 0.149, 9, 0.235, 11, 0.517, 19, 0.726, 20, 2.276, 22, 0.2, 23, 0.424, 43, 0.013, 45, 0.259, 46, 0.764, 52, 1.462, 59, 3.735, 133, 0.166, 141, 3.588, 149, 3.436, 198, 0.01, 199, 0.01, 228, 0.053, 230, 0.979, 235, 1.013, 236, 1.12, 241, 1.279, 242, 1.011, 358, 4.631, 598, 2.858, 709, 4.63, 790, 3.754, 974, 3.754, 983, 1.462, 998, 1.869, 1074, 4.935, 1075, 4.935, 1076, 4.935, 1077, 4.935, 1078, 4.935, 1079, 4.935, 1080, 4.935, 1081, 4.935, 1082, 4.935, 1083, 4.935, 1084, 4.935, 1085, 4.935, 1367, 3.068, 1369, 4.631, 1863, 6.106, 1968, 4.224, 1969, 7.308]], ["title/interfaces/QualitysavelogModel.html", [228, 0.044, 243, 2.3]], ["body/interfaces/QualitysavelogModel.html", [3, 0.201, 4, 0.181, 5, 0.181, 9, 0.286, 11, 0.627, 19, 0.819, 22, 0.243, 23, 0.478, 43, 0.013, 45, 0.246, 46, 0.744, 52, 1.773, 73, 1.898, 133, 0.201, 198, 0.011, 199, 0.011, 228, 0.064, 230, 1.188, 235, 1.229, 236, 1.358, 240, 1.898, 241, 1.551, 242, 0.985, 243, 3.991, 358, 4.511, 598, 2.719, 974, 4.02, 983, 1.773, 1070, 4.678, 1086, 6.169, 1087, 5.677, 1088, 6.169, 1367, 3.72, 1369, 4.511, 1970, 5.122]], ["title/classes/QueryParameter.html", [134, 0.598, 1190, 2.187]], ["body/classes/QueryParameter.html", [3, 0.075, 4, 0.068, 5, 0.068, 9, 0.107, 22, 0.091, 23, 0.239, 24, 1.42, 26, 0.842, 29, 1.953, 32, 0.788, 38, 1.228, 42, 1.252, 43, 0.013, 44, 1.236, 45, 0.203, 46, 0.39, 67, 0.578, 68, 1.469, 87, 2.431, 88, 3.104, 90, 1.858, 112, 0.643, 113, 1.827, 116, 0.215, 133, 0.075, 134, 0.907, 139, 2.237, 160, 3.049, 163, 1.636, 165, 0.93, 175, 1.688, 177, 0.665, 198, 0.005, 199, 0.005, 215, 3.325, 228, 0.024, 242, 0.98, 244, 0.643, 245, 1.423, 247, 0.665, 249, 1.473, 253, 0.994, 254, 0.526, 255, 0.819, 256, 1.42, 263, 0.763, 264, 1.58, 265, 0.665, 268, 1.138, 278, 1.247, 282, 0.736, 285, 1.411, 286, 1.411, 290, 2.646, 292, 2.134, 359, 1.247, 387, 0.819, 389, 0.819, 394, 1.285, 590, 2.47, 645, 1.131, 661, 2.365, 675, 1.035, 677, 2.587, 694, 1.035, 696, 2.85, 703, 1.035, 722, 2.85, 732, 0.79, 775, 1.186, 796, 0.992, 854, 1.985, 855, 1.906, 862, 2.71, 895, 1.985, 1089, 1.186, 1090, 1.316, 1091, 2.371, 1092, 1.186, 1093, 4.234, 1094, 2.371, 1095, 4.604, 1096, 3.117, 1097, 2.555, 1098, 3.007, 1099, 3.726, 1101, 3.47, 1102, 1.316, 1103, 3.947, 1105, 2.631, 1106, 3.947, 1107, 1.92, 1108, 2.105, 1109, 2.105, 1110, 4.048, 1111, 1.316, 1112, 1.316, 1113, 1.316, 1114, 2.631, 1115, 1.316, 1116, 1.316, 1117, 2.105, 1118, 1.316, 1119, 1.809, 1120, 1.316, 1121, 1.316, 1122, 1.316, 1123, 2.105, 1124, 1.316, 1125, 1.316, 1126, 1.316, 1127, 1.316, 1128, 1.897, 1129, 1.316, 1130, 1.316, 1131, 1.186, 1132, 2.105, 1133, 1.316, 1134, 2.105, 1135, 2.105, 1136, 1.316, 1137, 3.827, 1138, 3.574, 1139, 3.827, 1140, 2.105, 1141, 1.316, 1142, 3.508, 1143, 2.631, 1144, 4.276, 1145, 2.631, 1146, 1.316, 1147, 1.316, 1148, 2.105, 1149, 2.105, 1150, 1.316, 1151, 2.105, 1152, 1.186, 1153, 2.631, 1154, 2.105, 1155, 1.316, 1156, 4.135, 1157, 3.827, 1158, 1.316, 1159, 3.007, 1160, 1.316, 1161, 1.316, 1162, 1.316, 1163, 1.316, 1164, 1.316, 1165, 1.316, 1166, 1.186, 1167, 3.007, 1168, 1.316, 1169, 1.316, 1170, 1.316, 1171, 2.105, 1172, 2.105, 1173, 1.316, 1174, 1.316, 1175, 2.631, 1176, 1.247, 1177, 1.316, 1178, 1.316, 1179, 1.316, 1180, 1.316, 1181, 1.316, 1182, 1.316, 1183, 1.316, 1184, 1.316, 1185, 3.289, 1186, 1.316, 1187, 1.316, 1188, 1.316, 1189, 1.316, 1190, 1.897, 1191, 2.105, 1192, 2.105, 1193, 3.007, 1194, 3.007, 1195, 2.105, 1196, 1.316, 1197, 1.316, 1198, 2.631, 1199, 1.316, 1200, 1.316, 1201, 2.631, 1202, 2.631, 1203, 1.316, 1204, 2.105, 1205, 1.316, 1206, 1.316, 1207, 1.316, 1208, 1.316, 1209, 1.316, 1210, 1.316, 1211, 1.316, 1212, 1.316, 1213, 1.316, 1214, 1.316, 1215, 2.105, 1216, 1.316, 1217, 1.247, 1218, 1.316, 1219, 1.316, 1220, 1.316, 1221, 1.316, 1222, 1.316, 1223, 1.316, 1224, 1.316, 1225, 1.316, 1226, 1.316, 1227, 1.316, 1228, 1.316, 1229, 1.316, 1230, 1.316, 1231, 1.316, 1232, 1.316, 1233, 1.316, 1234, 2.701, 1235, 1.316, 1236, 1.316, 1237, 2.105, 1238, 2.631, 1239, 3.508, 1240, 1.316, 1241, 1.316, 1242, 1.316, 1243, 1.316, 1244, 1.316, 1245, 3.827, 1246, 2.631, 1247, 2.105, 1248, 1.316, 1249, 3.289, 1250, 1.316, 1251, 1.316, 1252, 1.316, 1253, 1.316, 1254, 2.85, 1255, 3.508, 1256, 1.316, 1257, 1.316, 1258, 1.316, 1259, 1.316, 1260, 1.316, 1261, 1.316, 1262, 1.316, 1263, 1.316, 1264, 1.316, 1265, 1.316, 1266, 1.316, 1267, 1.316, 1268, 1.316, 1269, 1.316, 1270, 1.316, 1271, 1.316, 1272, 2.105, 1273, 1.316, 1274, 1.316, 1275, 1.316, 1276, 1.316, 1277, 1.316, 1278, 1.316, 1279, 1.316, 1280, 1.316, 1281, 1.316, 1282, 1.316, 1283, 2.105, 1284, 1.316, 1285, 1.316, 1286, 1.316, 1287, 1.316, 1288, 1.316, 1289, 1.316, 1290, 1.316, 1291, 1.316, 1292, 1.316, 1293, 1.316, 1971, 2.201, 1972, 2.201]], ["title/classes/RequestBuilder.html", [134, 0.598, 255, 1.511]], ["body/classes/RequestBuilder.html", [3, 0.069, 4, 0.062, 5, 0.062, 9, 0.098, 22, 0.083, 23, 0.223, 24, 1.941, 26, 0.785, 29, 1.903, 32, 0.734, 38, 1.504, 42, 1.406, 43, 0.013, 44, 1.296, 45, 0.23, 46, 0.568, 67, 0.927, 68, 1.809, 87, 2.365, 88, 3.012, 90, 1.858, 112, 1.396, 113, 1.875, 116, 0.197, 133, 0.069, 134, 0.875, 139, 2.21, 160, 2.977, 163, 1.519, 165, 1.39, 175, 1.659, 177, 0.609, 198, 0.005, 199, 0.005, 215, 3.195, 228, 0.022, 242, 0.994, 244, 0.589, 245, 1.341, 247, 0.609, 249, 1.887, 253, 1.172, 254, 0.482, 255, 1.222, 256, 1.486, 263, 1.657, 264, 1.49, 265, 0.609, 268, 1.061, 278, 1.143, 282, 1.098, 285, 1.315, 286, 1.315, 290, 2.568, 292, 2.222, 359, 1.143, 387, 0.751, 389, 0.751, 394, 1.212, 590, 2.348, 645, 1.686, 661, 1.951, 675, 2.474, 677, 2.474, 682, 2.859, 694, 0.948, 703, 0.948, 722, 3.511, 732, 0.724, 766, 2.217, 775, 1.087, 796, 0.91, 854, 1.871, 855, 1.797, 862, 3.039, 895, 1.871, 1089, 1.087, 1090, 1.206, 1091, 3.918, 1092, 1.087, 1093, 4.113, 1094, 3.039, 1095, 4.615, 1096, 2.351, 1098, 2.481, 1099, 3.823, 1102, 1.206, 1103, 3.831, 1105, 1.962, 1106, 3.554, 1108, 2.481, 1109, 1.962, 1110, 3.554, 1111, 1.206, 1112, 1.206, 1113, 1.206, 1114, 2.481, 1115, 1.206, 1116, 1.206, 1117, 1.962, 1118, 1.206, 1119, 1.686, 1120, 1.206, 1121, 1.206, 1122, 1.206, 1123, 1.962, 1124, 1.206, 1125, 1.206, 1126, 1.206, 1127, 1.206, 1128, 1.768, 1129, 1.206, 1130, 1.206, 1131, 1.087, 1132, 1.962, 1133, 1.206, 1134, 1.962, 1135, 1.962, 1136, 1.206, 1137, 3.705, 1138, 3.542, 1139, 3.705, 1140, 1.962, 1141, 1.206, 1142, 3.372, 1143, 2.481, 1144, 4.18, 1145, 2.481, 1146, 1.206, 1147, 1.206, 1148, 1.962, 1149, 1.962, 1150, 1.206, 1151, 1.962, 1152, 1.087, 1153, 2.481, 1154, 1.962, 1155, 1.206, 1156, 4.03, 1157, 3.705, 1158, 1.206, 1159, 2.859, 1160, 1.206, 1161, 1.206, 1162, 1.206, 1163, 1.206, 1164, 1.206, 1165, 1.206, 1166, 1.087, 1167, 2.859, 1168, 1.206, 1169, 1.206, 1170, 1.206, 1171, 1.962, 1172, 1.962, 1173, 1.206, 1174, 1.206, 1175, 2.481, 1176, 1.143, 1177, 1.206, 1178, 1.206, 1179, 1.206, 1180, 1.206, 1181, 1.206, 1182, 1.206, 1183, 1.206, 1184, 1.206, 1185, 3.146, 1186, 1.206, 1187, 1.206, 1188, 1.206, 1189, 1.206, 1190, 1.087, 1191, 1.206, 1192, 1.962, 1193, 2.859, 1194, 2.859, 1195, 1.962, 1196, 1.206, 1197, 1.206, 1198, 2.481, 1199, 1.206, 1200, 1.206, 1201, 2.481, 1202, 2.481, 1203, 1.206, 1204, 1.962, 1205, 1.206, 1206, 1.206, 1207, 1.206, 1208, 1.206, 1209, 1.206, 1210, 1.206, 1211, 1.206, 1212, 1.206, 1213, 1.206, 1214, 1.206, 1215, 1.962, 1216, 1.962, 1217, 2.709, 1218, 1.962, 1219, 2.481, 1220, 2.481, 1221, 2.481, 1222, 2.481, 1223, 2.481, 1224, 3.146, 1225, 1.962, 1226, 1.206, 1227, 1.206, 1228, 1.962, 1229, 1.206, 1230, 1.206, 1231, 1.962, 1232, 1.206, 1233, 1.206, 1234, 2.919, 1235, 1.962, 1236, 1.962, 1237, 2.859, 1238, 2.481, 1239, 3.372, 1240, 1.206, 1241, 1.206, 1242, 1.206, 1243, 1.206, 1244, 1.206, 1245, 3.705, 1246, 2.481, 1247, 1.962, 1248, 1.206, 1249, 3.146, 1250, 1.206, 1251, 1.206, 1252, 1.206, 1253, 1.206, 1254, 2.709, 1255, 3.372, 1256, 1.206, 1257, 1.206, 1258, 1.206, 1259, 1.962, 1260, 1.206, 1261, 1.962, 1262, 1.962, 1263, 1.962, 1264, 1.206, 1265, 1.206, 1266, 1.206, 1267, 1.206, 1268, 1.206, 1269, 1.206, 1270, 1.206, 1271, 1.206, 1272, 1.962, 1273, 1.206, 1274, 1.206, 1275, 1.206, 1276, 1.206, 1277, 1.206, 1278, 1.206, 1279, 1.206, 1280, 1.206, 1281, 1.206, 1282, 1.206, 1283, 1.962, 1284, 1.206, 1285, 1.206, 1286, 1.206, 1287, 1.206, 1288, 1.206, 1289, 1.206, 1290, 1.206, 1291, 1.206, 1292, 1.206, 1293, 1.206, 1973, 3.283, 1974, 2.018, 1975, 3.283, 1976, 2.018, 1977, 2.018, 1978, 2.018, 1979, 2.018, 1980, 2.018, 1981, 2.018, 1982, 2.018, 1983, 2.018, 1984, 2.018, 1985, 1.76, 1986, 2.018, 1987, 2.018, 1988, 2.018, 1989, 2.018]], ["title/pipes/SafePipe.html", [287, 1.758, 422, 2.742]], ["body/pipes/SafePipe.html", [3, 0.183, 4, 0.164, 5, 0.164, 9, 0.323, 10, 2.596, 11, 0.808, 12, 3.132, 13, 2.058, 19, 0.905, 26, 1.275, 29, 1.875, 38, 1.116, 40, 1.847, 41, 1.408, 42, 1.043, 43, 0.013, 44, 1.32, 45, 0.164, 46, 0.473, 48, 0.942, 56, 1.576, 61, 2.471, 67, 1.091, 73, 2.146, 99, 3.261, 116, 0.648, 118, 1.233, 133, 0.183, 134, 0.785, 135, 1.697, 136, 2.309, 175, 1.193, 198, 0.01, 199, 0.01, 242, 0.944, 287, 2.876, 368, 2.404, 386, 3.661, 422, 4.485, 428, 4.203, 429, 3.02, 562, 2.301, 732, 1.914, 998, 2.563, 1131, 3.896, 1138, 3.122, 1317, 4.818, 1481, 3.378, 1537, 6.604, 1538, 6.259, 1699, 5.793, 1756, 4.203, 1766, 5.235, 1771, 5.793, 1990, 5.793, 1991, 4.651, 1992, 7.233, 1993, 6.641, 1994, 6.641, 1995, 5.332, 1996, 7.571, 1997, 6.641, 1998, 6.641, 1999, 5.332, 2000, 6.641, 2001, 6.641, 2002, 5.332, 2003, 5.332]], ["title/components/SidenavComponent.html", [203, 1.146, 411, 1.691]], ["body/components/SidenavComponent.html", [3, 0.123, 4, 0.11, 5, 0.11, 9, 0.314, 10, 2.318, 11, 0.689, 12, 2.797, 19, 0.954, 22, 0.148, 24, 1.014, 26, 1.22, 29, 2.001, 32, 0.803, 38, 1.241, 40, 1.767, 41, 1.347, 42, 0.702, 43, 0.013, 44, 1.083, 45, 0.11, 46, 0.319, 47, 1.54, 48, 1.09, 51, 3.318, 52, 1.95, 56, 1.032, 61, 2.403, 62, 2.044, 67, 0.838, 68, 1.885, 78, 1.521, 79, 5.091, 89, 3.047, 95, 3.049, 112, 1.489, 116, 0.63, 118, 0.83, 133, 0.123, 134, 0.529, 135, 1.303, 136, 1.555, 139, 1.44, 161, 2.912, 198, 0.008, 199, 0.008, 203, 1.675, 221, 2.588, 240, 1.649, 241, 1.347, 294, 1.706, 313, 1.555, 361, 1.495, 362, 2.398, 363, 1.763, 364, 1.763, 365, 1.763, 366, 1.763, 368, 1.619, 369, 3.888, 370, 3.723, 371, 2.504, 373, 2.504, 386, 2.398, 387, 1.898, 388, 1.763, 389, 2.403, 390, 1.763, 391, 1.763, 392, 1.495, 393, 1.763, 394, 1.732, 395, 2.504, 396, 1.439, 397, 1.763, 398, 1.439, 399, 1.831, 400, 1.763, 401, 1.439, 402, 1.763, 403, 1.495, 404, 1.763, 405, 2.124, 406, 3.054, 407, 1.495, 408, 1.763, 409, 1.495, 410, 1.763, 411, 2.689, 412, 1.763, 413, 1.495, 414, 1.763, 415, 1.763, 416, 1.763, 454, 2.275, 485, 2.425, 486, 2.605, 536, 1.934, 553, 3.231, 555, 1.934, 573, 4.021, 574, 3.861, 586, 3.7, 605, 3.444, 617, 4.092, 729, 5.191, 744, 2.3, 761, 4.362, 773, 3.444, 781, 4.092, 785, 1.934, 786, 3.047, 793, 3.231, 798, 2.146, 799, 3.675, 801, 2.748, 804, 2.275, 846, 3.444, 865, 2.889, 866, 4.449, 948, 2.748, 949, 2.146, 950, 3.231, 951, 3.361, 961, 1.844, 962, 2.275, 988, 3.861, 1166, 2.748, 1302, 4.358, 1361, 2.605, 1400, 5.091, 1463, 4.021, 1464, 4.021, 1465, 5.091, 1468, 5.587, 1477, 2.425, 1479, 3.444, 1502, 3.444, 1560, 3.7, 1618, 2.605, 1627, 2.425, 1634, 2.83, 1635, 2.425, 1638, 2.83, 1649, 2.83, 1674, 2.83, 1708, 4.021, 1709, 4.021, 1720, 5.634, 1727, 4.449, 1734, 4.676, 1825, 2.83, 2004, 3.132, 2005, 6.459, 2006, 5.951, 2007, 6.459, 2008, 5.101, 2009, 5.932, 2010, 5.101, 2011, 5.634, 2012, 5.634, 2013, 3.591, 2014, 3.591, 2015, 5.101, 2016, 5.101, 2017, 5.101, 2018, 5.101, 2019, 3.591, 2020, 5.634, 2021, 6.183, 2022, 6.183, 2023, 5.634, 2024, 3.591, 2025, 4.449, 2026, 4.449, 2027, 4.449, 2028, 4.449, 2029, 4.449, 2030, 3.132, 2031, 3.591, 2032, 3.132, 2033, 3.591, 2034, 3.132, 2035, 3.132]], ["title/injectables/ThemeService.html", [0, 1.004, 1301, 2.742]], ["body/injectables/ThemeService.html", [0, 1.66, 2, 2.261, 3, 0.186, 4, 0.167, 5, 0.167, 9, 0.327, 11, 0.813, 19, 0.781, 22, 0.224, 26, 1.606, 29, 2.059, 32, 1.632, 38, 1.405, 40, 2.327, 42, 1.062, 43, 0.013, 44, 0.991, 45, 0.167, 46, 0.482, 47, 2.028, 48, 0.952, 56, 1.359, 61, 2.499, 67, 0.892, 68, 1.585, 78, 1.49, 112, 1.961, 116, 0.53, 118, 1.256, 131, 2.351, 132, 2.176, 133, 0.186, 134, 0.799, 135, 1.387, 198, 0.01, 199, 0.01, 220, 4.015, 585, 5.787, 588, 5.295, 592, 5.295, 613, 2.796, 658, 5.859, 659, 6.172, 744, 3.028, 748, 5.145, 849, 6.006, 854, 3.288, 855, 2.908, 857, 5.295, 869, 4.255, 895, 3.028, 1301, 4.536, 1379, 5.295, 1522, 4.873, 1566, 4.873, 1799, 4.873, 2036, 4.737, 2037, 5.859, 2038, 5.43, 2039, 6.717, 2040, 5.43, 2041, 6.717, 2042, 6.717]], ["title/components/ToolbarComponent.html", [203, 1.146, 413, 1.691]], ["body/components/ToolbarComponent.html", [3, 0.075, 4, 0.067, 5, 0.067, 9, 0.267, 10, 1.802, 11, 0.536, 12, 2.174, 13, 1.355, 19, 0.935, 22, 0.091, 23, 0.238, 24, 1.737, 26, 0.84, 29, 2.277, 32, 0.491, 35, 2.365, 36, 2.36, 38, 1.534, 40, 1.216, 41, 1.548, 42, 0.859, 43, 0.013, 44, 1.003, 45, 0.213, 46, 0.39, 47, 2.042, 48, 1.109, 51, 3.284, 52, 1.769, 53, 1.804, 54, 1.804, 55, 1.891, 56, 1.015, 61, 2.517, 62, 1.407, 65, 2.371, 67, 0.962, 68, 2.086, 74, 3.01, 76, 4.318, 78, 1.514, 85, 3.063, 89, 3.161, 90, 1.311, 91, 4.379, 102, 2.547, 112, 1.866, 113, 0.927, 116, 0.643, 117, 2.365, 118, 0.507, 125, 1.077, 126, 1.181, 133, 0.075, 134, 0.323, 135, 1.572, 136, 0.95, 139, 0.991, 161, 1.583, 167, 2.156, 198, 0.005, 199, 0.005, 203, 1.55, 204, 2.704, 220, 1.311, 235, 0.735, 239, 3.185, 240, 1.135, 241, 0.927, 242, 0.837, 273, 0.989, 294, 1.679, 313, 0.95, 361, 0.913, 362, 1.651, 363, 2.156, 364, 1.077, 365, 1.077, 366, 1.077, 368, 0.989, 369, 3.508, 370, 3.359, 371, 1.724, 373, 1.724, 378, 1.591, 382, 3.156, 383, 4.379, 386, 2.36, 387, 1.307, 388, 1.077, 389, 1.868, 390, 1.077, 391, 1.077, 392, 0.913, 393, 1.077, 394, 1.603, 395, 1.724, 396, 0.879, 397, 1.077, 398, 0.879, 399, 1.26, 400, 1.077, 401, 0.879, 402, 1.077, 403, 0.913, 404, 1.077, 405, 1.462, 406, 2.695, 407, 0.913, 408, 1.077, 409, 0.913, 410, 1.077, 411, 0.913, 412, 1.077, 413, 2.09, 414, 2.696, 415, 1.077, 416, 1.077, 454, 1.389, 462, 1.913, 463, 3.83, 485, 1.481, 486, 1.591, 534, 2.371, 536, 1.181, 537, 1.913, 550, 1.242, 555, 1.181, 562, 1.216, 574, 3.001, 581, 3.642, 585, 4.464, 586, 2.547, 588, 1.729, 592, 1.729, 597, 1.06, 605, 3.957, 606, 3.063, 607, 2.371, 608, 1.591, 613, 2.09, 617, 3.712, 659, 2.768, 729, 4.568, 732, 1.26, 739, 2.844, 744, 2.642, 748, 2.371, 761, 2.371, 773, 2.371, 780, 2.547, 781, 3.18, 785, 3.156, 786, 2.821, 793, 2.224, 796, 0.989, 797, 2.625, 798, 1.311, 799, 2.958, 801, 1.181, 802, 1.481, 803, 2.371, 804, 1.389, 806, 1.481, 816, 3.83, 817, 3.83, 819, 4.379, 820, 1.729, 822, 5.368, 823, 2.965, 824, 4.379, 838, 3.063, 844, 2.547, 845, 2.768, 846, 2.371, 849, 3.957, 851, 3.063, 852, 2.768, 853, 4.379, 854, 1.583, 855, 1.52, 857, 1.729, 860, 3.063, 862, 2.704, 863, 4.379, 869, 2.224, 870, 3.063, 871, 1.651, 872, 4.379, 873, 4.318, 874, 4.379, 886, 1.913, 934, 1.913, 935, 1.913, 936, 1.913, 939, 3.83, 940, 1.913, 941, 1.913, 945, 1.913, 948, 1.891, 949, 2.099, 950, 2.782, 951, 3.111, 955, 1.913, 988, 3.001, 1166, 1.891, 1234, 1.077, 1300, 4.318, 1301, 4.318, 1302, 3.822, 1307, 5.04, 1308, 3.063, 1320, 3.063, 1336, 2.965, 1337, 1.729, 1338, 1.729, 1361, 1.591, 1371, 1.389, 1373, 3.83, 1378, 5.111, 1382, 3.063, 1383, 3.063, 1400, 3.957, 1451, 3.957, 1455, 1.481, 1463, 2.768, 1464, 2.768, 1465, 3.957, 1468, 4.618, 1469, 3.063, 1477, 1.481, 1481, 1.389, 1502, 2.371, 1560, 3.642, 1618, 3.185, 1620, 2.768, 1621, 2.768, 1627, 1.481, 1635, 3.709, 1646, 1.729, 1649, 1.729, 1650, 1.913, 1652, 1.729, 1657, 1.729, 1708, 2.768, 1709, 2.768, 1734, 3.461, 1741, 3.063, 1766, 3.957, 1799, 1.591, 1825, 1.729, 1863, 4.618, 2006, 3.83, 2011, 4.379, 2012, 4.379, 2020, 4.379, 2021, 5.111, 2022, 5.111, 2023, 4.379, 2025, 3.063, 2026, 3.063, 2027, 3.063, 2028, 3.063, 2029, 3.063, 2030, 1.913, 2032, 1.913, 2034, 1.913, 2035, 3.063, 2037, 3.83, 2043, 1.913, 2044, 5.02, 2045, 5.02, 2046, 4.391, 2047, 3.511, 2048, 4.391, 2049, 4.391, 2050, 4.391, 2051, 6.594, 2052, 5.492, 2053, 3.511, 2054, 3.511, 2055, 3.511, 2056, 2.193, 2057, 3.511, 2058, 3.511, 2059, 3.511, 2060, 2.193, 2061, 2.193, 2062, 3.511, 2063, 3.511, 2064, 2.193, 2065, 2.193, 2066, 2.193, 2067, 5.02, 2068, 2.193, 2069, 2.193, 2070, 5.859, 2071, 2.193, 2072, 3.511, 2073, 5.02, 2074, 3.511, 2075, 3.511, 2076, 3.511, 2077, 2.193, 2078, 2.193, 2079, 2.193, 2080, 3.511, 2081, 2.193, 2082, 3.511, 2083, 3.511, 2084, 3.511, 2085, 3.511, 2086, 3.511, 2087, 3.511, 2088, 5.02, 2089, 2.193, 2090, 2.193, 2091, 2.193, 2092, 3.511, 2093, 2.193, 2094, 2.193, 2095, 2.193, 2096, 3.511, 2097, 3.511, 2098, 2.193, 2099, 2.193, 2100, 4.391, 2101, 2.193, 2102, 3.511, 2103, 2.193, 2104, 3.511, 2105, 2.193, 2106, 2.193, 2107, 2.193, 2108, 2.193, 2109, 2.193, 2110, 2.193, 2111, 2.193, 2112, 2.193, 2113, 2.193, 2114, 2.193, 2115, 2.193, 2116, 2.193, 2117, 2.193, 2118, 3.511, 2119, 2.193, 2120, 2.193, 2121, 2.193, 2122, 2.193]], ["title/interfaces/Update$Params.html", [228, 0.044, 1951, 2.742]], ["body/interfaces/Update$Params.html", [3, 0.168, 4, 0.151, 5, 0.151, 9, 0.239, 11, 0.672, 19, 0.931, 22, 0.203, 23, 0.428, 41, 1.838, 43, 0.013, 45, 0.194, 47, 1.481, 48, 1.077, 56, 0.992, 67, 0.806, 73, 2.374, 78, 1.232, 99, 2.212, 101, 2.686, 103, 1.825, 108, 4.409, 113, 1.296, 116, 0.758, 119, 1.825, 130, 1.7, 133, 0.216, 135, 1.876, 139, 1.385, 163, 1.778, 164, 3.605, 165, 2.006, 175, 1.409, 177, 1.481, 198, 0.01, 199, 0.01, 228, 0.053, 230, 0.992, 231, 2.779, 232, 2.779, 233, 3.108, 235, 1.318, 236, 1.457, 237, 3.272, 240, 2.455, 241, 1.94, 242, 0.89, 243, 4.16, 244, 1.839, 245, 2.036, 246, 3.18, 247, 1.481, 248, 2.643, 249, 1.641, 250, 2.124, 251, 2.623, 252, 2.124, 253, 2.073, 254, 1.173, 255, 1.825, 256, 1.385, 257, 2.643, 258, 3.313, 259, 2.52, 260, 3.236, 262, 2.52, 263, 2.183, 264, 1.761, 265, 1.481, 266, 2.411, 267, 2.52, 268, 2.249, 269, 2.52, 270, 2.52, 271, 2.124, 273, 2.212, 275, 2.643, 276, 2.643, 279, 2.932, 280, 2.932, 281, 2.643, 282, 2.108, 283, 2.643, 284, 2.643, 285, 1.966, 286, 1.966, 287, 2.124, 288, 2.643, 289, 3.749, 290, 1.966, 291, 2.124, 292, 1.585, 293, 2.52, 294, 1.641, 295, 2.643, 296, 2.643, 297, 2.408, 995, 2.932, 1951, 4.7, 1958, 4.279, 2123, 3.867, 2124, 4.279, 2125, 4.279, 2126, 6.3, 2127, 4.905]], ["title/coverage.html", [2128, 4.848]], ["body/coverage.html", [0, 1.953, 1, 2.289, 5, 0.104, 6, 3.101, 7, 2.459, 8, 2.957, 31, 2.147, 34, 2.147, 36, 1.593, 37, 2.147, 43, 0.013, 45, 0.104, 59, 2.026, 70, 1.92, 113, 0.895, 122, 2.289, 125, 1.664, 128, 2.147, 129, 3.879, 134, 1.023, 167, 2.403, 171, 5.043, 198, 0.007, 199, 0.007, 200, 3.858, 203, 2.17, 219, 2.289, 228, 0.092, 229, 2.289, 231, 4.401, 232, 4.235, 233, 4.404, 234, 3.858, 243, 1.92, 254, 1.504, 255, 1.261, 256, 1.776, 273, 3.422, 287, 2.119, 300, 1.593, 301, 3.858, 302, 3.858, 308, 2.289, 320, 2.147, 321, 2.026, 322, 2.026, 323, 2.289, 361, 1.411, 367, 2.957, 392, 1.411, 394, 1.429, 396, 1.358, 398, 1.358, 399, 1.217, 401, 1.358, 403, 1.411, 405, 1.411, 406, 1.261, 407, 1.411, 409, 1.411, 411, 1.411, 413, 1.411, 421, 2.147, 422, 2.289, 424, 2.672, 433, 2.459, 469, 2.459, 473, 2.672, 476, 2.672, 485, 2.289, 496, 2.459, 515, 2.672, 550, 1.92, 551, 2.957, 635, 2.026, 660, 2.957, 662, 1.92, 673, 2.289, 688, 2.289, 710, 2.957, 711, 2.957, 727, 2.957, 728, 3.858, 810, 2.957, 828, 2.459, 887, 1.741, 889, 2.672, 890, 2.672, 948, 4.54, 958, 2.459, 971, 2.289, 972, 3.858, 978, 2.459, 981, 2.026, 982, 2.957, 983, 2.485, 987, 3.858, 989, 2.459, 991, 3.76, 992, 2.289, 997, 3.953, 1012, 2.459, 1014, 2.459, 1016, 2.459, 1017, 3.76, 1018, 2.459, 1019, 2.459, 1020, 2.459, 1021, 3.76, 1022, 2.459, 1023, 2.459, 1024, 2.459, 1025, 3.76, 1026, 2.459, 1027, 2.459, 1034, 2.459, 1036, 2.289, 1038, 2.289, 1040, 2.289, 1041, 2.289, 1042, 3.55, 1043, 3.858, 1048, 2.289, 1049, 3.55, 1050, 3.858, 1055, 2.289, 1056, 3.55, 1057, 3.858, 1061, 4.248, 1089, 1.826, 1091, 3.953, 1092, 3.953, 1093, 1.826, 1099, 1.826, 1119, 1.741, 1128, 1.826, 1152, 1.826, 1176, 1.92, 1190, 1.826, 1294, 2.957, 1300, 2.289, 1301, 2.289, 1302, 2.026, 1368, 2.289, 1372, 2.957, 1386, 3.858, 1387, 2.957, 1394, 2.289, 1476, 2.672, 1491, 2.957, 1501, 3.858, 1505, 3.858, 1506, 2.957, 1612, 2.957, 1614, 2.957, 1616, 2.957, 1654, 5.488, 1681, 2.957, 1703, 3.858, 1706, 2.957, 1719, 2.957, 1737, 2.957, 1743, 2.957, 1744, 2.957, 1757, 2.957, 1776, 4.248, 1794, 2.957, 1857, 2.957, 1898, 4.167, 1899, 2.957, 1904, 2.672, 1916, 2.672, 1926, 2.957, 1934, 2.672, 1951, 2.289, 1968, 2.957, 1970, 2.957, 1990, 2.957, 1991, 2.957, 2004, 2.957, 2036, 2.957, 2043, 2.957, 2123, 3.858, 2128, 2.957, 2129, 3.389, 2130, 3.389, 2131, 3.389, 2132, 6.672, 2133, 8.004, 2134, 8.004, 2135, 7.687, 2136, 7.476, 2137, 6.291, 2138, 3.389, 2139, 3.389, 2140, 3.389, 2141, 4.894, 2142, 4.894, 2143, 5.011, 2144, 5.744, 2145, 3.389, 2146, 3.389, 2147, 3.389, 2148, 4.894, 2149, 5.744, 2150, 3.389, 2151, 3.389, 2152, 4.894, 2153, 3.389, 2154, 3.389, 2155, 6.672, 2156, 4.894, 2157, 3.389, 2158, 3.389, 2159, 6.291, 2160, 3.389, 2161, 3.389, 2162, 3.389, 2163, 3.389, 2164, 3.389]], ["title/dependencies.html", [312, 3.301, 2165, 2.667]], ["body/dependencies.html", [43, 0.013, 118, 1.421, 119, 2.286, 198, 0.011, 199, 0.011, 312, 4.149, 380, 3.717, 381, 3.156, 428, 5.704, 429, 4.1, 468, 4.149, 501, 5.36, 502, 5.36, 506, 5.36, 508, 5.36, 509, 5.36, 543, 3.673, 2166, 6.144, 2167, 8.399, 2168, 6.144, 2169, 7.237, 2170, 6.144, 2171, 6.144, 2172, 6.144, 2173, 6.144, 2174, 6.144, 2175, 6.144, 2176, 6.144, 2177, 6.144, 2178, 6.144, 2179, 6.144]], ["title/miscellaneous/functions.html", [2180, 2.143, 2181, 4.264]], ["body/miscellaneous/functions.html", [9, 0.359, 13, 1.82, 14, 2.126, 19, 0.979, 20, 2.887, 22, 0.133, 31, 2.987, 41, 2.185, 42, 1.467, 43, 0.012, 44, 1.369, 45, 0.231, 46, 0.665, 47, 2.228, 48, 1.175, 52, 0.972, 56, 1.518, 57, 1.734, 62, 2.235, 67, 1.212, 73, 1.985, 78, 1.543, 99, 3.328, 101, 3.099, 103, 2.746, 108, 2.04, 163, 2.051, 165, 1.949, 198, 0.007, 199, 0.007, 219, 3.184, 229, 3.184, 231, 3.869, 232, 3.479, 233, 3.534, 234, 3.716, 237, 3.47, 240, 2.338, 241, 1.863, 242, 0.973, 244, 2.365, 245, 2.595, 253, 2.34, 259, 3.791, 260, 4.124, 261, 2.336, 262, 3.791, 263, 2.782, 264, 2.649, 265, 2.228, 266, 2.866, 267, 3.791, 268, 2.595, 269, 3.791, 270, 3.791, 271, 3.196, 272, 2.538, 274, 2.808, 399, 2.204, 406, 2.076, 424, 2.538, 511, 2.808, 515, 3.716, 555, 1.734, 635, 2.818, 673, 3.184, 682, 4.412, 688, 3.184, 871, 1.513, 971, 3.184, 972, 3.716, 973, 2.808, 975, 2.808, 976, 2.808, 978, 3.42, 987, 2.538, 988, 1.925, 993, 2.808, 998, 2.153, 1041, 3.184, 1042, 2.336, 1043, 3.716, 1044, 2.808, 1048, 3.184, 1049, 2.336, 1050, 3.716, 1051, 4.113, 1052, 2.808, 1055, 3.184, 1056, 2.336, 1057, 3.716, 1058, 2.808, 1394, 3.184, 1501, 2.538, 1503, 2.808, 1703, 2.538, 1704, 2.808, 1904, 3.716, 1916, 3.716, 1934, 3.716, 1951, 3.184, 2123, 3.716, 2124, 2.808, 2125, 2.808, 2180, 2.04, 2181, 2.808, 2182, 5.578, 2183, 3.22, 2184, 5.578, 2185, 3.22, 2186, 3.22, 2187, 3.22]], ["title/index.html", [22, 0.14, 2188, 3.383, 2189, 3.383]], ["body/index.html", [4, 0.177, 43, 0.011, 44, 1.049, 102, 4.171, 113, 1.518, 198, 0.011, 199, 0.011, 203, 2.111, 326, 4.171, 356, 5.015, 524, 5.015, 530, 5.015, 686, 4.738, 732, 2.064, 986, 5.015, 1217, 4.402, 1360, 5.046, 1394, 3.882, 2165, 4.532, 2190, 5.749, 2191, 6.955, 2192, 5.749, 2193, 7.479, 2194, 7.479, 2195, 5.015, 2196, 5.749, 2197, 5.749, 2198, 7.957, 2199, 8.182, 2200, 5.749, 2201, 5.749, 2202, 5.749, 2203, 5.749, 2204, 5.749, 2205, 5.749, 2206, 5.749, 2207, 5.749, 2208, 7.479, 2209, 5.749, 2210, 5.749, 2211, 5.749, 2212, 5.749, 2213, 5.749, 2214, 6.955, 2215, 6.955, 2216, 7.771, 2217, 5.749, 2218, 6.955, 2219, 6.955, 2220, 5.749, 2221, 8.087, 2222, 5.749, 2223, 5.749, 2224, 5.749, 2225, 6.955, 2226, 5.749, 2227, 5.749, 2228, 5.749, 2229, 7.479, 2230, 5.749, 2231, 5.749, 2232, 5.749, 2233, 4.532, 2234, 5.749, 2235, 5.749]], ["title/modules.html", [311, 3.521]], ["body/modules.html", [43, 0.011, 198, 0.011, 199, 0.011, 310, 4.748, 311, 4.146, 354, 4.42, 423, 4.42, 429, 4.253, 2236, 7.508, 2237, 7.508, 2238, 7.895, 2239, 6.545, 2240, 6.545]], ["title/interfaces/optionType.html", [228, 0.044, 1368, 2.742]], ["body/interfaces/optionType.html", [3, 0.193, 4, 0.173, 5, 0.173, 9, 0.273, 11, 0.79, 19, 0.935, 22, 0.232, 23, 0.466, 43, 0.013, 45, 0.248, 52, 2.236, 70, 3.185, 72, 4.634, 73, 2.394, 74, 3.805, 88, 2.643, 90, 1.769, 128, 4.886, 129, 3.797, 133, 0.254, 141, 2.761, 142, 3.562, 143, 3.562, 144, 3.562, 145, 3.562, 146, 3.562, 147, 3.562, 148, 3.562, 149, 2.643, 150, 3.562, 151, 3.562, 152, 3.562, 198, 0.01, 199, 0.01, 228, 0.081, 230, 1.138, 235, 1.55, 236, 1.713, 241, 1.956, 242, 1.009, 358, 3.361, 597, 2.072, 598, 2.646, 983, 1.698, 1367, 4.692, 1368, 5.002, 1369, 3.361, 1370, 4.432, 1371, 3.562]], ["title/overview.html", [2233, 4.381]], ["body/overview.html", [2, 2.208, 34, 4.572, 43, 0.013, 198, 0.01, 199, 0.01, 230, 1.073, 300, 3.392, 309, 3.36, 310, 6.098, 311, 3.36, 312, 3.582, 313, 2.297, 314, 4.181, 315, 4.181, 316, 4.181, 317, 3.848, 318, 4.627, 319, 4.627, 320, 4.572, 321, 4.314, 322, 4.314, 323, 4.873, 324, 5.218, 325, 4.181, 326, 3.848, 354, 5.82, 361, 3.349, 362, 2.493, 392, 3.004, 396, 2.892, 398, 2.892, 401, 2.892, 403, 3.004, 405, 3.004, 407, 3.004, 409, 3.004, 411, 3.004, 413, 3.004, 417, 4.627, 418, 4.627, 419, 4.627, 420, 4.627, 421, 4.572, 422, 4.873, 423, 4.873, 542, 3.848, 970, 4.627, 1090, 3.171, 1339, 3.848, 1341, 3.582, 1365, 4.181, 1613, 4.627, 1756, 4.181, 1860, 4.627, 2143, 4.627, 2233, 4.181]], ["title/properties.html", [23, 0.332, 2165, 2.667]], ["body/properties.html", [23, 0.452, 43, 0.012, 198, 0.012, 199, 0.012, 2195, 5.811, 2241, 6.662]], ["title/routes.html", [542, 4.032]], ["body/routes.html", [43, 0.012, 198, 0.012, 199, 0.012, 542, 4.856]], ["title/miscellaneous/typealiases.html", [2180, 2.143, 2242, 4.888]], ["body/miscellaneous/typealiases.html", [22, 0.268, 38, 1.356, 43, 0.012, 45, 0.2, 165, 1.712, 198, 0.011, 199, 0.011, 251, 3.109, 253, 2.22, 254, 1.55, 1138, 3.048, 1985, 6.514, 2180, 4.107, 2243, 6.483, 2244, 6.483, 2245, 7.467, 2246, 6.483, 2247, 6.483]], ["title/miscellaneous/variables.html", [2180, 2.143, 2248, 4.264]], ["body/miscellaneous/variables.html", [22, 0.271, 43, 0.012, 90, 1.467, 112, 1.914, 113, 1.731, 198, 0.011, 199, 0.011, 1091, 3.531, 1092, 4.048, 1119, 3.367, 1128, 4.048, 2180, 4.153, 2248, 5.719, 2249, 6.555]]], "invertedIndex": [["", { "_index": 43, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "dependencies.html": {}, "miscellaneous/functions.html": {}, "index.html": {}, "modules.html": {}, "interfaces/optionType.html": {}, "overview.html": {}, "properties.html": {}, "routes.html": {}, "miscellaneous/typealiases.html": {}, "miscellaneous/variables.html": {} } }], ["0", { "_index": 167, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["0.0.0", { "_index": 2241, "title": {}, "body": { "properties.html": {} } }], ["0.13.0", { "_index": 2179, "title": {}, "body": { "dependencies.html": {} } }], ["0.2em", { "_index": 802, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["0.5em", { "_index": 1477, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["0.5rem", { "_index": 1483, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["0.75em", { "_index": 1478, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["0.8", { "_index": 1673, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["0/1", { "_index": 2148, "title": {}, "body": { "coverage.html": {} } }], ["0ms", { "_index": 2107, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["0px", { "_index": 1619, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["1", { "_index": 1336, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {}, "injectables/QualitySaveLogService.html": {}, "components/ToolbarComponent.html": {} } }], ["1.2em", { "_index": 1702, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["1.5em", { "_index": 800, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["1.ts", { "_index": 1043, "title": {}, "body": { "interfaces/Fetch_1$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["1/1", { "_index": 2135, "title": {}, "body": { "coverage.html": {} } }], ["1/11", { "_index": 2138, "title": {}, "body": { "coverage.html": {} } }], ["1/13", { "_index": 2139, "title": {}, "body": { "coverage.html": {} } }], ["1/19", { "_index": 2140, "title": {}, "body": { "coverage.html": {} } }], ["1/2", { "_index": 2132, "title": {}, "body": { "coverage.html": {} } }], ["1/3", { "_index": 2134, "title": {}, "body": { "coverage.html": {} } }], ["1/4", { "_index": 2137, "title": {}, "body": { "coverage.html": {} } }], ["1/5", { "_index": 2145, "title": {}, "body": { "coverage.html": {} } }], ["1/6", { "_index": 2142, "title": {}, "body": { "coverage.html": {} } }], ["1/7", { "_index": 2144, "title": {}, "body": { "coverage.html": {} } }], ["1/8", { "_index": 2161, "title": {}, "body": { "coverage.html": {} } }], ["10", { "_index": 1653, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["100", { "_index": 948, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["1000px", { "_index": 1677, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["100px", { "_index": 789, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["10px", { "_index": 1651, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["11", { "_index": 1860, "title": {}, "body": { "components/PhasesComponent.html": {}, "overview.html": {} } }], ["12", { "_index": 1857, "title": {}, "body": { "components/PhasesComponent.html": {}, "coverage.html": {} } }], ["12/12", { "_index": 2158, "title": {}, "body": { "coverage.html": {} } }], ["1200px", { "_index": 938, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["13/15", { "_index": 2154, "title": {}, "body": { "coverage.html": {} } }], ["14", { "_index": 2143, "title": {}, "body": { "coverage.html": {}, "overview.html": {} } }], ["14/14", { "_index": 2157, "title": {}, "body": { "coverage.html": {} } }], ["15", { "_index": 1676, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["15.0.0", { "_index": 2173, "title": {}, "body": { "dependencies.html": {} } }], ["150px", { "_index": 1891, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["15em", { "_index": 787, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["15px", { "_index": 1660, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["16", { "_index": 2141, "title": {}, "body": { "coverage.html": {} } }], ["16.2.0", { "_index": 2167, "title": {}, "body": { "dependencies.html": {} } }], ["16.2.2", { "_index": 2196, "title": {}, "body": { "index.html": {} } }], ["16.2.6", { "_index": 2169, "title": {}, "body": { "dependencies.html": {} } }], ["16/16", { "_index": 2160, "title": {}, "body": { "coverage.html": {} } }], ["16px", { "_index": 1718, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["18px", { "_index": 809, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {} } }], ["1920px", { "_index": 1679, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["1em", { "_index": 785, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["1fr", { "_index": 1669, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["1px", { "_index": 1642, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["2", { "_index": 1339, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "injectables/QualityPhaseService.html": {}, "overview.html": {} } }], ["2.3.0", { "_index": 2177, "title": {}, "body": { "dependencies.html": {} } }], ["2.5em", { "_index": 1486, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["2.ts", { "_index": 1050, "title": {}, "body": { "interfaces/Fetch_2$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["20", { "_index": 958, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "coverage.html": {} } }], ["20px", { "_index": 805, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["22", { "_index": 1871, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["240px", { "_index": 1670, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["25", { "_index": 1654, "title": {}, "body": { "components/LoginPinComponent.html": {}, "coverage.html": {} } }], ["250ms", { "_index": 1647, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["25px", { "_index": 1655, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["2em", { "_index": 1894, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["3", { "_index": 1341, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/QualityAttributeService.html": {}, "overview.html": {} } }], ["3.ts", { "_index": 1057, "title": {}, "body": { "interfaces/Fetch_3$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["3/3", { "_index": 2163, "title": {}, "body": { "coverage.html": {} } }], ["3/6", { "_index": 2151, "title": {}, "body": { "coverage.html": {} } }], ["30", { "_index": 526, "title": {}, "body": { "modules/AppModule.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["3000", { "_index": 538, "title": {}, "body": { "modules/AppModule.html": {} } }], ["30gg", { "_index": 1850, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["30px", { "_index": 1650, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["33", { "_index": 2133, "title": {}, "body": { "coverage.html": {} } }], ["35", { "_index": 970, "title": {}, "body": { "components/DashboardComponent.html": {}, "overview.html": {} } }], ["35deg", { "_index": 2113, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["37", { "_index": 2146, "title": {}, "body": { "coverage.html": {} } }], ["3em", { "_index": 1638, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {} } }], ["4", { "_index": 1365, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "overview.html": {} } }], ["4/4", { "_index": 2159, "title": {}, "body": { "coverage.html": {} } }], ["4/6", { "_index": 2152, "title": {}, "body": { "coverage.html": {} } }], ["40", { "_index": 965, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["400px", { "_index": 963, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["401", { "_index": 1357, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["40px", { "_index": 1620, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["45", { "_index": 1632, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["48px", { "_index": 2035, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["5", { "_index": 1612, "title": {}, "body": { "components/LoginPinComponent.html": {}, "coverage.html": {} } }], ["5/5", { "_index": 2136, "title": {}, "body": { "coverage.html": {} } }], ["50", { "_index": 171, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "coverage.html": {} } }], ["500", { "_index": 807, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["500px", { "_index": 1633, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["50px", { "_index": 1634, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {} } }], ["5em", { "_index": 1636, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["5px", { "_index": 1640, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["6", { "_index": 1613, "title": {}, "body": { "components/LoginPinComponent.html": {}, "overview.html": {} } }], ["6/16", { "_index": 2147, "title": {}, "body": { "coverage.html": {} } }], ["6/6", { "_index": 2162, "title": {}, "body": { "coverage.html": {} } }], ["6/9", { "_index": 2150, "title": {}, "body": { "coverage.html": {} } }], ["60", { "_index": 967, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {} } }], ["600", { "_index": 2120, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["600px", { "_index": 1680, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["60px", { "_index": 1649, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["66", { "_index": 2149, "title": {}, "body": { "coverage.html": {} } }], ["7", { "_index": 1614, "title": {}, "body": { "components/LoginPinComponent.html": {}, "coverage.html": {} } }], ["7.8.0", { "_index": 2175, "title": {}, "body": { "dependencies.html": {} } }], ["7/7", { "_index": 2156, "title": {}, "body": { "coverage.html": {} } }], ["70", { "_index": 2033, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["700px", { "_index": 1678, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["70px", { "_index": 955, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["8", { "_index": 1615, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["8.0.0", { "_index": 2174, "title": {}, "body": { "dependencies.html": {} } }], ["8/8", { "_index": 2155, "title": {}, "body": { "coverage.html": {} } }], ["80", { "_index": 1488, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["800px", { "_index": 1675, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["80px", { "_index": 1639, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["86", { "_index": 2153, "title": {}, "body": { "coverage.html": {} } }], ["9", { "_index": 1616, "title": {}, "body": { "components/LoginPinComponent.html": {}, "coverage.html": {} } }], ["90", { "_index": 1489, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["9000003/qualityattribute/fetch", { "_index": 1060, "title": {}, "body": { "interfaces/Fetch_3$Params.html": {}, "injectables/QualityAttributeService.html": {} } }], ["9000004/qualitysavelog/add", { "_index": 299, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["9000004/qualitysavelog/fetch", { "_index": 1047, "title": {}, "body": { "interfaces/Fetch_1$Params.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["9000004/qualitysavelog/remove", { "_index": 980, "title": {}, "body": { "interfaces/Delete$Params.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["9000004/qualitysavelog/update", { "_index": 1958, "title": {}, "body": { "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {} } }], ["9000005/qualityphase/fetch", { "_index": 1054, "title": {}, "body": { "interfaces/Fetch_2$Params.html": {}, "injectables/QualityPhaseService.html": {} } }], ["9000006/operators/fetch", { "_index": 996, "title": {}, "body": { "interfaces/Fetch$Params.html": {}, "injectables/OperatorsService.html": {} } }], ["900px", { "_index": 936, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["_bodycontent", { "_index": 1222, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["_bodycontenttype", { "_index": 1223, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["_header", { "_index": 1221, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["_path", { "_index": 1219, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["_query", { "_index": 1220, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["_rooturl", { "_index": 666, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["abbiano", { "_index": 591, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["absolute", { "_index": 1657, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["abstract", { "_index": 1133, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["accedere", { "_index": 2025, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["accedi", { "_index": 1611, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["accept", { "_index": 286, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {} } }], ["access", { "_index": 676, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["accesso", { "_index": 1362, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["accessors", { "_index": 559, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/BaseService.html": {}, "components/DashboardComponent.html": {} } }], ["accetta", { "_index": 906, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["account", { "_index": 1180, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["acquisire", { "_index": 601, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {} } }], ["activatedroute", { "_index": 826, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["active", { "_index": 121, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/IframeInitializerService.html": {} } }], ["activeattributes", { "_index": 25, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {} } }], ["activeattributesservice", { "_index": 1, "title": { "injectables/ActiveAttributesService.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "coverage.html": {} } }], ["activeelement", { "_index": 1878, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["activeelement?.classlist.add(\"selected", { "_index": 1881, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["activeelement?.textcontent", { "_index": 1880, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["activelanguage", { "_index": 1373, "title": {}, "body": { "injectables/LanguageService.html": {}, "components/ToolbarComponent.html": {} } }], ["activephase", { "_index": 66, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {} } }], ["activephase.m_product_category_id", { "_index": 153, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["activephaseservice", { "_index": 37, "title": { "injectables/ActivePhaseService.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {}, "coverage.html": {} } }], ["actual_component", { "_index": 416, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["ad", { "_index": 16, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {} } }], ["ad_client_id", { "_index": 1085, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["ad_org_id", { "_index": 1084, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["ad_reference_id", { "_index": 148, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["ad_user_id", { "_index": 1073, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {} } }], ["add", { "_index": 1394, "title": {}, "body": { "components/LogModifierComponent.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {}, "index.html": {} } }], ["add$params", { "_index": 229, "title": { "interfaces/Add$Params.html": {} }, "body": { "interfaces/Add$Params.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["add$response", { "_index": 1932, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["add$response(params", { "_index": 1940, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["add(http", { "_index": 274, "title": {}, "body": { "interfaces/Add$Params.html": {}, "miscellaneous/functions.html": {} } }], ["add(params", { "_index": 1938, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["add(this.http", { "_index": 1960, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["add.path", { "_index": 277, "title": {}, "body": { "interfaces/Add$Params.html": {} } }], ["add.ts", { "_index": 234, "title": {}, "body": { "interfaces/Add$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["adddialog", { "_index": 1395, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["adddialog.afterclosed().subscribe((result", { "_index": 1462, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["addlog", { "_index": 1392, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["addpath", { "_index": 1928, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["adeqa", { "_index": 2190, "title": {}, "body": { "index.html": {} } }], ["adesuitetoken", { "_index": 164, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {}, "interfaces/Update$Params.html": {} } }], ["aggiorna", { "_index": 21, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {} } }], ["aggiornare", { "_index": 108, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["aggiornati", { "_index": 1470, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["aggiornato", { "_index": 2124, "title": {}, "body": { "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["aggiungere", { "_index": 261, "title": {}, "body": { "interfaces/Add$Params.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "miscellaneous/functions.html": {} } }], ["aggiungi", { "_index": 1461, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["aggiungo", { "_index": 900, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["aggiunta", { "_index": 1428, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["agli", { "_index": 1557, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["ai", { "_index": 2026, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["al", { "_index": 94, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {} } }], ["alcun", { "_index": 1607, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["aliases", { "_index": 2243, "title": {}, "body": { "miscellaneous/typealiases.html": {} } }], ["align", { "_index": 797, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["all'aggiornamento", { "_index": 2127, "title": {}, "body": { "interfaces/Update$Params.html": {} } }], ["all'applicazione", { "_index": 1739, "title": {}, "body": { "interfaces/Message.html": {} } }], ["all'autenticazione", { "_index": 55, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["all'avvio", { "_index": 91, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/ToolbarComponent.html": {} } }], ["all'eliminazione", { "_index": 979, "title": {}, "body": { "interfaces/Delete$Params.html": {} } }], ["all'inizializzazione", { "_index": 1304, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["all'inserimento", { "_index": 298, "title": {}, "body": { "interfaces/Add$Params.html": {} } }], ["all'interno", { "_index": 835, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {} } }], ["all'ottenimento", { "_index": 1046, "title": {}, "body": { "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {} } }], ["all'ultimo", { "_index": 579, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["alla", { "_index": 64, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["alle", { "_index": 930, "title": {}, "body": { "components/DashboardComponent.html": {}, "pipes/OptionsPipe.html": {} } }], ["allow", { "_index": 1273, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["allowing", { "_index": 685, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["along", { "_index": 1235, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["already", { "_index": 352, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["alreadyserialized", { "_index": 1159, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["altre", { "_index": 1725, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["anche", { "_index": 1727, "title": {}, "body": { "injectables/LogoutService.html": {}, "components/SidenavComponent.html": {} } }], ["angular", { "_index": 2193, "title": {}, "body": { "index.html": {} } }], ["angular/animations", { "_index": 2166, "title": {}, "body": { "dependencies.html": {} } }], ["angular/cdk", { "_index": 2168, "title": {}, "body": { "dependencies.html": {} } }], ["angular/cdk/layout", { "_index": 886, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["angular/cdk/scrolling", { "_index": 465, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/common", { "_index": 506, "title": {}, "body": { "modules/AppModule.html": {}, "dependencies.html": {} } }], ["angular/common/http", { "_index": 247, "title": {}, "body": { "interfaces/Add$Params.html": {}, "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {} } }], ["angular/common/locales/it", { "_index": 504, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/compiler", { "_index": 2170, "title": {}, "body": { "dependencies.html": {} } }], ["angular/core", { "_index": 118, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "dependencies.html": {} } }], ["angular/forms", { "_index": 468, "title": {}, "body": { "modules/AppModule.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "dependencies.html": {} } }], ["angular/material", { "_index": 2171, "title": {}, "body": { "dependencies.html": {} } }], ["angular/material/button", { "_index": 456, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/card", { "_index": 481, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/checkbox", { "_index": 492, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/dialog", { "_index": 454, "title": {}, "body": { "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["angular/material/form", { "_index": 440, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/icon", { "_index": 443, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/input", { "_index": 438, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/menu", { "_index": 460, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/progress", { "_index": 445, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/select", { "_index": 490, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/sidenav", { "_index": 452, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/slide", { "_index": 462, "title": {}, "body": { "modules/AppModule.html": {}, "components/ToolbarComponent.html": {} } }], ["angular/material/snack", { "_index": 449, "title": {}, "body": { "modules/AppModule.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["angular/material/table", { "_index": 483, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/toolbar", { "_index": 458, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/material/tooltip", { "_index": 494, "title": {}, "body": { "modules/AppModule.html": {} } }], ["angular/platform", { "_index": 428, "title": {}, "body": { "modules/AppModule.html": {}, "pipes/SafePipe.html": {}, "dependencies.html": {} } }], ["angular/router", { "_index": 543, "title": {}, "body": { "modules/AppRoutingModule.html": {}, "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "dependencies.html": {} } }], ["angular/service", { "_index": 508, "title": {}, "body": { "modules/AppModule.html": {}, "dependencies.html": {} } }], ["annulla", { "_index": 760, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {} } }], ["api", { "_index": 340, "title": {}, "body": { "modules/ApiModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/OperatorsService.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["apiconfiguration", { "_index": 300, "title": { "injectables/ApiConfiguration.html": {} }, "body": { "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "overview.html": {} } }], ["apiconfiguration.rooturl", { "_index": 719, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["apiconfigurationparams", { "_index": 308, "title": { "interfaces/ApiConfigurationParams.html": {} }, "body": { "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "coverage.html": {} } }], ["apimodule", { "_index": 310, "title": { "modules/ApiModule.html": {} }, "body": { "modules/ApiModule.html": {}, "modules.html": {}, "overview.html": {} } }], ["apimodule.forroot", { "_index": 307, "title": {}, "body": { "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {} } }], ["app", { "_index": 370, "title": {}, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["app.component", { "_index": 431, "title": {}, "body": { "modules/AppModule.html": {} } }], ["app.component.html", { "_index": 374, "title": {}, "body": { "components/AppComponent.html": {} } }], ["app.component.scss", { "_index": 372, "title": {}, "body": { "components/AppComponent.html": {} } }], ["app/api/models", { "_index": 1595, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["appartiene", { "_index": 1606, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["appcomponent", { "_index": 361, "title": { "components/AppComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["appearance", { "_index": 1629, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["appena", { "_index": 1829, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["append", { "_index": 1096, "title": {}, "body": { "classes/HeaderParameter.html": {}, "components/LoginPinComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["append(headers", { "_index": 1102, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["append(input", { "_index": 1529, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["append(params", { "_index": 1191, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["append(path", { "_index": 1155, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["appendere", { "_index": 1531, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["appending", { "_index": 1130, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["application", { "_index": 524, "title": {}, "body": { "modules/AppModule.html": {}, "index.html": {} } }], ["application/json", { "_index": 282, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {} } }], ["application/x", { "_index": 1241, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["appmodule", { "_index": 354, "title": { "modules/AppModule.html": {} }, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "modules.html": {}, "overview.html": {} } }], ["approutingmodule", { "_index": 423, "title": { "modules/AppRoutingModule.html": {} }, "body": { "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "modules.html": {}, "overview.html": {} } }], ["arial", { "_index": 2110, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["array", { "_index": 87, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["array.join(separator", { "_index": 1150, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["array.push(`${key}=${propval", { "_index": 1147, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["array.push(key", { "_index": 1148, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["array.push(propval", { "_index": 1149, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["arraybuffer", { "_index": 1266, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["arrays", { "_index": 1165, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["artifacts", { "_index": 2210, "title": {}, "body": { "index.html": {} } }], ["asc", { "_index": 1778, "title": {}, "body": { "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {} } }], ["assegnano", { "_index": 1415, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["assenza", { "_index": 832, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["assets", { "_index": 1312, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["atta", { "_index": 1523, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["attiva", { "_index": 57, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {}, "miscellaneous/functions.html": {} } }], ["attivi", { "_index": 15, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {} } }], ["attivo", { "_index": 844, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/ToolbarComponent.html": {} } }], ["attribute", { "_index": 77, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.ad_reference_id", { "_index": 184, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.attributedescription", { "_index": 185, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.attributename", { "_index": 186, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["attribute.attributeseqno", { "_index": 187, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.attributevalue", { "_index": 188, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.attributevaluetype", { "_index": 189, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.c_project_attribute_group_id", { "_index": 190, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.groupdescription", { "_index": 191, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.groupname", { "_index": 192, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.m_product_category_id", { "_index": 193, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.m_product_id", { "_index": 194, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.optionvalue?.type", { "_index": 195, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.optionvalue?.value.tostring", { "_index": 178, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attribute.optionvalue?.value?.key?.at(i", { "_index": 1475, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["attribute.service", { "_index": 345, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["attribute.service.ts", { "_index": 1899, "title": {}, "body": { "injectables/QualityAttributeService.html": {}, "coverage.html": {} } }], ["attribute.service.ts:21", { "_index": 1906, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["attribute.service.ts:27", { "_index": 1911, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["attribute.service.ts:35", { "_index": 1910, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["attribute.service.ts:45", { "_index": 1908, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["attribute/fetch", { "_index": 1056, "title": {}, "body": { "interfaces/Fetch_3$Params.html": {}, "injectables/QualityAttributeService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["attributedescription", { "_index": 147, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["attributename", { "_index": 152, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["attributes", { "_index": 109, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {}, "components/PhasesComponent.html": {} } }], ["attributes.map((attribute", { "_index": 1499, "title": {}, "body": { "components/LogViewerComponent.html": {} } }], ["attributes.service", { "_index": 1436, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["attributes.service.ts", { "_index": 8, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "coverage.html": {} } }], ["attributes.service.ts:109", { "_index": 107, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attributes.service.ts:117", { "_index": 98, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attributes.service.ts:21", { "_index": 39, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attributes.service.ts:37", { "_index": 60, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attributes.service.ts:71", { "_index": 71, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["attributes/active", { "_index": 7, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "coverage.html": {} } }], ["attributeseqno", { "_index": 146, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["attributevalue", { "_index": 151, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["attributevaluetype", { "_index": 150, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["attributi", { "_index": 14, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "miscellaneous/functions.html": {} } }], ["attributo", { "_index": 74, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "components/LogoutDialogComponent.html": {}, "interfaces/QualityattributeModel.html": {}, "components/ToolbarComponent.html": {}, "interfaces/optionType.html": {} } }], ["attuale", { "_index": 1497, "title": {}, "body": { "components/LogViewerComponent.html": {}, "components/PhasesComponent.html": {} } }], ["attualmente", { "_index": 65, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["autenticato", { "_index": 606, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/ToolbarComponent.html": {} } }], ["autenticazione", { "_index": 553, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/SidenavComponent.html": {} } }], ["auth", { "_index": 124, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LogoutService.html": {} } }], ["authenticationservice", { "_index": 320, "title": { "injectables/AuthenticationService.html": {} }, "body": { "modules/ApiModule.html": {}, "injectables/AuthenticationService.html": {}, "components/LoginUsernameComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["authinformationsservice", { "_index": 36, "title": { "injectables/AuthInformationsService.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["authinfoservice", { "_index": 35, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["authservice", { "_index": 1684, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["auto", { "_index": 801, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["automatically", { "_index": 2203, "title": {}, "body": { "index.html": {} } }], ["automaticamente", { "_index": 1808, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["autorizzato", { "_index": 1358, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["available", { "_index": 2240, "title": {}, "body": { "modules.html": {} } }], ["avesse", { "_index": 566, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["avviene", { "_index": 1419, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["background", { "_index": 793, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["backgroundcolor", { "_index": 1631, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["bar", { "_index": 450, "title": {}, "body": { "modules/AppModule.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["barra", { "_index": 865, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {} } }], ["basa", { "_index": 1310, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["base", { "_index": 265, "title": {}, "body": { "interfaces/Add$Params.html": {}, "modules/ApiModule.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["baseservice", { "_index": 662, "title": { "injectables/BaseService.html": {} }, "body": { "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {} } }], ["baseservice:18", { "_index": 697, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["basis", { "_index": 1637, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["black", { "_index": 791, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["blob", { "_index": 1238, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["block", { "_index": 2115, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["body", { "_index": 165, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {}, "miscellaneous/typealiases.html": {} } }], ["body(value", { "_index": 1236, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["boolean", { "_index": 854, "title": {}, "body": { "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["booleana", { "_index": 1566, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "injectables/ThemeService.html": {} } }], ["booleano", { "_index": 856, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {} } }], ["bootstrap", { "_index": 315, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "overview.html": {} } }], ["border", { "_index": 1618, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["both", { "_index": 1174, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["bottom", { "_index": 1479, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {} } }], ["box", { "_index": 1662, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["break", { "_index": 1468, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["browse", { "_index": 2238, "title": {}, "body": { "modules.html": {} } }], ["browser", { "_index": 429, "title": {}, "body": { "modules/AppModule.html": {}, "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/SafePipe.html": {}, "dependencies.html": {}, "modules.html": {} } }], ["browser/animations", { "_index": 436, "title": {}, "body": { "modules/AppModule.html": {} } }], ["browseranimationsmodule", { "_index": 435, "title": {}, "body": { "modules/AppModule.html": {} } }], ["browsermodule", { "_index": 427, "title": {}, "body": { "modules/AppModule.html": {} } }], ["build", { "_index": 1217, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "index.html": {} } }], ["build(options", { "_index": 1263, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["builder", { "_index": 257, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["builder.ts", { "_index": 1092, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {}, "miscellaneous/variables.html": {} } }], ["builder.ts:10", { "_index": 1789, "title": {}, "body": { "classes/ParameterCodec.html": {} } }], ["builder.ts:129", { "_index": 1971, "title": {}, "body": { "classes/QueryParameter.html": {} } }], ["builder.ts:134", { "_index": 1972, "title": {}, "body": { "classes/QueryParameter.html": {} } }], ["builder.ts:14", { "_index": 1790, "title": {}, "body": { "classes/ParameterCodec.html": {} } }], ["builder.ts:18", { "_index": 1787, "title": {}, "body": { "classes/ParameterCodec.html": {} } }], ["builder.ts:188", { "_index": 1100, "title": {}, "body": { "classes/HeaderParameter.html": {} } }], ["builder.ts:193", { "_index": 1104, "title": {}, "body": { "classes/HeaderParameter.html": {} } }], ["builder.ts:212", { "_index": 1978, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:213", { "_index": 1979, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:214", { "_index": 1977, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:215", { "_index": 1976, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:216", { "_index": 1975, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:219", { "_index": 1982, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:22", { "_index": 1788, "title": {}, "body": { "classes/ParameterCodec.html": {} } }], ["builder.ts:220", { "_index": 1981, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:221", { "_index": 1980, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:227", { "_index": 1988, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:234", { "_index": 1989, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:241", { "_index": 1987, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:248", { "_index": 1983, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:298", { "_index": 1986, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:314", { "_index": 1984, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["builder.ts:39", { "_index": 1780, "title": {}, "body": { "classes/Parameter.html": {} } }], ["builder.ts:40", { "_index": 1781, "title": {}, "body": { "classes/Parameter.html": {} } }], ["builder.ts:50", { "_index": 1782, "title": {}, "body": { "classes/Parameter.html": {} } }], ["builder.ts:79", { "_index": 1791, "title": {}, "body": { "classes/PathParameter.html": {} } }], ["builder.ts:84", { "_index": 1792, "title": {}, "body": { "classes/PathParameter.html": {} } }], ["builds", { "_index": 1261, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["button", { "_index": 792, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["button:hover", { "_index": 1641, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["buttons", { "_index": 795, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["c", { "_index": 1854, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["c_bpartner_id", { "_index": 1077, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["c_phase_id", { "_index": 1074, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["c_project_attribute_group_id", { "_index": 145, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["c_projectline_id", { "_index": 1083, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["c_projectphase_id", { "_index": 974, "title": {}, "body": { "interfaces/Delete$Params.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/Message.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {} } }], ["c_projectphase_quality_log_id", { "_index": 1088, "title": {}, "body": { "interfaces/FilterQualitysavelogModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/QualitysavelogModel.html": {} } }], ["calc(100", { "_index": 954, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/PhasesComponent.html": {} } }], ["cambiamento", { "_index": 105, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {} } }], ["cambiare", { "_index": 873, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/LanguageService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["cambio", { "_index": 18, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {} } }], ["campo", { "_index": 1559, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["cancel", { "_index": 738, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {} } }], ["cancellare", { "_index": 1543, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["capabilities", { "_index": 2227, "title": {}, "body": { "index.html": {} } }], ["capire", { "_index": 863, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["caratteristiche", { "_index": 1367, "title": {}, "body": { "interfaces/JsonList.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "interfaces/optionType.html": {} } }], ["caratterizzano", { "_index": 1425, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["card", { "_index": 1877, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["card\")[0", { "_index": 1875, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["card\")[0].classlist.remove(\"selected", { "_index": 1876, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["caricamento", { "_index": 1549, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["carta", { "_index": 1883, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["carte", { "_index": 1796, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["case", { "_index": 1465, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["casella", { "_index": 1534, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["cases", { "_index": 1163, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["caso", { "_index": 1317, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "pipes/SafePipe.html": {} } }], ["categoria", { "_index": 1902, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["center", { "_index": 534, "title": {}, "body": { "modules/AppModule.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["cerca", { "_index": 561, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["change", { "_index": 2205, "title": {}, "body": { "index.html": {} } }], ["changeactivelanguage", { "_index": 2053, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["changeactivelanguage(language", { "_index": 2055, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["changedetectorref", { "_index": 822, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["changedetectorref.detectchanges", { "_index": 940, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["changelanguage", { "_index": 1374, "title": {}, "body": { "injectables/LanguageService.html": {} } }], ["changelanguage(language", { "_index": 1376, "title": {}, "body": { "injectables/LanguageService.html": {} } }], ["characterdata", { "_index": 1842, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["che", { "_index": 11, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "interfaces/optionType.html": {} } }], ["check", { "_index": 2232, "title": {}, "body": { "index.html": {} } }], ["checkbox", { "_index": 1480, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["checked", { "_index": 2100, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["checkmark:before", { "_index": 2108, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["chiamata", { "_index": 1558, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["chiamate", { "_index": 262, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["chiaro", { "_index": 588, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["chiave", { "_index": 1765, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["chiavi", { "_index": 1762, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["childlist", { "_index": 1841, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["chiusura", { "_index": 750, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {} } }], ["choice", { "_index": 2224, "title": {}, "body": { "index.html": {} } }], ["ci", { "_index": 915, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {} } }], ["cifra", { "_index": 1563, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["class", { "_index": 134, "title": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["classe", { "_index": 10, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["classes", { "_index": 1090, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "overview.html": {} } }], ["clear", { "_index": 557, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {} } }], ["cleardialog", { "_index": 1396, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["clearuser", { "_index": 558, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["cli", { "_index": 2194, "title": {}, "body": { "index.html": {} } }], ["clicca", { "_index": 1807, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["cliccato", { "_index": 1817, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["cluster_apimodule", { "_index": 318, "title": {}, "body": { "modules/ApiModule.html": {}, "overview.html": {} } }], ["cluster_apimodule_providers", { "_index": 319, "title": {}, "body": { "modules/ApiModule.html": {}, "overview.html": {} } }], ["cluster_appmodule", { "_index": 417, "title": {}, "body": { "modules/AppModule.html": {}, "overview.html": {} } }], ["cluster_appmodule_bootstrap", { "_index": 420, "title": {}, "body": { "modules/AppModule.html": {}, "overview.html": {} } }], ["cluster_appmodule_declarations", { "_index": 418, "title": {}, "body": { "modules/AppModule.html": {}, "overview.html": {} } }], ["cluster_appmodule_imports", { "_index": 419, "title": {}, "body": { "modules/AppModule.html": {}, "overview.html": {} } }], ["code", { "_index": 986, "title": {}, "body": { "interfaces/ErrorModel.html": {}, "index.html": {} } }], ["codec", { "_index": 1112, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["codice", { "_index": 104, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {} } }], ["colonne", { "_index": 1430, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["color", { "_index": 790, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["column", { "_index": 962, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {} } }], ["columnname", { "_index": 1777, "title": {}, "body": { "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {} } }], ["columns", { "_index": 1666, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["come", { "_index": 84, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/LanguageService.html": {}, "components/PhasesComponent.html": {} } }], ["comes", { "_index": 529, "title": {}, "body": { "modules/AppModule.html": {} } }], ["comma", { "_index": 1210, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["command", { "_index": 2225, "title": {}, "body": { "index.html": {} } }], ["comparire", { "_index": 1571, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["complete", { "_index": 1608, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["completo", { "_index": 1726, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["component", { "_index": 203, "title": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} }, "body": { "injectables/ActivePhaseService.html": {}, "components/AppComponent.html": {}, "modules/AppRoutingModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "index.html": {} } }], ["component_template", { "_index": 390, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["componente", { "_index": 1552, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["components", { "_index": 362, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "overview.html": {} } }], ["components/confirm", { "_index": 495, "title": {}, "body": { "modules/AppModule.html": {} } }], ["components/dashboard/dashboard.component", { "_index": 471, "title": {}, "body": { "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {} } }], ["components/log", { "_index": 472, "title": {}, "body": { "modules/AppModule.html": {} } }], ["components/login", { "_index": 432, "title": {}, "body": { "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {} } }], ["components/logout", { "_index": 484, "title": {}, "body": { "modules/AppModule.html": {} } }], ["components/phases/phases.component", { "_index": 475, "title": {}, "body": { "modules/AppModule.html": {} } }], ["components/sidenav/sidenav.component", { "_index": 478, "title": {}, "body": { "modules/AppModule.html": {} } }], ["components/toolbar/toolbar.component", { "_index": 479, "title": {}, "body": { "modules/AppModule.html": {} } }], ["con", { "_index": 617, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["condizioni", { "_index": 1848, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["conferma", { "_index": 730, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {} } }], ["config", { "_index": 671, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["configuration", { "_index": 304, "title": {}, "body": { "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["configuration.ts", { "_index": 302, "title": {}, "body": { "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "coverage.html": {} } }], ["configuration.ts:12", { "_index": 306, "title": {}, "body": { "injectables/ApiConfiguration.html": {} } }], ["confirm", { "_index": 393, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["confirmdatadialogcomponent", { "_index": 392, "title": { "components/ConfirmDataDialogComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["consente", { "_index": 869, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["conserva", { "_index": 1722, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["const", { "_index": 139, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/Add$Params.html": {}, "modules/AppRoutingModule.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {} } }], ["constrains", { "_index": 2247, "title": {}, "body": { "miscellaneous/typealiases.html": {} } }], ["constructor", { "_index": 32, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["constructor(activeattributesservice", { "_index": 1399, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["constructor(authinfoservice", { "_index": 820, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/LogoutService.html": {}, "components/ToolbarComponent.html": {} } }], ["constructor(config", { "_index": 669, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["constructor(dialogref", { "_index": 740, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["constructor(formbuilder", { "_index": 1513, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["constructor(logoutservice", { "_index": 2013, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["constructor(name", { "_index": 1098, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["constructor(private", { "_index": 136, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/AppComponent.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["constructor(public", { "_index": 775, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "classes/HeaderParameter.html": {}, "components/LogoutDialogComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["constructor(qualityattributeservice", { "_index": 33, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["constructor(rooturl", { "_index": 1974, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["constructor(snackbar", { "_index": 1299, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {} } }], ["constructor(translateservice", { "_index": 375, "title": {}, "body": { "components/AppComponent.html": {}, "injectables/LanguageService.html": {} } }], ["contain", { "_index": 2034, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["container", { "_index": 947, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["contenente", { "_index": 1766, "title": {}, "body": { "pipes/OptionsPipe.html": {}, "pipes/SafePipe.html": {}, "components/ToolbarComponent.html": {} } }], ["contenete", { "_index": 270, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["contenitrice", { "_index": 904, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["content", { "_index": 1234, "title": {}, "body": { "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/ToolbarComponent.html": {} } }], ["contenttype", { "_index": 1237, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["contenuto", { "_index": 1569, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["contesto", { "_index": 269, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["context", { "_index": 268, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["context).pipe", { "_index": 705, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["contiene", { "_index": 214, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {} } }], ["controlli", { "_index": 1412, "title": {}, "body": { "components/LogModifierComponent.html": {}, "injectables/QualityPhaseService.html": {} } }], ["controllo", { "_index": 1426, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {} } }], ["correctly", { "_index": 1113, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["corresponding", { "_index": 1177, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["cos", { "_index": 1548, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["costruttore", { "_index": 40, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["costruzione", { "_index": 1524, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["coverage", { "_index": 2128, "title": { "coverage.html": {} }, "body": { "coverage.html": {} } }], ["creazione", { "_index": 1551, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["criteri", { "_index": 1001, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {} } }], ["criteria", { "_index": 168, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["cui", { "_index": 294, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "pipes/OptionsPipe.html": {}, "injectables/QualityPhaseService.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {} } }], ["current", { "_index": 1262, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["cursor", { "_index": 1644, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["custom", { "_index": 1111, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["customer", { "_index": 1082, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["da", { "_index": 562, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/ToolbarComponent.html": {} } }], ["dai", { "_index": 1593, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["dal", { "_index": 908, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["dall'applicazione", { "_index": 903, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["dall'utente", { "_index": 1403, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {} } }], ["dalla", { "_index": 1320, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/ToolbarComponent.html": {} } }], ["dark", { "_index": 659, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["darkblue", { "_index": 1658, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["dashboard", { "_index": 548, "title": {}, "body": { "modules/AppRoutingModule.html": {}, "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {} } }], ["dashboard'},{'name", { "_index": 397, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["dashboard.component.html", { "_index": 814, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["dashboard.component.scss", { "_index": 813, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["dashboardcomponent", { "_index": 396, "title": { "components/DashboardComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["data", { "_index": 394, "title": {}, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["data.c_projectphase_id", { "_index": 923, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["data.c_projectphase_id.tostring", { "_index": 1342, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["data.lang", { "_index": 919, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["data.m_product_id", { "_index": 922, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["data.theme", { "_index": 920, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {} } }], ["data.token", { "_index": 918, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {} } }], ["data.user_id", { "_index": 924, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {} } }], ["data.username", { "_index": 921, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {} } }], ["datalist", { "_index": 179, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["date", { "_index": 1863, "title": {}, "body": { "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {}, "components/ToolbarComponent.html": {} } }], ["date().getfullyear", { "_index": 1861, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["date().getmonth", { "_index": 1856, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["date:'dd/mm/yyyy", { "_index": 1887, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["date:'mmmm", { "_index": 2101, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["date:'yyyy", { "_index": 2103, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["date:\\'dd/mm/yyyy", { "_index": 1897, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["date:\\'mmmm", { "_index": 2121, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["date:\\'yyyy", { "_index": 2122, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["dati", { "_index": 755, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["declarations", { "_index": 314, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "overview.html": {} } }], ["decodekey", { "_index": 1783, "title": {}, "body": { "classes/ParameterCodec.html": {} } }], ["decodekey(key", { "_index": 1124, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["decodeuricomponent(key", { "_index": 1125, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["decodeuricomponent(value", { "_index": 1127, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["decodevalue", { "_index": 1784, "title": {}, "body": { "classes/ParameterCodec.html": {} } }], ["decodevalue(value", { "_index": 1126, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["decorators", { "_index": 768, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["deepobject", { "_index": 1199, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["default", { "_index": 112, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/variables.html": {} } }], ["defaultexplode", { "_index": 1135, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["defaultlanguage", { "_index": 517, "title": {}, "body": { "modules/AppModule.html": {} } }], ["defaultstyle", { "_index": 1134, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["defined", { "_index": 38, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/typealiases.html": {} } }], ["defines", { "_index": 1129, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["definisce", { "_index": 236, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "interfaces/Update$Params.html": {}, "interfaces/optionType.html": {} } }], ["definiti", { "_index": 1311, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["degli", { "_index": 50, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "interfaces/Fetch_3$Params.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LogoutDialogComponent.html": {}, "pipes/OptionsPipe.html": {} } }], ["dei", { "_index": 754, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Fetch_1$Params.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["del", { "_index": 613, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["delete", { "_index": 978, "title": {}, "body": { "interfaces/Delete$Params.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["delete$params", { "_index": 971, "title": { "interfaces/Delete$Params.html": {} }, "body": { "interfaces/Delete$Params.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["delete$response", { "_index": 1933, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["delete$response(params", { "_index": 1944, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["delete(http", { "_index": 976, "title": {}, "body": { "interfaces/Delete$Params.html": {}, "miscellaneous/functions.html": {} } }], ["delete(params", { "_index": 1942, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["delete(this.http", { "_index": 1962, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["delete.path", { "_index": 977, "title": {}, "body": { "interfaces/Delete$Params.html": {} } }], ["delete.ts", { "_index": 972, "title": {}, "body": { "interfaces/Delete$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["deletepath", { "_index": 1929, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["dell'aggiunta/modifica", { "_index": 1433, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["dell'applicazione", { "_index": 849, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["dell'elemento", { "_index": 1816, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["dell'id", { "_index": 622, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["dell'identificativo", { "_index": 625, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["dell'inizializzazione", { "_index": 1295, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["dell'opzione", { "_index": 759, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {}, "pipes/OptionsPipe.html": {} } }], ["dell'utente", { "_index": 586, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/LogoutService.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["della", { "_index": 41, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["delle", { "_index": 597, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityPhaseService.html": {}, "interfaces/QualityattributeModel.html": {}, "components/ToolbarComponent.html": {}, "interfaces/optionType.html": {} } }], ["dello", { "_index": 2072, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["dentro", { "_index": 898, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["dependencies", { "_index": 312, "title": { "dependencies.html": {} }, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "dependencies.html": {}, "overview.html": {} } }], ["deps", { "_index": 516, "title": {}, "body": { "modules/AppModule.html": {} } }], ["desc", { "_index": 1779, "title": {}, "body": { "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {} } }], ["description", { "_index": 9, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {}, "interfaces/optionType.html": {} } }], ["descrive", { "_index": 767, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["descrizione", { "_index": 751, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["determinata", { "_index": 1388, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["dettate", { "_index": 1592, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["dev", { "_index": 2200, "title": {}, "body": { "index.html": {} } }], ["deve", { "_index": 872, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["development", { "_index": 2197, "title": {}, "body": { "index.html": {} } }], ["di", { "_index": 19, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityPhaseService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {}, "interfaces/optionType.html": {} } }], ["dialog", { "_index": 729, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["dialog'},{'name", { "_index": 395, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["dialog.component", { "_index": 486, "title": {}, "body": { "modules/AppModule.html": {}, "components/LogModifierComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["dialog.component.html", { "_index": 734, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["dialog.component.scss", { "_index": 733, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["dialog.component.ts", { "_index": 728, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {}, "coverage.html": {} } }], ["dialog.component.ts:17", { "_index": 742, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["dialog.component.ts:24", { "_index": 765, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["dialog.component.ts:25", { "_index": 770, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {} } }], ["dialog.component.ts:29", { "_index": 1712, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["dialog.component.ts:30", { "_index": 763, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {} } }], ["dialog.component.ts:36", { "_index": 1713, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["dialog.component.ts:37", { "_index": 762, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {} } }], ["dialog.component.ts:43", { "_index": 1710, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["dialog.component.ts:44", { "_index": 756, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {} } }], ["dialog/confirm", { "_index": 496, "title": {}, "body": { "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "coverage.html": {} } }], ["dialog/logout", { "_index": 485, "title": {}, "body": { "modules/AppModule.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["dialogref", { "_index": 735, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["dichiarazioni", { "_index": 1590, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["direction", { "_index": 961, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {} } }], ["directive", { "_index": 388, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["directives", { "_index": 415, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["directive|pipe|service|class|guard|interface|enum|module", { "_index": 2209, "title": {}, "body": { "index.html": {} } }], ["directly", { "_index": 717, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["directory", { "_index": 2213, "title": {}, "body": { "index.html": {} } }], ["disable", { "_index": 337, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["display", { "_index": 949, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["displayedcolumns", { "_index": 1393, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["disponibile", { "_index": 1810, "title": {}, "body": { "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {} } }], ["disponibili", { "_index": 1451, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["dist", { "_index": 2212, "title": {}, "body": { "index.html": {} } }], ["distruttore", { "_index": 851, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["diversi", { "_index": 2018, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["dm", { "_index": 607, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "interfaces/Message.html": {}, "components/ToolbarComponent.html": {} } }], ["document.body.classlist.add('theme", { "_index": 2042, "title": {}, "body": { "injectables/ThemeService.html": {} } }], ["document.body.classlist.remove('theme", { "_index": 658, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/ThemeService.html": {} } }], ["document.getelementbyid(\"pin", { "_index": 1585, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["document.getelementbyid(id", { "_index": 1879, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["document.getelementsbyclassname(\"selected", { "_index": 1874, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["document.getelementsbyclassname('phase').item(0", { "_index": 1834, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["document.getelementsbyclassname('phase')[0", { "_index": 1837, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["documentation", { "_index": 2129, "title": {}, "body": { "coverage.html": {} } }], ["dom", { "_index": 365, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["domsanitizer", { "_index": 2000, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["dopo", { "_index": 115, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {}, "components/PhasesComponent.html": {} } }], ["downloads", { "_index": 1271, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["drawer", { "_index": 957, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["due", { "_index": 1720, "title": {}, "body": { "injectables/LogoutService.html": {}, "components/SidenavComponent.html": {} } }], ["durante", { "_index": 595, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/LanguageService.html": {} } }], ["duration", { "_index": 537, "title": {}, "body": { "modules/AppModule.html": {}, "components/ToolbarComponent.html": {} } }], ["dynamic", { "_index": 2172, "title": {}, "body": { "dependencies.html": {} } }], ["e", { "_index": 89, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["e2e", { "_index": 2222, "title": {}, "body": { "index.html": {} } }], ["each", { "_index": 1167, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["ed", { "_index": 584, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["effettuare", { "_index": 267, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["element", { "_index": 387, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["element.value.length", { "_index": 1587, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["element.value.substring(0", { "_index": 1586, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["elimina", { "_index": 2007, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["eliminando", { "_index": 1732, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["eliminare", { "_index": 973, "title": {}, "body": { "interfaces/Delete$Params.html": {}, "miscellaneous/functions.html": {} } }], ["eliminato", { "_index": 975, "title": {}, "body": { "interfaces/Delete$Params.html": {}, "miscellaneous/functions.html": {} } }], ["emette", { "_index": 114, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/LanguageService.html": {} } }], ["en", { "_index": 1383, "title": {}, "body": { "injectables/LanguageService.html": {}, "components/ToolbarComponent.html": {} } }], ["enabled", { "_index": 520, "title": {}, "body": { "modules/AppModule.html": {} } }], ["encoded", { "_index": 1244, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["encodekey", { "_index": 1785, "title": {}, "body": { "classes/ParameterCodec.html": {} } }], ["encodekey(key", { "_index": 1120, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["encoder", { "_index": 1279, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["encodeuricomponent(key", { "_index": 1121, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["encodeuricomponent(p[0])}=${encodeuricomponent(p[1])}`).join", { "_index": 1251, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["encodeuricomponent(value", { "_index": 1123, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["encodevalue", { "_index": 1786, "title": {}, "body": { "classes/ParameterCodec.html": {} } }], ["encodevalue(value", { "_index": 1122, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["end", { "_index": 2221, "title": {}, "body": { "index.html": {} } }], ["end_plan", { "_index": 1081, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["end_plan_date", { "_index": 1851, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["end_plan_date.setfullyear(nextyear", { "_index": 1867, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["end_plan_date.setmonth(nextmonth", { "_index": 1866, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["end_plan_date.toisostring().replace(\"t", { "_index": 1872, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["end_plan_operator", { "_index": 1845, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["endrow", { "_index": 170, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["entry", { "_index": 378, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["equals", { "_index": 155, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["error", { "_index": 1352, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["error('apimodule", { "_index": 351, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["error('you", { "_index": 355, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["error.error", { "_index": 1354, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["error.status", { "_index": 1356, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["errordescription", { "_index": 1353, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["errore", { "_index": 985, "title": {}, "body": { "interfaces/ErrorModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["errori", { "_index": 1998, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["errormodel", { "_index": 981, "title": { "interfaces/ErrorModel.html": {} }, "body": { "interfaces/ErrorModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "coverage.html": {} } }], ["errormodel).description", { "_index": 1355, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["es", { "_index": 1382, "title": {}, "body": { "injectables/LanguageService.html": {}, "components/ToolbarComponent.html": {} } }], ["esci", { "_index": 1711, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["esegue", { "_index": 1296, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "interfaces/Message.html": {} } }], ["eseguire", { "_index": 103, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "injectables/LogoutService.html": {}, "injectables/QualityPhaseService.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["eseguito", { "_index": 567, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["eslint", { "_index": 336, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["essere", { "_index": 2058, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["estrarre", { "_index": 2085, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["etichetta", { "_index": 1328, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["event", { "_index": 780, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["event.data", { "_index": 913, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["event.source", { "_index": 911, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["eventi", { "_index": 745, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["evita", { "_index": 589, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["evitare", { "_index": 217, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["ex", { "_index": 1527, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["example", { "_index": 678, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["except", { "_index": 1162, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["execute", { "_index": 2218, "title": {}, "body": { "index.html": {} } }], ["exit", { "_index": 1708, "title": {}, "body": { "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["expected", { "_index": 1265, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["explode", { "_index": 1132, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["export", { "_index": 133, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "interfaces/optionType.html": {} } }], ["exports", { "_index": 317, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "overview.html": {} } }], ["extends", { "_index": 661, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "classes/HeaderParameter.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["fa", { "_index": 928, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["fallback", { "_index": 718, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["fallito", { "_index": 1528, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["false", { "_index": 855, "title": {}, "body": { "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["family", { "_index": 2109, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["far", { "_index": 1570, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["fare", { "_index": 218, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["fase", { "_index": 20, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {}, "miscellaneous/functions.html": {} } }], ["fasi", { "_index": 871, "title": {}, "body": { "components/DashboardComponent.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityPhaseService.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/functions.html": {} } }], ["fetch", { "_index": 219, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "injectables/OperatorsService.html": {}, "components/PhasesComponent.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["fetch$params", { "_index": 635, "title": { "interfaces/Fetch$Params.html": {} }, "body": { "injectables/AuthInformationsService.html": {}, "interfaces/Fetch$Params.html": {}, "components/LoginPinComponent.html": {}, "injectables/OperatorsService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["fetch$response", { "_index": 1746, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["fetch$response(params", { "_index": 1750, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["fetch(http", { "_index": 993, "title": {}, "body": { "interfaces/Fetch$Params.html": {}, "miscellaneous/functions.html": {} } }], ["fetch(params", { "_index": 1748, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["fetch(this.http", { "_index": 1754, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["fetch.path", { "_index": 994, "title": {}, "body": { "interfaces/Fetch$Params.html": {} } }], ["fetch_1", { "_index": 1934, "title": {}, "body": { "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["fetch_1$params", { "_index": 1041, "title": { "interfaces/Fetch_1$Params.html": {} }, "body": { "interfaces/Fetch_1$Params.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["fetch_1$response", { "_index": 1935, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["fetch_1$response(params", { "_index": 1948, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["fetch_1(http", { "_index": 1044, "title": {}, "body": { "interfaces/Fetch_1$Params.html": {}, "miscellaneous/functions.html": {} } }], ["fetch_1(params", { "_index": 1946, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["fetch_1(this.http", { "_index": 1964, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["fetch_1.path", { "_index": 1045, "title": {}, "body": { "interfaces/Fetch_1$Params.html": {} } }], ["fetch_1path", { "_index": 1930, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["fetch_2", { "_index": 1916, "title": {}, "body": { "injectables/QualityPhaseService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["fetch_2$params", { "_index": 1048, "title": { "interfaces/Fetch_2$Params.html": {} }, "body": { "interfaces/Fetch_2$Params.html": {}, "injectables/QualityPhaseService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["fetch_2$response", { "_index": 1917, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["fetch_2$response(params", { "_index": 1921, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["fetch_2(http", { "_index": 1052, "title": {}, "body": { "interfaces/Fetch_2$Params.html": {}, "miscellaneous/functions.html": {} } }], ["fetch_2(params", { "_index": 1919, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["fetch_2(this.http", { "_index": 1924, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["fetch_2.path", { "_index": 1053, "title": {}, "body": { "interfaces/Fetch_2$Params.html": {} } }], ["fetch_2path", { "_index": 1915, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["fetch_3", { "_index": 1904, "title": {}, "body": { "injectables/QualityAttributeService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["fetch_3$params", { "_index": 1055, "title": { "interfaces/Fetch_3$Params.html": {} }, "body": { "interfaces/Fetch_3$Params.html": {}, "injectables/QualityAttributeService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["fetch_3$response", { "_index": 1905, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["fetch_3$response(params", { "_index": 1909, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["fetch_3(http", { "_index": 1058, "title": {}, "body": { "interfaces/Fetch_3$Params.html": {}, "miscellaneous/functions.html": {} } }], ["fetch_3(params", { "_index": 1907, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["fetch_3(this.http", { "_index": 1913, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["fetch_3.path", { "_index": 1059, "title": {}, "body": { "interfaces/Fetch_3$Params.html": {} } }], ["fetch_3path", { "_index": 1903, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["fetchattributes", { "_index": 27, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["fetchattributes(activephase", { "_index": 58, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["fetchpath", { "_index": 1745, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["fetchrequestoperatorsmodel", { "_index": 989, "title": { "interfaces/FetchRequestOperatorsModel.html": {} }, "body": { "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "coverage.html": {} } }], ["fetchrequestqualityattributemodel", { "_index": 1016, "title": { "interfaces/FetchRequestQualityattributeModel.html": {} }, "body": { "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/Fetch_3$Params.html": {}, "coverage.html": {} } }], ["fetchrequestqualityphasemodel", { "_index": 1020, "title": { "interfaces/FetchRequestQualityphaseModel.html": {} }, "body": { "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/Fetch_2$Params.html": {}, "coverage.html": {} } }], ["fetchrequestqualitysavelogmodel", { "_index": 1024, "title": { "interfaces/FetchRequestQualitysavelogModel.html": {} }, "body": { "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "coverage.html": {} } }], ["fetchresponseoperatorsmodel", { "_index": 992, "title": { "interfaces/FetchResponseOperatorsModel.html": {} }, "body": { "interfaces/Fetch$Params.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "coverage.html": {} } }], ["fetchresponsequalityattributemodel", { "_index": 1036, "title": { "interfaces/FetchResponseQualityattributeModel.html": {} }, "body": { "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/Fetch_3$Params.html": {}, "injectables/QualityAttributeService.html": {}, "coverage.html": {} } }], ["fetchresponsequalityphasemodel", { "_index": 1038, "title": { "interfaces/FetchResponseQualityphaseModel.html": {} }, "body": { "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/Fetch_2$Params.html": {}, "injectables/QualityPhaseService.html": {}, "coverage.html": {} } }], ["fetchresponsequalitysavelogmodel", { "_index": 1040, "title": { "interfaces/FetchResponseQualitysavelogModel.html": {} }, "body": { "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {} } }], ["field", { "_index": 441, "title": {}, "body": { "modules/AppModule.html": {} } }], ["fieldname", { "_index": 140, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["file", { "_index": 5, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "interfaces/optionType.html": {} } }], ["files", { "_index": 2206, "title": {}, "body": { "index.html": {} } }], ["filter", { "_index": 248, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["filter((r", { "_index": 288, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["filterjsonoptions", { "_index": 28, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["filterjsonoptions(attribute", { "_index": 69, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["filteroperatorsmodel", { "_index": 1012, "title": { "interfaces/FilterOperatorsModel.html": {} }, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FilterOperatorsModel.html": {}, "coverage.html": {} } }], ["filterqualityattributemodel", { "_index": 1018, "title": { "interfaces/FilterQualityattributeModel.html": {} }, "body": { "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "coverage.html": {} } }], ["filterqualityphasemodel", { "_index": 1022, "title": { "interfaces/FilterQualityphaseModel.html": {} }, "body": { "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "coverage.html": {} } }], ["filterqualitysavelogmodel", { "_index": 1026, "title": { "interfaces/FilterQualitysavelogModel.html": {} }, "body": { "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "coverage.html": {} } }], ["filtraggio", { "_index": 1758, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["filtrando", { "_index": 1064, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {} } }], ["filtrare", { "_index": 1003, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "components/LoginPinComponent.html": {} } }], ["filtro", { "_index": 1772, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["finale", { "_index": 1005, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["fine", { "_index": 1889, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["finire", { "_index": 1006, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {} } }], ["first", { "_index": 530, "title": {}, "body": { "modules/AppModule.html": {}, "index.html": {} } }], ["firstcard", { "_index": 1835, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["firstcard.click", { "_index": 1838, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["fit", { "_index": 1656, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["fittizio", { "_index": 1824, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["flex", { "_index": 950, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["flusso", { "_index": 1380, "title": {}, "body": { "injectables/LanguageService.html": {} } }], ["fn/authentication/login", { "_index": 699, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["fn/authentication/logout", { "_index": 700, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["fn/operators/fetch", { "_index": 1753, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["fn/quality", { "_index": 1912, "title": {}, "body": { "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["fondamentali", { "_index": 552, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["font", { "_index": 803, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["form", { "_index": 590, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["form>button", { "_index": 1648, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["formbuilder", { "_index": 1514, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["formcontrol", { "_index": 1434, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["formcontrol(false", { "_index": 1448, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["formdata", { "_index": 1254, "title": {}, "body": { "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["formdata.append(key", { "_index": 1256, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["formdata.push(entry", { "_index": 1459, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["formdata.set(key", { "_index": 1258, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["formdatavalue", { "_index": 1973, "title": {}, "body": { "classes/RequestBuilder.html": {} } }], ["formdatavalue(value", { "_index": 1259, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["formgroup", { "_index": 1431, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["formsmodule", { "_index": 466, "title": {}, "body": { "modules/AppModule.html": {} } }], ["formvalue", { "_index": 1246, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["forroot", { "_index": 331, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["forroot(params", { "_index": 332, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["fosse", { "_index": 1520, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["foto", { "_index": 1072, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {} } }], ["frame", { "_index": 899, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["frompage", { "_index": 736, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["frompage.description", { "_index": 783, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["frompage.title", { "_index": 782, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["full", { "_index": 545, "title": {}, "body": { "modules/AppRoutingModule.html": {}, "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["function", { "_index": 273, "title": {}, "body": { "interfaces/Add$Params.html": {}, "modules/AppModule.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {} } }], ["functions", { "_index": 2181, "title": { "miscellaneous/functions.html": {} }, "body": { "miscellaneous/functions.html": {} } }], ["funzionamento", { "_index": 848, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["funzione", { "_index": 259, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["further", { "_index": 2228, "title": {}, "body": { "index.html": {} } }], ["gap", { "_index": 1484, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["generale", { "_index": 2006, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["generate", { "_index": 2208, "title": {}, "body": { "index.html": {} } }], ["generated", { "_index": 2192, "title": {}, "body": { "index.html": {} } }], ["generato", { "_index": 2084, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["gestione", { "_index": 744, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["gestire", { "_index": 51, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["gestisce", { "_index": 12, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["getactiveattributes", { "_index": 30, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["getactivephase", { "_index": 206, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["getinsideframe", { "_index": 881, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["getrooturl", { "_index": 714, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["getter", { "_index": 612, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {} } }], ["getting", { "_index": 2188, "title": { "index.html": {} }, "body": {} }], ["gettoken", { "_index": 610, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["getuserid", { "_index": 620, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["getusername", { "_index": 627, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["getusertheme", { "_index": 631, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["gi", { "_index": 224, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["giorno", { "_index": 2083, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["gli", { "_index": 13, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "pipes/SafePipe.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/functions.html": {} } }], ["global", { "_index": 303, "title": {}, "body": { "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {} } }], ["go", { "_index": 2231, "title": {}, "body": { "index.html": {} } }], ["grafica", { "_index": 2045, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["graficamente", { "_index": 1815, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["grafico", { "_index": 748, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["graph", { "_index": 2239, "title": {}, "body": { "modules.html": {} } }], ["gray", { "_index": 1661, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["greaterorequal", { "_index": 158, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["grid", { "_index": 1665, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["groupdescription", { "_index": 144, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["groupname", { "_index": 143, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["handle", { "_index": 1114, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["handles", { "_index": 681, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["header", { "_index": 1094, "title": {}, "body": { "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["header(name", { "_index": 1231, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["headerparam", { "_index": 1285, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["headerparam.append(httpheaders", { "_index": 1287, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["headerparameter", { "_index": 1089, "title": { "classes/HeaderParameter.html": {} }, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {} } }], ["headerparameter(name", { "_index": 1233, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["headers", { "_index": 677, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "classes/HeaderParameter.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["headers.append(this.name", { "_index": 1215, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["height", { "_index": 951, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["help", { "_index": 2229, "title": {}, "body": { "index.html": {} } }], ["helper", { "_index": 1216, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["hh:mm", { "_index": 1888, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["hide", { "_index": 1509, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["horizontalposition", { "_index": 533, "title": {}, "body": { "modules/AppModule.html": {} } }], ["html", { "_index": 386, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["html.pipe", { "_index": 488, "title": {}, "body": { "modules/AppModule.html": {} } }], ["html.pipe.ts", { "_index": 1991, "title": {}, "body": { "pipes/SafePipe.html": {}, "coverage.html": {} } }], ["html.pipe.ts:21", { "_index": 1995, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["htmlelement", { "_index": 1836, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["http", { "_index": 253, "title": {}, "body": { "interfaces/Add$Params.html": {}, "modules/ApiModule.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {}, "miscellaneous/typealiases.html": {} } }], ["http.request", { "_index": 283, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["http://localhost:4200", { "_index": 2202, "title": {}, "body": { "index.html": {} } }], ["httpclient", { "_index": 244, "title": {}, "body": { "interfaces/Add$Params.html": {}, "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["httpclientmodule", { "_index": 357, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {} } }], ["httpcontext", { "_index": 245, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["httpheaders", { "_index": 1103, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["httpheaders.append('accept", { "_index": 1284, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["httpheaders.set('content", { "_index": 1288, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["httploaderfactory", { "_index": 515, "title": {}, "body": { "modules/AppModule.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["httploaderfactory(http", { "_index": 511, "title": {}, "body": { "modules/AppModule.html": {}, "miscellaneous/functions.html": {} } }], ["httpparametercodec", { "_index": 1109, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["httpparams", { "_index": 1110, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["httprequest", { "_index": 1108, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["httprequest(this.method.touppercase", { "_index": 1290, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["httpresponse", { "_index": 246, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {} } }], ["https://github.com/angular/angular/issues/18261", { "_index": 1118, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["https://github.com/angular/angular/issues/20575", { "_index": 360, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["https://test.adesuite.com/faltracco/rest/openapi/operation", { "_index": 305, "title": {}, "body": { "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {} } }], ["icon", { "_index": 1674, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {} } }], ["icone", { "_index": 2017, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["icontains", { "_index": 157, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["id", { "_index": 600, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/PhasesComponent.html": {} } }], ["identificativa", { "_index": 1767, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["identificativo", { "_index": 626, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/PhasesComponent.html": {} } }], ["identifier", { "_index": 2130, "title": {}, "body": { "coverage.html": {} } }], ["iframe", { "_index": 836, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/Message.html": {} } }], ["iframeinitializerservice", { "_index": 828, "title": { "injectables/IframeInitializerService.html": {} }, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "coverage.html": {} } }], ["iframeinitservice", { "_index": 827, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["ignore", { "_index": 1184, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["il", { "_index": 78, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {}, "injectables/QualitySaveLogService.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["img", { "_index": 1652, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["immesso", { "_index": 1541, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["impiegasse", { "_index": 1573, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["implements", { "_index": 732, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/ToolbarComponent.html": {}, "index.html": {} } }], ["import", { "_index": 116, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {} } }], ["imports", { "_index": 346, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {} } }], ["imposta", { "_index": 587, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["impostare", { "_index": 1379, "title": {}, "body": { "injectables/LanguageService.html": {}, "components/PhasesComponent.html": {}, "injectables/ThemeService.html": {} } }], ["incorporarla", { "_index": 867, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["index", { "_index": 22, "title": { "index.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {}, "interfaces/optionType.html": {}, "miscellaneous/typealiases.html": {}, "miscellaneous/variables.html": {} } }], ["index.tostring", { "_index": 1447, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["index.tostring())?.value", { "_index": 1454, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["indica", { "_index": 857, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["indispensabili", { "_index": 847, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["individuare", { "_index": 80, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["info", { "_index": 3, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "interfaces/optionType.html": {} } }], ["informations.service", { "_index": 126, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["informations.service.ts", { "_index": 551, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "coverage.html": {} } }], ["informations.service.ts:103", { "_index": 570, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:114", { "_index": 577, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:16", { "_index": 593, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:21", { "_index": 599, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:26", { "_index": 604, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:31", { "_index": 560, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:46", { "_index": 611, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:51", { "_index": 621, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:56", { "_index": 628, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:61", { "_index": 632, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:67", { "_index": 615, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:76", { "_index": 624, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:85", { "_index": 630, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations.service.ts:94", { "_index": 634, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["informations/auth", { "_index": 125, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["informazioni", { "_index": 53, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["inglese", { "_index": 2075, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["ingresso", { "_index": 93, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "interfaces/Message.html": {} } }], ["inherited", { "_index": 696, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "classes/HeaderParameter.html": {}, "injectables/OperatorsService.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {} } }], ["initialize", { "_index": 1297, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["initialize(data", { "_index": 1313, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["initializeform", { "_index": 1397, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["initializer.service", { "_index": 891, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["initializer.service.ts", { "_index": 1294, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "coverage.html": {} } }], ["initializer.service.ts:19", { "_index": 1303, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["initializer.service.ts:40", { "_index": 1323, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["initializer.service.ts:50", { "_index": 1314, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["initializer/iframe", { "_index": 890, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "coverage.html": {} } }], ["iniziale", { "_index": 1010, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["inizializza", { "_index": 764, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["inizializzare", { "_index": 1315, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {} } }], ["inizializzazione", { "_index": 845, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["iniziare", { "_index": 1011, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {} } }], ["inizio", { "_index": 1885, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["inject", { "_index": 771, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["inject(mat_dialog_data", { "_index": 776, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["injectable", { "_index": 0, "title": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "injectables/ThemeService.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "injectables/ThemeService.html": {}, "coverage.html": {} } }], ["injectables", { "_index": 2, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "injectables/ThemeService.html": {}, "overview.html": {} } }], ["inline", { "_index": 2114, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["inner", { "_index": 1626, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["inotcontains", { "_index": 156, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["input", { "_index": 1537, "title": {}, "body": { "components/LoginPinComponent.html": {}, "pipes/SafePipe.html": {} } }], ["input.example", { "_index": 1622, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["inserire", { "_index": 238, "title": {}, "body": { "interfaces/Add$Params.html": {} } }], ["inseriscono", { "_index": 1411, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["inseriti", { "_index": 1402, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["inserito", { "_index": 272, "title": {}, "body": { "interfaces/Add$Params.html": {}, "components/LoginPinComponent.html": {}, "miscellaneous/functions.html": {} } }], ["inside", { "_index": 885, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["inside=true", { "_index": 841, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["insideframe", { "_index": 815, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["insideframe(inside", { "_index": 943, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["instanceof", { "_index": 290, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {} } }], ["instead", { "_index": 679, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["interazioni", { "_index": 2020, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["interfaccia", { "_index": 235, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "interfaces/optionType.html": {} } }], ["interface", { "_index": 228, "title": { "interfaces/Add$Params.html": {}, "interfaces/ApiConfigurationParams.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/ParameterOptions.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "interfaces/Update$Params.html": {}, "interfaces/optionType.html": {} }, "body": { "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "interfaces/JsonList.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "interfaces/optionType.html": {} } }], ["interfaces", { "_index": 230, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/ApiConfigurationParams.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/ParameterOptions.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "interfaces/Update$Params.html": {}, "interfaces/optionType.html": {}, "overview.html": {} } }], ["isactive", { "_index": 1070, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/QualitysavelogModel.html": {} } }], ["isdark", { "_index": 2048, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["isdevmode", { "_index": 426, "title": {}, "body": { "modules/AppModule.html": {} } }], ["isglobal", { "_index": 1076, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["ismobileuser", { "_index": 1068, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {} } }], ["italiano", { "_index": 2074, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["items", { "_index": 2106, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["json", { "_index": 177, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {} } }], ["json.parse(json", { "_index": 181, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["json.stringify(value", { "_index": 1260, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["jsonlist", { "_index": 128, "title": { "interfaces/JsonList.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/JsonList.html": {}, "interfaces/QualityattributeModel.html": {}, "coverage.html": {}, "interfaces/optionType.html": {} } }], ["karma", { "_index": 2220, "title": {}, "body": { "index.html": {} } }], ["key", { "_index": 88, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "classes/HeaderParameter.html": {}, "interfaces/JsonList.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "interfaces/QualityattributeModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/optionType.html": {} } }], ["key,value,key,value", { "_index": 1213, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["l", { "_index": 1371, "title": {}, "body": { "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityattributeModel.html": {}, "components/ToolbarComponent.html": {}, "interfaces/optionType.html": {} } }], ["l'accesso", { "_index": 568, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["l'aggiornamento/inserimento", { "_index": 731, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {} } }], ["l'aggiunta", { "_index": 1406, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["l'anno", { "_index": 2087, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["l'apertura", { "_index": 1324, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["l'api", { "_index": 296, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["l'applicazione", { "_index": 2057, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["l'attributo", { "_index": 92, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["l'autenticazione", { "_index": 594, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["l'esecuzione", { "_index": 1381, "title": {}, "body": { "injectables/LanguageService.html": {} } }], ["l'icona", { "_index": 1567, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["l'id", { "_index": 583, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {} } }], ["l'identificativo", { "_index": 573, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/LogoutService.html": {}, "components/SidenavComponent.html": {} } }], ["l'interfaccia", { "_index": 858, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["l'intestazione", { "_index": 2044, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["l'opzione", { "_index": 1768, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["l'ottenimento", { "_index": 49, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {} } }], ["l'ultima", { "_index": 1562, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["l'ultimo", { "_index": 1532, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["l'uso", { "_index": 596, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["l'utente", { "_index": 565, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/LogoutService.html": {} } }], ["la", { "_index": 56, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["label", { "_index": 1158, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["lang", { "_index": 1740, "title": {}, "body": { "interfaces/Message.html": {} } }], ["language", { "_index": 1378, "title": {}, "body": { "injectables/LanguageService.html": {}, "components/ToolbarComponent.html": {} } }], ["language/language.service", { "_index": 1330, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["languages", { "_index": 2049, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["languageservice", { "_index": 1300, "title": { "injectables/LanguageService.html": {} }, "body": { "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["large", { "_index": 1659, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["lastvalue", { "_index": 205, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["laterale", { "_index": 866, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/SidenavComponent.html": {} } }], ["lato", { "_index": 1359, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["le", { "_index": 52, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/OperatorsModel.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/functions.html": {}, "interfaces/optionType.html": {} } }], ["left", { "_index": 1635, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["legend", { "_index": 313, "title": {}, "body": { "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "overview.html": {} } }], ["lessorequal", { "_index": 159, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["light", { "_index": 2041, "title": {}, "body": { "injectables/ThemeService.html": {} } }], ["line", { "_index": 2117, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["linename", { "_index": 1078, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["linguaggi", { "_index": 2070, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["linguaggio", { "_index": 1307, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/ToolbarComponent.html": {} } }], ["list", { "_index": 1212, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["lista", { "_index": 76, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityPhaseService.html": {}, "components/ToolbarComponent.html": {} } }], ["listener", { "_index": 853, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["literal", { "_index": 766, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Login$Params.html": {}, "components/LogoutDialogComponent.html": {}, "classes/RequestBuilder.html": {} } }], ["livello", { "_index": 1525, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["lo", { "_index": 1822, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["loaded", { "_index": 353, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["loader", { "_index": 502, "title": {}, "body": { "modules/AppModule.html": {}, "dependencies.html": {} } }], ["loading", { "_index": 1510, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["locale_id", { "_index": 425, "title": {}, "body": { "modules/AppModule.html": {} } }], ["localeit", { "_index": 503, "title": {}, "body": { "modules/AppModule.html": {} } }], ["localstorage", { "_index": 563, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {} } }], ["localstorage.getitem(\"adetoken", { "_index": 638, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginUsernameComponent.html": {} } }], ["localstorage.getitem('adetoken", { "_index": 1576, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["localstorage.getitem('lang", { "_index": 2093, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["localstorage.removeitem(\"adetoken", { "_index": 654, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["localstorage.setitem(\"adetoken", { "_index": 647, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["localstorage.setitem('lang", { "_index": 1384, "title": {}, "body": { "injectables/LanguageService.html": {} } }], ["log", { "_index": 240, "title": {}, "body": { "interfaces/Add$Params.html": {}, "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualitysavelogModel.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["log.service", { "_index": 343, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["log.service.ts", { "_index": 1926, "title": {}, "body": { "injectables/QualitySaveLogService.html": {}, "coverage.html": {} } }], ["log.service.ts:102", { "_index": 1947, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:109", { "_index": 1959, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:117", { "_index": 1954, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:127", { "_index": 1952, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:28", { "_index": 1937, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:34", { "_index": 1955, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:42", { "_index": 1941, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:52", { "_index": 1939, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:59", { "_index": 1956, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:67", { "_index": 1945, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:77", { "_index": 1943, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:84", { "_index": 1957, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log.service.ts:92", { "_index": 1949, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["log/9000004", { "_index": 233, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["log/fetch", { "_index": 1042, "title": {}, "body": { "interfaces/Fetch_1$Params.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["logico", { "_index": 1526, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["login", { "_index": 399, "title": {}, "body": { "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["login$params", { "_index": 673, "title": { "interfaces/Login$Params.html": {} }, "body": { "injectables/AuthenticationService.html": {}, "interfaces/Login$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["login$response", { "_index": 667, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["login$response(params", { "_index": 683, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["login(http", { "_index": 1503, "title": {}, "body": { "interfaces/Login$Params.html": {}, "miscellaneous/functions.html": {} } }], ["login(params", { "_index": 672, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["login(this.http", { "_index": 702, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["login.path", { "_index": 1504, "title": {}, "body": { "interfaces/Login$Params.html": {} } }], ["login/pin", { "_index": 547, "title": {}, "body": { "modules/AppRoutingModule.html": {} } }], ["login/username", { "_index": 546, "title": {}, "body": { "modules/AppRoutingModule.html": {} } }], ["loginpath", { "_index": 664, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["loginpincomponent", { "_index": 398, "title": { "components/LoginPinComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["loginusernamecomponent", { "_index": 401, "title": { "components/LoginUsernameComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["logmodifiercomponent", { "_index": 403, "title": { "components/LogModifierComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["logo", { "_index": 2032, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["logout", { "_index": 406, "title": {}, "body": { "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["logout$params", { "_index": 688, "title": { "interfaces/Logout$Params.html": {} }, "body": { "injectables/AuthenticationService.html": {}, "interfaces/Logout$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["logout$response", { "_index": 668, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["logout$response(params", { "_index": 690, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["logout(http", { "_index": 1704, "title": {}, "body": { "interfaces/Logout$Params.html": {}, "miscellaneous/functions.html": {} } }], ["logout(params", { "_index": 687, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["logout(this.http", { "_index": 707, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["logout.path", { "_index": 1705, "title": {}, "body": { "interfaces/Logout$Params.html": {} } }], ["logout/logout.service", { "_index": 1331, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["logoutdialog", { "_index": 2027, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["logoutdialog.afterclosed().subscribe((result", { "_index": 2029, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["logoutdialogcomponent", { "_index": 405, "title": { "components/LogoutDialogComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["logoutpath", { "_index": 665, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["logoutservice", { "_index": 1302, "title": { "injectables/LogoutService.html": {} }, "body": { "injectables/IframeInitializerService.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["logoutuserid", { "_index": 1728, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["logview", { "_index": 960, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["logviewercomponent", { "_index": 407, "title": { "components/LogViewerComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["loro", { "_index": 1389, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["m_product_category_id", { "_index": 141, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/optionType.html": {} } }], ["m_product_id", { "_index": 149, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "interfaces/Message.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/optionType.html": {} } }], ["ma", { "_index": 1723, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["maincontent", { "_index": 953, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["mainframe", { "_index": 952, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["mancano", { "_index": 926, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["map", { "_index": 249, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {} } }], ["map((r", { "_index": 291, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {} } }], ["margin", { "_index": 799, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["mat", { "_index": 956, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["mat_dialog_data", { "_index": 772, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["mat_snack_bar_default_options", { "_index": 447, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matbuttonmodule", { "_index": 455, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matcardmodule", { "_index": 480, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matcheckboxmodule", { "_index": 491, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matching", { "_index": 199, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "dependencies.html": {}, "miscellaneous/functions.html": {}, "index.html": {}, "modules.html": {}, "interfaces/optionType.html": {}, "overview.html": {}, "properties.html": {}, "routes.html": {}, "miscellaneous/typealiases.html": {}, "miscellaneous/variables.html": {} } }], ["matdialog", { "_index": 1400, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["matdialogmodule", { "_index": 453, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matdialogref", { "_index": 741, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["matformfieldmodule", { "_index": 439, "title": {}, "body": { "modules/AppModule.html": {} } }], ["maticonmodule", { "_index": 442, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matinputmodule", { "_index": 437, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matmenumodule", { "_index": 459, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matprogressspinnermodule", { "_index": 444, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matrix", { "_index": 1160, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["matselectmodule", { "_index": 489, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matsidenavmodule", { "_index": 451, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matslidetogglechange", { "_index": 2067, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["matslidetogglemodule", { "_index": 461, "title": {}, "body": { "modules/AppModule.html": {} } }], ["matsnackbar", { "_index": 448, "title": {}, "body": { "modules/AppModule.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["mattablemodule", { "_index": 482, "title": {}, "body": { "modules/AppModule.html": {} } }], ["mattoolbarmodule", { "_index": 457, "title": {}, "body": { "modules/AppModule.html": {} } }], ["mattooltipmodule", { "_index": 493, "title": {}, "body": { "modules/AppModule.html": {} } }], ["max", { "_index": 969, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["media", { "_index": 823, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["media.matchmedia('(max", { "_index": 935, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["mediamatcher", { "_index": 824, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["mediaquerylist", { "_index": 860, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["men", { "_index": 870, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["menu", { "_index": 946, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["mes_theme", { "_index": 1066, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {} } }], ["mes_theme_display", { "_index": 1065, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {} } }], ["mese", { "_index": 2086, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["message", { "_index": 887, "title": { "interfaces/Message.html": {} }, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Message.html": {}, "components/PhasesComponent.html": {}, "coverage.html": {} } }], ["messaggi", { "_index": 1325, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["messaggio", { "_index": 1326, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Message.html": {}, "components/PhasesComponent.html": {} } }], ["metadata", { "_index": 368, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["method", { "_index": 675, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "classes/HeaderParameter.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["methods", { "_index": 26, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "modules/ApiModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["metodo", { "_index": 61, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["min", { "_index": 788, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {} } }], ["minmax(0", { "_index": 1668, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["miscellaneous", { "_index": 2180, "title": { "miscellaneous/functions.html": {}, "miscellaneous/typealiases.html": {}, "miscellaneous/variables.html": {} }, "body": { "miscellaneous/functions.html": {}, "miscellaneous/typealiases.html": {}, "miscellaneous/variables.html": {} } }], ["mobile", { "_index": 2118, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["mobilequery", { "_index": 816, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["modalit", { "_index": 1721, "title": {}, "body": { "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {} } }], ["mode", { "_index": 874, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["model", { "_index": 130, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {} } }], ["model.ts", { "_index": 983, "title": {}, "body": { "interfaces/ErrorModel.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "coverage.html": {}, "interfaces/optionType.html": {} } }], ["modella", { "_index": 1738, "title": {}, "body": { "interfaces/Message.html": {} } }], ["modellate", { "_index": 97, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["modelli", { "_index": 1594, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["modello", { "_index": 1062, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {} } }], ["models/fetch", { "_index": 990, "title": {}, "body": { "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["models/filter", { "_index": 1013, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {} } }], ["models/operators", { "_index": 1035, "title": {}, "body": { "interfaces/FetchResponseOperatorsModel.html": {} } }], ["models/order", { "_index": 1015, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {} } }], ["models/qualityattribute", { "_index": 1037, "title": {}, "body": { "interfaces/FetchResponseQualityattributeModel.html": {} } }], ["models/qualityphase", { "_index": 1039, "title": {}, "body": { "interfaces/FetchResponseQualityphaseModel.html": {} } }], ["models/qualitysavelog", { "_index": 258, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {} } }], ["modifica", { "_index": 1423, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modificare", { "_index": 1764, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["modificata", { "_index": 1769, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["modifier", { "_index": 964, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {} } }], ["modifier'},{'name", { "_index": 404, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["modifier.component", { "_index": 474, "title": {}, "body": { "modules/AppModule.html": {} } }], ["modifier.component.html", { "_index": 1391, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.scss", { "_index": 1390, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts", { "_index": 1387, "title": {}, "body": { "components/LogModifierComponent.html": {}, "coverage.html": {} } }], ["modifier.component.ts:104", { "_index": 1405, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:150", { "_index": 1422, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:175", { "_index": 1404, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:198", { "_index": 1421, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:206", { "_index": 1407, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:25", { "_index": 1429, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:30", { "_index": 1424, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:35", { "_index": 1432, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:43", { "_index": 1427, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:50", { "_index": 1420, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:54", { "_index": 1401, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:70", { "_index": 1417, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier.component.ts:85", { "_index": 1410, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["modifier/log", { "_index": 473, "title": {}, "body": { "modules/AppModule.html": {}, "components/LogModifierComponent.html": {}, "coverage.html": {} } }], ["module", { "_index": 309, "title": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {} }, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "overview.html": {} } }], ["modules", { "_index": 311, "title": { "modules.html": {} }, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "modules.html": {}, "overview.html": {} } }], ["modulewithproviders", { "_index": 334, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["more", { "_index": 2230, "title": {}, "body": { "index.html": {} } }], ["mostrare", { "_index": 1327, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {} } }], ["moz", { "_index": 1628, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["ms", { "_index": 1895, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["multipart", { "_index": 1253, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["multipart/form", { "_index": 1252, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["mutationobserver(function", { "_index": 1833, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["mydata", { "_index": 737, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["n", { "_index": 358, "title": {}, "body": { "modules/ApiModule.html": {}, "interfaces/JsonList.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "interfaces/optionType.html": {} } }], ["name", { "_index": 44, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/FilterOperatorsModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/functions.html": {}, "index.html": {} } }], ["name[key", { "_index": 1200, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["nasconde", { "_index": 1568, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["nascondere", { "_index": 864, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["nav", { "_index": 2031, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["navigate", { "_index": 2201, "title": {}, "body": { "index.html": {} } }], ["necessarie", { "_index": 833, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["need", { "_index": 356, "title": {}, "body": { "modules/ApiModule.html": {}, "index.html": {} } }], ["negli", { "_index": 86, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["nel", { "_index": 761, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["nell'applicazione", { "_index": 1308, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/ToolbarComponent.html": {} } }], ["nella", { "_index": 1533, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["new", { "_index": 113, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "index.html": {}, "miscellaneous/variables.html": {} } }], ["next", { "_index": 1345, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["nextmonth", { "_index": 1858, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["nextyear", { "_index": 1862, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["ng", { "_index": 2199, "title": {}, "body": { "index.html": {} } }], ["ngmodule", { "_index": 338, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {} } }], ["ngondestroy", { "_index": 819, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["ngoninit", { "_index": 739, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["ngx", { "_index": 380, "title": {}, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "dependencies.html": {} } }], ["nome", { "_index": 605, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["non", { "_index": 834, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["none", { "_index": 1627, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["normale", { "_index": 1575, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["note", { "_index": 1067, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {} } }], ["notifica", { "_index": 1306, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["notificare", { "_index": 202, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["null", { "_index": 1138, "title": {}, "body": { "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "miscellaneous/typealiases.html": {} } }], ["nullo", { "_index": 1699, "title": {}, "body": { "components/LoginUsernameComponent.html": {}, "pipes/SafePipe.html": {} } }], ["number", { "_index": 598, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "interfaces/optionType.html": {} } }], ["numerica", { "_index": 1539, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["numero", { "_index": 1030, "title": {}, "body": { "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "components/LoginPinComponent.html": {} } }], ["numero_matricola", { "_index": 1069, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {} } }], ["nuova", { "_index": 212, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["nuovi", { "_index": 110, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {} } }], ["nuovo", { "_index": 239, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthInformationsService.html": {}, "components/LogModifierComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["o", { "_index": 1799, "title": {}, "body": { "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["object", { "_index": 215, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["object.keys(this.value", { "_index": 1201, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["object.keys(value", { "_index": 1143, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["objects", { "_index": 1170, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["observable", { "_index": 101, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["observer", { "_index": 1832, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["observer.disconnect", { "_index": 1839, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["observer.observe(document", { "_index": 1840, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["occorre", { "_index": 2021, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["occupa", { "_index": 1707, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["odierna", { "_index": 2082, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["oggetto", { "_index": 99, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "pipes/SafePipe.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["ogni", { "_index": 17, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {} } }], ["ondestroy", { "_index": 812, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["oninit", { "_index": 117, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["openlogoutdialog", { "_index": 2011, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["openlogoutuserdialog", { "_index": 2012, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["opensnackbar", { "_index": 1298, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["opensnackbar(message", { "_index": 1322, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["operation", { "_index": 694, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "classes/HeaderParameter.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["operationpath", { "_index": 1224, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["operations", { "_index": 716, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["operator", { "_index": 154, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["operatore", { "_index": 1560, "title": {}, "body": { "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["operatori", { "_index": 999, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FilterOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OrderOperatorsModel.html": {} } }], ["operators", { "_index": 991, "title": {}, "body": { "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FilterOperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "interfaces/OrderOperatorsModel.html": {}, "coverage.html": {} } }], ["operatorsmodel", { "_index": 1034, "title": { "interfaces/OperatorsModel.html": {} }, "body": { "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/OperatorsModel.html": {}, "coverage.html": {} } }], ["operatorsservice", { "_index": 321, "title": { "injectables/OperatorsService.html": {} }, "body": { "modules/ApiModule.html": {}, "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {}, "injectables/OperatorsService.html": {}, "coverage.html": {}, "overview.html": {} } }], ["option", { "_index": 781, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogoutDialogComponent.html": {}, "pipes/OptionsPipe.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["option.replaceall(key", { "_index": 1773, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["optional", { "_index": 46, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/functions.html": {} } }], ["optional()@inject(mat_dialog_data", { "_index": 769, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["options", { "_index": 1095, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["options.accept", { "_index": 1283, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["options.context", { "_index": 1293, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["options.reportprogress", { "_index": 1292, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["options.responsetype", { "_index": 1291, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["optionspipe", { "_index": 421, "title": { "pipes/OptionsPipe.html": {} }, "body": { "modules/AppModule.html": {}, "components/LogModifierComponent.html": {}, "pipes/OptionsPipe.html": {}, "coverage.html": {}, "overview.html": {} } }], ["optionspipe().transform(this.form.get('control", { "_index": 1457, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["optionstrim", { "_index": 1474, "title": {}, "body": { "components/LogModifierComponent.html": {}, "pipes/OptionsPipe.html": {} } }], ["optiontype", { "_index": 1368, "title": { "interfaces/optionType.html": {} }, "body": { "interfaces/JsonList.html": {}, "interfaces/QualityattributeModel.html": {}, "coverage.html": {}, "interfaces/optionType.html": {} } }], ["optionvalue", { "_index": 142, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["opzione", { "_index": 1763, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["opzioni", { "_index": 72, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/JsonList.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["orderby", { "_index": 1000, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "components/PhasesComponent.html": {} } }], ["orderoperatorsmodel", { "_index": 1014, "title": { "interfaces/OrderOperatorsModel.html": {} }, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "coverage.html": {} } }], ["orderqualityattributemodel", { "_index": 1019, "title": { "interfaces/OrderQualityattributeModel.html": {} }, "body": { "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "coverage.html": {} } }], ["orderqualityphasemodel", { "_index": 1023, "title": { "interfaces/OrderQualityphaseModel.html": {} }, "body": { "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "coverage.html": {} } }], ["orderqualitysavelogmodel", { "_index": 1027, "title": { "interfaces/OrderQualitysavelogModel.html": {} }, "body": { "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "coverage.html": {} } }], ["ordinare", { "_index": 1009, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {} } }], ["orizzontalmente", { "_index": 1800, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["osserva", { "_index": 1826, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["osservabile", { "_index": 100, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {} } }], ["ottenere", { "_index": 62, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/AuthInformationsService.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/functions.html": {} } }], ["ottenuto", { "_index": 1518, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["ottiene", { "_index": 582, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["out", { "_index": 326, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "index.html": {}, "overview.html": {} } }], ["outer", { "_index": 1624, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["over", { "_index": 877, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["overflow", { "_index": 1490, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/PhasesComponent.html": {} } }], ["overview", { "_index": 2233, "title": { "overview.html": {} }, "body": { "index.html": {}, "overview.html": {} } }], ["p", { "_index": 808, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["package", { "_index": 2165, "title": { "dependencies.html": {}, "properties.html": {} }, "body": { "index.html": {} } }], ["padding", { "_index": 784, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["padre", { "_index": 910, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["page", { "_index": 2235, "title": {}, "body": { "index.html": {} } }], ["pagina", { "_index": 1321, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {} } }], ["pagine", { "_index": 931, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["pairs", { "_index": 1171, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["pairs.map(p", { "_index": 1250, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["pairs.push([key", { "_index": 1248, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["panelclass", { "_index": 1334, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["param", { "_index": 135, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "components/PhasesComponent.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {} } }], ["parameter", { "_index": 1093, "title": { "classes/Parameter.html": {} }, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {} } }], ["parameter:117", { "_index": 1793, "title": {}, "body": { "classes/PathParameter.html": {} } }], ["parameter:40", { "_index": 1101, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {} } }], ["parameter:50", { "_index": 1107, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/QueryParameter.html": {} } }], ["parametercodec", { "_index": 1119, "title": { "classes/ParameterCodec.html": {} }, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {}, "miscellaneous/variables.html": {} } }], ["parametercodecinstance", { "_index": 1128, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {}, "miscellaneous/variables.html": {} } }], ["parameteroptions", { "_index": 1099, "title": { "interfaces/ParameterOptions.html": {} }, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {} } }], ["parameters", { "_index": 42, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/functions.html": {} } }], ["parametri", { "_index": 237, "title": {}, "body": { "interfaces/Add$Params.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["parametro", { "_index": 840, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["params", { "_index": 163, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/Add$Params.html": {}, "modules/ApiModule.html": {}, "injectables/AuthenticationService.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["params.adesuitetoken", { "_index": 280, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["params.append(`${this.name}[${key", { "_index": 1203, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["params.append(key", { "_index": 1207, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["params.append(this.name", { "_index": 1194, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["params['inside", { "_index": 894, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["parent", { "_index": 912, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["parentmodule", { "_index": 349, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["parsedjson", { "_index": 180, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["parsedjson.key", { "_index": 182, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["parsedjson.value", { "_index": 183, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["part", { "_index": 693, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["parte", { "_index": 1731, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["parziale", { "_index": 1734, "title": {}, "body": { "injectables/LogoutService.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["passare", { "_index": 1547, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["passati", { "_index": 1319, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["passing", { "_index": 1274, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["passo", { "_index": 580, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["password", { "_index": 1502, "title": {}, "body": { "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["path", { "_index": 292, "title": {}, "body": { "interfaces/Add$Params.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {} } }], ["path(name", { "_index": 1225, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["path.replace(`{${prefix}${this.name}${this.options.explode", { "_index": 1182, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["path.replace(`{${this.name", { "_index": 1181, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["pathmatch", { "_index": 544, "title": {}, "body": { "modules/AppRoutingModule.html": {} } }], ["pathparam", { "_index": 1276, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["pathparam.append(path", { "_index": 1278, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["pathparameter", { "_index": 1152, "title": { "classes/PathParameter.html": {} }, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {} } }], ["pathparameter(name", { "_index": 1227, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["per", { "_index": 48, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["perde", { "_index": 1724, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["perform", { "_index": 1289, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["permettono", { "_index": 1927, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["phase", { "_index": 211, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "components/PhasesComponent.html": {} } }], ["phase.end_plan", { "_index": 1890, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["phase.service", { "_index": 123, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "modules/ApiModule.html": {}, "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {} } }], ["phase.service.ts", { "_index": 200, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "injectables/QualityPhaseService.html": {}, "coverage.html": {} } }], ["phase.service.ts:17", { "_index": 213, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["phase.service.ts:21", { "_index": 1918, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["phase.service.ts:22", { "_index": 207, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["phase.service.ts:27", { "_index": 1923, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["phase.service.ts:33", { "_index": 210, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["phase.service.ts:35", { "_index": 1922, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["phase.service.ts:44", { "_index": 208, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["phase.service.ts:45", { "_index": 1920, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["phase.start_plan", { "_index": 1886, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["phase/active", { "_index": 122, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {}, "coverage.html": {} } }], ["phase/fetch", { "_index": 1049, "title": {}, "body": { "interfaces/Fetch_2$Params.html": {}, "injectables/QualityPhaseService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["phasename", { "_index": 1080, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["phases", { "_index": 959, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/PhasesComponent.html": {} } }], ["phases'},{'name", { "_index": 410, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["phases.component.html", { "_index": 1803, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["phases.component.scss", { "_index": 1802, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["phasescomponent", { "_index": 409, "title": { "components/PhasesComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["phasetitlehtml", { "_index": 1969, "title": {}, "body": { "interfaces/QualityphaseModel.html": {} } }], ["pi", { "_index": 1363, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["pin", { "_index": 988, "title": {}, "body": { "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/functions.html": {} } }], ["pin'},{'name", { "_index": 400, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["pin.component", { "_index": 470, "title": {}, "body": { "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {} } }], ["pin.component.html", { "_index": 1508, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.scss", { "_index": 1507, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts", { "_index": 1506, "title": {}, "body": { "components/LoginPinComponent.html": {}, "coverage.html": {} } }], ["pin.component.ts:110", { "_index": 1530, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts:118", { "_index": 1542, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts:127", { "_index": 1561, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts:137", { "_index": 1545, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts:24", { "_index": 1565, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts:29", { "_index": 1564, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts:34", { "_index": 1515, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts:64", { "_index": 1550, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts:75", { "_index": 1553, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin.component.ts:89", { "_index": 1555, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pin/login", { "_index": 469, "title": {}, "body": { "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "components/LoginPinComponent.html": {}, "coverage.html": {} } }], ["pinbutton", { "_index": 1671, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pinframe", { "_index": 1664, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pipe", { "_index": 287, "title": { "pipes/OptionsPipe.html": {}, "pipes/SafePipe.html": {} }, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "pipes/OptionsPipe.html": {}, "pipes/SafePipe.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {} } }], ["pipedelimited", { "_index": 1197, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["pipes", { "_index": 1756, "title": {}, "body": { "pipes/OptionsPipe.html": {}, "pipes/SafePipe.html": {}, "overview.html": {} } }], ["pipes/options.pipe", { "_index": 497, "title": {}, "body": { "modules/AppModule.html": {} } }], ["pipes/safe", { "_index": 487, "title": {}, "body": { "modules/AppModule.html": {} } }], ["pipetransform", { "_index": 1771, "title": {}, "body": { "pipes/OptionsPipe.html": {}, "pipes/SafePipe.html": {} } }], ["plain", { "_index": 1175, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["platform", { "_index": 2223, "title": {}, "body": { "index.html": {} } }], ["plus", { "_index": 1115, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["point", { "_index": 379, "title": {}, "body": { "components/AppComponent.html": {} } }], ["pointer", { "_index": 1645, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["position", { "_index": 1455, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["possibili", { "_index": 875, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {} } }], ["post", { "_index": 995, "title": {}, "body": { "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["postmessage", { "_index": 902, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["precedenza", { "_index": 569, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["predefinito", { "_index": 609, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["prefix", { "_index": 1157, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["preme", { "_index": 1831, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["preparare", { "_index": 1556, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["prepareparams", { "_index": 1511, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["prepareparams(token", { "_index": 1554, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["presentate", { "_index": 1795, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["presentazione", { "_index": 743, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["presenti", { "_index": 83, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["previous", { "_index": 1582, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["previousmonth", { "_index": 1855, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["previousyear", { "_index": 1859, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["prima", { "_index": 1517, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["primo", { "_index": 1828, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["principale", { "_index": 811, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["private", { "_index": 24, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["prodotto", { "_index": 1901, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["produzione", { "_index": 1051, "title": {}, "body": { "interfaces/Fetch_2$Params.html": {}, "miscellaneous/functions.html": {} } }], ["programmatica", { "_index": 1820, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["programmatico", { "_index": 747, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["progress", { "_index": 1269, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["project", { "_index": 2191, "title": {}, "body": { "index.html": {} } }], ["projectplan_timeline_id", { "_index": 1075, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["properties", { "_index": 23, "title": { "properties.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "interfaces/optionType.html": {}, "properties.html": {} } }], ["propval", { "_index": 1144, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["protected", { "_index": 723, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["prova", { "_index": 222, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["provide", { "_index": 347, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {} } }], ["providedin", { "_index": 131, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "injectables/ThemeService.html": {} } }], ["providers", { "_index": 316, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "overview.html": {} } }], ["provides", { "_index": 328, "title": {}, "body": { "modules/ApiModule.html": {}, "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["provvista", { "_index": 2015, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["public", { "_index": 29, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/AuthInformationsService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["pulendo", { "_index": 1544, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["pulsante", { "_index": 1329, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["push", { "_index": 878, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["put", { "_index": 278, "title": {}, "body": { "interfaces/Add$Params.html": {}, "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["quale", { "_index": 79, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LoginPinComponent.html": {}, "components/SidenavComponent.html": {} } }], ["quali", { "_index": 1002, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {} } }], ["qualit", { "_index": 241, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {}, "interfaces/optionType.html": {} } }], ["qualityattribute", { "_index": 1017, "title": {}, "body": { "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "injectables/QualityAttributeService.html": {}, "coverage.html": {} } }], ["qualityattributemodel", { "_index": 70, "title": { "interfaces/QualityattributeModel.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "interfaces/QualityattributeModel.html": {}, "coverage.html": {}, "interfaces/optionType.html": {} } }], ["qualityattributeservice", { "_index": 34, "title": { "injectables/QualityAttributeService.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "modules/ApiModule.html": {}, "injectables/QualityAttributeService.html": {}, "coverage.html": {}, "overview.html": {} } }], ["qualityphase", { "_index": 1021, "title": {}, "body": { "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "injectables/QualityPhaseService.html": {}, "coverage.html": {} } }], ["qualityphasemodel", { "_index": 59, "title": { "interfaces/QualityphaseModel.html": {} }, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {}, "coverage.html": {} } }], ["qualityphaseservice", { "_index": 322, "title": { "injectables/QualityPhaseService.html": {} }, "body": { "modules/ApiModule.html": {}, "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityPhaseService.html": {}, "coverage.html": {}, "overview.html": {} } }], ["qualitysavelog", { "_index": 1025, "title": {}, "body": { "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {} } }], ["qualitysavelogmodel", { "_index": 243, "title": { "interfaces/QualitysavelogModel.html": {} }, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualitysavelogModel.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {} } }], ["qualitysavelogservice", { "_index": 323, "title": { "injectables/QualitySaveLogService.html": {} }, "body": { "modules/ApiModule.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "overview.html": {} } }], ["qualitystatus", { "_index": 1086, "title": {}, "body": { "interfaces/FilterQualitysavelogModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/QualitysavelogModel.html": {} } }], ["qualityvalue", { "_index": 1087, "title": {}, "body": { "interfaces/FilterQualitysavelogModel.html": {}, "components/LogModifierComponent.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "interfaces/QualitysavelogModel.html": {} } }], ["qualora", { "_index": 564, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["quando", { "_index": 581, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["quanto", { "_index": 2062, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["query", { "_index": 862, "title": {}, "body": { "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/ToolbarComponent.html": {} } }], ["query(name", { "_index": 1228, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["querylistener", { "_index": 817, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["queryparam", { "_index": 1280, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["queryparam.append(httpparams", { "_index": 1282, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["queryparameter", { "_index": 1190, "title": { "classes/QueryParameter.html": {} }, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {} } }], ["queryparameter(name", { "_index": 1230, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["r", { "_index": 289, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["r.body", { "_index": 706, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["radius", { "_index": 1621, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["rappresenta", { "_index": 1540, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["rb", { "_index": 275, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["rb.body(params.body", { "_index": 281, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["rb.build", { "_index": 284, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["rb.header('adesuitetoken", { "_index": 279, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["reactiveformsmodule", { "_index": 467, "title": {}, "body": { "modules/AppModule.html": {} } }], ["readonly", { "_index": 663, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["record", { "_index": 1007, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["red", { "_index": 1335, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["redirect", { "_index": 929, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["reference", { "_index": 2234, "title": {}, "body": { "index.html": {} } }], ["register", { "_index": 521, "title": {}, "body": { "modules/AppModule.html": {} } }], ["registerlocaledata", { "_index": 505, "title": {}, "body": { "modules/AppModule.html": {} } }], ["registerlocaledata(localeit", { "_index": 510, "title": {}, "body": { "modules/AppModule.html": {} } }], ["registerwhenstable:30000", { "_index": 532, "title": {}, "body": { "modules/AppModule.html": {} } }], ["registrationstrategy", { "_index": 531, "title": {}, "body": { "modules/AppModule.html": {} } }], ["reindirizza", { "_index": 831, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {} } }], ["reindirizzamenti", { "_index": 842, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {} } }], ["reinserire", { "_index": 2022, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["relativa", { "_index": 297, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["relative", { "_index": 54, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["relativi", { "_index": 63, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["relativo", { "_index": 293, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "components/LogModifierComponent.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["reload", { "_index": 2204, "title": {}, "body": { "index.html": {} } }], ["removelast", { "_index": 1512, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["rendering", { "_index": 1827, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["renderizzare", { "_index": 1516, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["renderizzato", { "_index": 1830, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["repeat", { "_index": 1166, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["repeat(3", { "_index": 1667, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["replace", { "_index": 1173, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["replace(\"z", { "_index": 1869, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["replaceall", { "_index": 1774, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["report", { "_index": 1268, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["reportprogress", { "_index": 1272, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["request", { "_index": 256, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {} } }], ["requestbuilder", { "_index": 255, "title": { "classes/RequestBuilder.html": {} }, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {} } }], ["requestbuilder(rooturl", { "_index": 276, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["requests", { "_index": 1218, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["reset", { "_index": 325, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "overview.html": {} } }], ["response", { "_index": 254, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "miscellaneous/typealiases.html": {} } }], ["response.data", { "_index": 1346, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["response.data.at(0", { "_index": 1348, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["response.data.length", { "_index": 1347, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {} } }], ["response.data[0", { "_index": 1599, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["response.data[0].ad_user_id", { "_index": 1600, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["response.data[0].mes_theme", { "_index": 1602, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["response.data[0].mes_theme.trim", { "_index": 1604, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["response.data[0].name", { "_index": 1601, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["response.data[0].name.trim", { "_index": 1603, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["response.error", { "_index": 1700, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["response.status", { "_index": 1701, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["response.token", { "_index": 1698, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["response.ts", { "_index": 2245, "title": {}, "body": { "miscellaneous/typealiases.html": {} } }], ["responsetype", { "_index": 285, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {} } }], ["result", { "_index": 1185, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["result.event", { "_index": 1464, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["result.replace(/%2c/g", { "_index": 1189, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["result.replace(/%3b/g", { "_index": 1188, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["result.replace(/%3d/g", { "_index": 1187, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["results", { "_index": 198, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "dependencies.html": {}, "miscellaneous/functions.html": {}, "index.html": {}, "modules.html": {}, "interfaces/optionType.html": {}, "overview.html": {}, "properties.html": {}, "routes.html": {}, "miscellaneous/typealiases.html": {}, "miscellaneous/variables.html": {} } }], ["resume", { "_index": 774, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {} } }], ["return", { "_index": 175, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "interfaces/Update$Params.html": {} } }], ["returns", { "_index": 67, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "modules/ApiModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["rgba(0", { "_index": 1672, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["ri", { "_index": 2023, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["riassunto", { "_index": 753, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {} } }], ["richiamato", { "_index": 839, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["richiesta", { "_index": 266, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["richieste", { "_index": 1063, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {} } }], ["richiesti", { "_index": 1694, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["riferimento", { "_index": 746, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["riga", { "_index": 1004, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["righe", { "_index": 1032, "title": {}, "body": { "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["right", { "_index": 798, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["riguarda", { "_index": 2063, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["rimani", { "_index": 1714, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["rimuove", { "_index": 575, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["rimuovere", { "_index": 852, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["ripristinare", { "_index": 571, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["ripulire", { "_index": 1408, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["riservata", { "_index": 1536, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["rispetto", { "_index": 578, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["risposta", { "_index": 271, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["root", { "_index": 132, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "injectables/LogoutService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "injectables/ThemeService.html": {} } }], ["root'},{'name", { "_index": 391, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["rooturl", { "_index": 263, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "injectables/BaseService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["rooturl(rooturl", { "_index": 726, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["rotate", { "_index": 2112, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["rotellina", { "_index": 1572, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["route", { "_index": 825, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["router", { "_index": 821, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {} } }], ["routermodule", { "_index": 541, "title": {}, "body": { "modules/AppRoutingModule.html": {} } }], ["routermodule.forroot(routes", { "_index": 549, "title": {}, "body": { "modules/AppRoutingModule.html": {} } }], ["routes", { "_index": 542, "title": { "routes.html": {} }, "body": { "modules/AppRoutingModule.html": {}, "overview.html": {}, "routes.html": {} } }], ["routing.module", { "_index": 430, "title": {}, "body": { "modules/AppModule.html": {} } }], ["routing.module.ts", { "_index": 540, "title": {}, "body": { "modules/AppRoutingModule.html": {} } }], ["run", { "_index": 2198, "title": {}, "body": { "index.html": {} } }], ["running", { "_index": 2214, "title": {}, "body": { "index.html": {} } }], ["rxjs", { "_index": 119, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "injectables/LanguageService.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {}, "dependencies.html": {} } }], ["rxjs/operators", { "_index": 250, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {} } }], ["s", { "_index": 1370, "title": {}, "body": { "interfaces/JsonList.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/optionType.html": {} } }], ["safehtml", { "_index": 1993, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["safepipe", { "_index": 422, "title": { "pipes/SafePipe.html": {} }, "body": { "modules/AppModule.html": {}, "pipes/SafePipe.html": {}, "coverage.html": {}, "overview.html": {} } }], ["salvare", { "_index": 1546, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["salvataggio", { "_index": 618, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["salvati", { "_index": 1496, "title": {}, "body": { "components/LogViewerComponent.html": {} } }], ["sanifica", { "_index": 2002, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["sanificare", { "_index": 1996, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["sanificata", { "_index": 1997, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["sanificazione", { "_index": 1992, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["sanitizer", { "_index": 2001, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["save", { "_index": 232, "title": {}, "body": { "interfaces/Add$Params.html": {}, "modules/ApiModule.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["scaffolding", { "_index": 2207, "title": {}, "body": { "index.html": {} } }], ["scale(1.5", { "_index": 1482, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["scalex", { "_index": 2111, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["scelta", { "_index": 758, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["scorrere", { "_index": 1797, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["screen", { "_index": 968, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["scroll", { "_index": 1892, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["scrollbar", { "_index": 1896, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["scrollingmodule", { "_index": 464, "title": {}, "body": { "modules/AppModule.html": {} } }], ["scuro", { "_index": 592, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["se", { "_index": 220, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "interfaces/Message.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["seconda", { "_index": 1801, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["seconds", { "_index": 527, "title": {}, "body": { "modules/AppModule.html": {} } }], ["securitycontext", { "_index": 1999, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["see", { "_index": 359, "title": {}, "body": { "modules/ApiModule.html": {}, "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["segnala", { "_index": 757, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["select", { "_index": 1804, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["select(id", { "_index": 1813, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["selector", { "_index": 369, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["selezionare", { "_index": 223, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["selezionata", { "_index": 201, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/PhasesComponent.html": {} } }], ["selezionato", { "_index": 1469, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["selezione", { "_index": 82, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/PhasesComponent.html": {} } }], ["sends", { "_index": 680, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["senza", { "_index": 1770, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["separated", { "_index": 1211, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["separator", { "_index": 1106, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["serialization", { "_index": 1192, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["serializevalue", { "_index": 1097, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {} } }], ["serializevalue(value", { "_index": 1105, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["serve", { "_index": 102, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/ToolbarComponent.html": {}, "index.html": {} } }], ["server", { "_index": 1360, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {}, "index.html": {} } }], ["service", { "_index": 698, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["service.ts", { "_index": 711, "title": {}, "body": { "injectables/BaseService.html": {}, "coverage.html": {} } }], ["service.ts:11", { "_index": 712, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["service.ts:18", { "_index": 713, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["service.ts:24", { "_index": 715, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["service.ts:31", { "_index": 721, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["services", { "_index": 329, "title": {}, "body": { "modules/ApiModule.html": {}, "injectables/BaseService.html": {} } }], ["services/authentication.service", { "_index": 341, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["services/operators.service", { "_index": 344, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["services/quality", { "_index": 342, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["serviceworker", { "_index": 522, "title": {}, "body": { "modules/AppModule.html": {} } }], ["serviceworkermodule", { "_index": 507, "title": {}, "body": { "modules/AppModule.html": {} } }], ["serviceworkermodule.register('ngsw", { "_index": 518, "title": {}, "body": { "modules/AppModule.html": {} } }], ["servizi", { "_index": 846, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/QualitySaveLogService.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["servizio", { "_index": 47, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/Add$Params.html": {}, "components/AppComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["sessione", { "_index": 1521, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["sessionstorage", { "_index": 576, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["sessionstorage.getitem(\"adeuserid", { "_index": 640, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["sessionstorage.getitem(\"adeusername", { "_index": 642, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {} } }], ["sessionstorage.getitem(\"adeusertheme", { "_index": 644, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {} } }], ["sessionstorage.getitem('adeuserid", { "_index": 1577, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["sessionstorage.getitem('adeusername", { "_index": 1578, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["sessionstorage.getitem('adeusertheme", { "_index": 1579, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["sessionstorage.removeitem(\"adeuserid", { "_index": 656, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["sessionstorage.removeitem(\"adeusertheme", { "_index": 657, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["sessionstorage.setitem(\"adeuserid", { "_index": 649, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["sessionstorage.setitem(\"adeusername", { "_index": 651, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["sessionstorage.setitem(\"adeusertheme", { "_index": 653, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["set", { "_index": 645, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/BaseService.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["setactivephase", { "_index": 1805, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["setactivephase(phase", { "_index": 1818, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["setinsideframe(inside", { "_index": 883, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["setrooturl(rooturl", { "_index": 720, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["sets", { "_index": 722, "title": {}, "body": { "injectables/BaseService.html": {}, "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["setter", { "_index": 616, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {} } }], ["settimana", { "_index": 2088, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["settoken(token", { "_index": 614, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["setuserid(userid", { "_index": 623, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["setusername(username", { "_index": 629, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["setusertheme(usertheme", { "_index": 633, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["shadow", { "_index": 1663, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["si", { "_index": 221, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {} } }], ["siamo", { "_index": 897, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["siano", { "_index": 916, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["sicuro", { "_index": 1715, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["side", { "_index": 879, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["sidenav", { "_index": 2008, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["sidenav'},{'name", { "_index": 412, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["sidenav.component.html", { "_index": 2010, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["sidenav.component.scss", { "_index": 2009, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["sidenavcomponent", { "_index": 411, "title": { "components/SidenavComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["sign", { "_index": 1116, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["simple", { "_index": 1154, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["single", { "_index": 1208, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["size", { "_index": 804, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["skeleton", { "_index": 1823, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["skipself", { "_index": 339, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["slider", { "_index": 2073, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["snackbar", { "_index": 1305, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["software", { "_index": 837, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {} } }], ["solid", { "_index": 1643, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["solo", { "_index": 907, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/LogoutService.html": {} } }], ["sono", { "_index": 95, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {} } }], ["soon", { "_index": 523, "title": {}, "body": { "modules/AppModule.html": {} } }], ["source", { "_index": 4, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "index.html": {}, "interfaces/optionType.html": {} } }], ["spacedelimited", { "_index": 1196, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["spacer", { "_index": 2105, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["spagnolo", { "_index": 2076, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["spin", { "_index": 1625, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["spinner", { "_index": 446, "title": {}, "body": { "modules/AppModule.html": {} } }], ["src/.../9000004", { "_index": 2182, "title": {}, "body": { "miscellaneous/functions.html": {} } }], ["src/.../app.module.ts", { "_index": 2185, "title": {}, "body": { "miscellaneous/functions.html": {} } }], ["src/.../fetch", { "_index": 2184, "title": {}, "body": { "miscellaneous/functions.html": {} } }], ["src/.../fetch.ts", { "_index": 2183, "title": {}, "body": { "miscellaneous/functions.html": {} } }], ["src/.../login.ts", { "_index": 2186, "title": {}, "body": { "miscellaneous/functions.html": {} } }], ["src/.../logout.ts", { "_index": 2187, "title": {}, "body": { "miscellaneous/functions.html": {} } }], ["src/.../request", { "_index": 2249, "title": {}, "body": { "miscellaneous/variables.html": {} } }], ["src/.../strict", { "_index": 2244, "title": {}, "body": { "miscellaneous/typealiases.html": {} } }], ["src/app/api/api", { "_index": 301, "title": {}, "body": { "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "coverage.html": {} } }], ["src/app/api/api.module.ts", { "_index": 327, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["src/app/api/api.module.ts:30", { "_index": 333, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["src/app/api/base", { "_index": 710, "title": {}, "body": { "injectables/BaseService.html": {}, "coverage.html": {} } }], ["src/app/api/fn/authentication/login.ts", { "_index": 1501, "title": {}, "body": { "interfaces/Login$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["src/app/api/fn/authentication/logout.ts", { "_index": 1703, "title": {}, "body": { "interfaces/Logout$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["src/app/api/fn/operators/fetch", { "_index": 636, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {} } }], ["src/app/api/fn/operators/fetch.ts", { "_index": 987, "title": {}, "body": { "interfaces/Fetch$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["src/app/api/fn/quality", { "_index": 231, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["src/app/api/models", { "_index": 120, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["src/app/api/models/error", { "_index": 982, "title": {}, "body": { "interfaces/ErrorModel.html": {}, "coverage.html": {} } }], ["src/app/api/models/fetch", { "_index": 997, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "coverage.html": {} } }], ["src/app/api/models/filter", { "_index": 1061, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "coverage.html": {} } }], ["src/app/api/models/operators", { "_index": 1743, "title": {}, "body": { "interfaces/OperatorsModel.html": {}, "coverage.html": {} } }], ["src/app/api/models/order", { "_index": 1776, "title": {}, "body": { "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "coverage.html": {} } }], ["src/app/api/models/qualityattribute", { "_index": 129, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/JsonList.html": {}, "interfaces/QualityattributeModel.html": {}, "coverage.html": {}, "interfaces/optionType.html": {} } }], ["src/app/api/models/qualityphase", { "_index": 1968, "title": {}, "body": { "interfaces/QualityphaseModel.html": {}, "coverage.html": {} } }], ["src/app/api/models/qualitysavelog", { "_index": 1970, "title": {}, "body": { "interfaces/QualitysavelogModel.html": {}, "coverage.html": {} } }], ["src/app/api/request", { "_index": 1091, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {}, "miscellaneous/variables.html": {} } }], ["src/app/api/services", { "_index": 127, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["src/app/api/services/authentication.service.ts", { "_index": 660, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "coverage.html": {} } }], ["src/app/api/services/authentication.service.ts:18", { "_index": 670, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["src/app/api/services/authentication.service.ts:24", { "_index": 692, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["src/app/api/services/authentication.service.ts:32", { "_index": 684, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["src/app/api/services/authentication.service.ts:44", { "_index": 674, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["src/app/api/services/authentication.service.ts:57", { "_index": 695, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["src/app/api/services/authentication.service.ts:65", { "_index": 691, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["src/app/api/services/authentication.service.ts:77", { "_index": 689, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["src/app/api/services/operators.service.ts", { "_index": 1744, "title": {}, "body": { "injectables/OperatorsService.html": {}, "coverage.html": {} } }], ["src/app/api/services/operators.service.ts:17", { "_index": 1747, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["src/app/api/services/operators.service.ts:23", { "_index": 1752, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["src/app/api/services/operators.service.ts:31", { "_index": 1751, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["src/app/api/services/operators.service.ts:41", { "_index": 1749, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["src/app/api/services/quality", { "_index": 1898, "title": {}, "body": { "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {} } }], ["src/app/api/strict", { "_index": 2246, "title": {}, "body": { "miscellaneous/typealiases.html": {} } }], ["src/app/app", { "_index": 539, "title": {}, "body": { "modules/AppRoutingModule.html": {} } }], ["src/app/app.component.ts", { "_index": 367, "title": {}, "body": { "components/AppComponent.html": {}, "coverage.html": {} } }], ["src/app/app.component.ts:9", { "_index": 377, "title": {}, "body": { "components/AppComponent.html": {} } }], ["src/app/app.module.ts", { "_index": 424, "title": {}, "body": { "modules/AppModule.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["src/app/components/confirm", { "_index": 727, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "coverage.html": {} } }], ["src/app/components/dashboard/dashboard.component.ts", { "_index": 810, "title": {}, "body": { "components/DashboardComponent.html": {}, "coverage.html": {} } }], ["src/app/components/dashboard/dashboard.component.ts:103", { "_index": 850, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["src/app/components/dashboard/dashboard.component.ts:21", { "_index": 868, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["src/app/components/dashboard/dashboard.component.ts:26", { "_index": 880, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["src/app/components/dashboard/dashboard.component.ts:31", { "_index": 861, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["src/app/components/dashboard/dashboard.component.ts:36", { "_index": 829, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["src/app/components/dashboard/dashboard.component.ts:93", { "_index": 884, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["src/app/components/dashboard/dashboard.component.ts:98", { "_index": 882, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["src/app/components/log", { "_index": 1386, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "coverage.html": {} } }], ["src/app/components/login", { "_index": 1505, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "coverage.html": {} } }], ["src/app/components/logout", { "_index": 1706, "title": {}, "body": { "components/LogoutDialogComponent.html": {}, "coverage.html": {} } }], ["src/app/components/phases/phases.component.ts", { "_index": 1794, "title": {}, "body": { "components/PhasesComponent.html": {}, "coverage.html": {} } }], ["src/app/components/phases/phases.component.ts:139", { "_index": 1812, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["src/app/components/phases/phases.component.ts:149", { "_index": 1814, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["src/app/components/phases/phases.component.ts:163", { "_index": 1819, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["src/app/components/phases/phases.component.ts:25", { "_index": 1821, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["src/app/components/phases/phases.component.ts:30", { "_index": 1806, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["src/app/components/phases/phases.component.ts:56", { "_index": 1811, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["src/app/components/sidenav/sidenav.component.ts", { "_index": 2004, "title": {}, "body": { "components/SidenavComponent.html": {}, "coverage.html": {} } }], ["src/app/components/sidenav/sidenav.component.ts:16", { "_index": 2014, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["src/app/components/sidenav/sidenav.component.ts:29", { "_index": 2019, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["src/app/components/sidenav/sidenav.component.ts:54", { "_index": 2024, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts", { "_index": 2043, "title": {}, "body": { "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:104", { "_index": 2056, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:112", { "_index": 2068, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:121", { "_index": 2064, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:146", { "_index": 2065, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:23", { "_index": 2071, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:29", { "_index": 2081, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:34", { "_index": 2089, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:39", { "_index": 2077, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:44", { "_index": 2079, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:49", { "_index": 2069, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:54", { "_index": 2078, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:59", { "_index": 2054, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:82", { "_index": 2061, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/components/toolbar/toolbar.component.ts:96", { "_index": 2060, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/models/message", { "_index": 888, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {} } }], ["src/app/models/message.ts", { "_index": 1737, "title": {}, "body": { "interfaces/Message.html": {}, "coverage.html": {} } }], ["src/app/pipes/options.pipe", { "_index": 1437, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["src/app/pipes/options.pipe.ts", { "_index": 1757, "title": {}, "body": { "pipes/OptionsPipe.html": {}, "coverage.html": {} } }], ["src/app/pipes/options.pipe.ts:20", { "_index": 1760, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["src/app/pipes/safe", { "_index": 1990, "title": {}, "body": { "pipes/SafePipe.html": {}, "coverage.html": {} } }], ["src/app/services/active", { "_index": 6, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/PhasesComponent.html": {}, "coverage.html": {} } }], ["src/app/services/auth", { "_index": 550, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["src/app/services/iframe", { "_index": 889, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "coverage.html": {} } }], ["src/app/services/language/language.service", { "_index": 2091, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/services/language/language.service.ts", { "_index": 1372, "title": {}, "body": { "injectables/LanguageService.html": {}, "coverage.html": {} } }], ["src/app/services/language/language.service.ts:16", { "_index": 1375, "title": {}, "body": { "injectables/LanguageService.html": {} } }], ["src/app/services/language/language.service.ts:28", { "_index": 1377, "title": {}, "body": { "injectables/LanguageService.html": {} } }], ["src/app/services/logout/logout.service", { "_index": 1825, "title": {}, "body": { "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["src/app/services/logout/logout.service.ts", { "_index": 1719, "title": {}, "body": { "injectables/LogoutService.html": {}, "coverage.html": {} } }], ["src/app/services/logout/logout.service.ts:13", { "_index": 1729, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["src/app/services/logout/logout.service.ts:25", { "_index": 1730, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["src/app/services/logout/logout.service.ts:33", { "_index": 1733, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["src/app/services/theme/theme.service", { "_index": 2090, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["src/app/services/theme/theme.service.ts", { "_index": 2036, "title": {}, "body": { "injectables/ThemeService.html": {}, "coverage.html": {} } }], ["src/app/services/theme/theme.service.ts:20", { "_index": 2040, "title": {}, "body": { "injectables/ThemeService.html": {} } }], ["src/app/services/theme/theme.service.ts:9", { "_index": 2038, "title": {}, "body": { "injectables/ThemeService.html": {} } }], ["stable", { "_index": 525, "title": {}, "body": { "modules/AppModule.html": {} } }], ["start_plan", { "_index": 1079, "title": {}, "body": { "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["start_plan_date", { "_index": 1849, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["start_plan_date.setfullyear(previousyear", { "_index": 1865, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["start_plan_date.setmonth(previousmonth", { "_index": 1864, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["start_plan_date.toisostring().replace(\"t", { "_index": 1868, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["start_plan_operator", { "_index": 1844, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["started", { "_index": 2189, "title": { "index.html": {} }, "body": {} }], ["startrow", { "_index": 166, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["state", { "_index": 96, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["statements", { "_index": 2131, "title": {}, "body": { "coverage.html": {} } }], ["static", { "_index": 330, "title": {}, "body": { "modules/ApiModule.html": {}, "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["stato", { "_index": 572, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["status", { "_index": 709, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {} } }], ["status_operator", { "_index": 1846, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["status_value", { "_index": 1847, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["stay", { "_index": 1709, "title": {}, "body": { "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["stored", { "_index": 2211, "title": {}, "body": { "index.html": {} } }], ["strict", { "_index": 252, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {} } }], ["stricthttpresponse", { "_index": 251, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/AuthenticationService.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/typealiases.html": {} } }], ["strictlang", { "_index": 2050, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["string", { "_index": 242, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {}, "interfaces/optionType.html": {} } }], ["string(value", { "_index": 1151, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["stringa", { "_index": 1538, "title": {}, "body": { "components/LoginPinComponent.html": {}, "pipes/OptionsPipe.html": {}, "pipes/SafePipe.html": {} } }], ["stringhe", { "_index": 85, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/ToolbarComponent.html": {} } }], ["struttura", { "_index": 984, "title": {}, "body": { "interfaces/ErrorModel.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["style", { "_index": 1131, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {} } }], ["styles", { "_index": 364, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["styleurls", { "_index": 371, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["su", { "_index": 843, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/PhasesComponent.html": {} } }], ["subject", { "_index": 111, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/LanguageService.html": {} } }], ["submit", { "_index": 1409, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["submitbutton", { "_index": 1485, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["subscribe", { "_index": 1344, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["subscribe((response", { "_index": 173, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["subscribe(attributes", { "_index": 1439, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["subscribe(params", { "_index": 893, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["substring(0", { "_index": 1870, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["subtree", { "_index": 1843, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["successo", { "_index": 1687, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["sulla", { "_index": 1809, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["super(config", { "_index": 701, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {} } }], ["super(name", { "_index": 1153, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["super.serializevalue(value", { "_index": 1186, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["support", { "_index": 2236, "title": {}, "body": { "modules.html": {} } }], ["svg", { "_index": 2237, "title": {}, "body": { "modules.html": {} } }], ["switch", { "_index": 1463, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["t", { "_index": 1985, "title": {}, "body": { "classes/RequestBuilder.html": {}, "miscellaneous/typealiases.html": {} } }], ["tabella", { "_index": 1418, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["table", { "_index": 1476, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "coverage.html": {} } }], ["tablesort(document.getelementbyid('coverage", { "_index": 2164, "title": {}, "body": { "coverage.html": {} } }], ["tabletquery", { "_index": 818, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["taking", { "_index": 1179, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["tema", { "_index": 585, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["template", { "_index": 363, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["templateurl", { "_index": 373, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["tempo", { "_index": 1574, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["test", { "_index": 2217, "title": {}, "body": { "index.html": {} } }], ["testing", { "_index": 2226, "title": {}, "body": { "index.html": {} } }], ["testo", { "_index": 1535, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {} } }], ["tests", { "_index": 2216, "title": {}, "body": { "index.html": {} } }], ["text", { "_index": 796, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LogoutDialogComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/ToolbarComponent.html": {} } }], ["textfield", { "_index": 1630, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["theme", { "_index": 1741, "title": {}, "body": { "interfaces/Message.html": {}, "components/ToolbarComponent.html": {} } }], ["theme/theme.service", { "_index": 1332, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["themeservice", { "_index": 1301, "title": { "injectables/ThemeService.html": {} }, "body": { "injectables/IframeInitializerService.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {} } }], ["this._bodycontent", { "_index": 1249, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this._bodycontenttype", { "_index": 1239, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this._header.set(name", { "_index": 1232, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this._header.values", { "_index": 1286, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this._path.set(name", { "_index": 1226, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this._path.values", { "_index": 1277, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this._query.set(name", { "_index": 1229, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this._query.values", { "_index": 1281, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this._rooturl", { "_index": 724, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["this.activeattributes", { "_index": 197, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/LogModifierComponent.html": {} } }], ["this.activeattributes.foreach((value", { "_index": 1444, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.activeattributes.length", { "_index": 1450, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.activeattributes.map((attribute", { "_index": 1441, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.activeattributes.next(attributes", { "_index": 196, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["this.activeattributesservice.getactiveattributes", { "_index": 1438, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["this.activelanguage", { "_index": 2092, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["this.activelanguage.next(language", { "_index": 1385, "title": {}, "body": { "injectables/LanguageService.html": {} } }], ["this.activephase", { "_index": 227, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["this.activephase.next(phase", { "_index": 226, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["this.activephaseservice.getactivephase().subscribe(activephase", { "_index": 137, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["this.activephaseservice.update(phase", { "_index": 1884, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["this.activephaseservice.update(response.data.at(0", { "_index": 1349, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["this.add", { "_index": 1466, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.add$response(params", { "_index": 1961, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["this.authinfoservice.clear", { "_index": 1735, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["this.authinfoservice.clearuser", { "_index": 1736, "title": {}, "body": { "injectables/LogoutService.html": {} } }], ["this.authinfoservice.token", { "_index": 162, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["this.authinfoservice.userid", { "_index": 932, "title": {}, "body": { "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {} } }], ["this.authinfoservice.username", { "_index": 1337, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["this.authinfoservice.usertheme", { "_index": 1338, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["this.authservice.login(params", { "_index": 1697, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["this.cleardialog", { "_index": 1467, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.clearuser", { "_index": 655, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["this.config.rooturl", { "_index": 725, "title": {}, "body": { "injectables/BaseService.html": {} } }], ["this.delete$response(params", { "_index": 1963, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["this.dialog.open(confirmdatadialogcomponent", { "_index": 1460, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.dialog.open(logoutdialogcomponent", { "_index": 2028, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["this.dialogref.close", { "_index": 779, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["this.displayedcolumns", { "_index": 1440, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["this.displayedcolumns.length", { "_index": 1500, "title": {}, "body": { "components/LogViewerComponent.html": {} } }], ["this.fetch$response(params", { "_index": 1755, "title": {}, "body": { "injectables/OperatorsService.html": {} } }], ["this.fetch_1$response(params", { "_index": 1965, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["this.fetch_2$response(params", { "_index": 1925, "title": {}, "body": { "injectables/QualityPhaseService.html": {} } }], ["this.fetch_3$response(params", { "_index": 1914, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["this.fetchattributes(activephase", { "_index": 138, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["this.filterjsonoptions(attribute", { "_index": 176, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["this.form", { "_index": 1443, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["this.form.addcontrol(\"control", { "_index": 1446, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.form.controls['password'].value", { "_index": 1695, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["this.form.controls['pin'].value", { "_index": 1591, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["this.form.controls['username'].value", { "_index": 1696, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["this.form.get('control", { "_index": 1453, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.form.get('pin')?.value", { "_index": 1583, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["this.form.invalid", { "_index": 1588, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["this.form.setvalue", { "_index": 1584, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["this.form.value", { "_index": 1471, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.formbuilder.group", { "_index": 1581, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["this.formdatavalue(v", { "_index": 1247, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.formdatavalue(val", { "_index": 1257, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.frompage", { "_index": 777, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["this.iframeinitservice.initialize(data", { "_index": 925, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["this.initializeform", { "_index": 1442, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.insideframe", { "_index": 896, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["this.isdark", { "_index": 2096, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["this.languageservice.activelanguage.subscribe", { "_index": 2098, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["this.languageservice.changelanguage(data.lang", { "_index": 1340, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["this.languageservice.changelanguage(language", { "_index": 2099, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["this.languageservice.changelanguage(this.activelanguage", { "_index": 2094, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["this.lastvalue", { "_index": 225, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["this.loading", { "_index": 1596, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["this.login$response(params", { "_index": 704, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["this.logout$response(params", { "_index": 708, "title": {}, "body": { "injectables/AuthenticationService.html": {} } }], ["this.logoutservice.logout", { "_index": 1361, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["this.logoutservice.logoutuserid", { "_index": 2030, "title": {}, "body": { "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["this.mobilequery", { "_index": 934, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["this.mobilequery.addeventlistener(\"change", { "_index": 941, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["this.mobilequery.removeeventlistener(\"change", { "_index": 945, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["this.mydata", { "_index": 778, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["this.name", { "_index": 1164, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.name}=${this.serializevalue(v", { "_index": 1168, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.opensnackbar((this.translateservice.instant(\"il", { "_index": 1589, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["this.opensnackbar(this.translateservice.instant(\"errore", { "_index": 1350, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["this.opensnackbar(this.translateservice.instant(\"il", { "_index": 1605, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["this.opensnackbar(this.translateservice.instant(\"inserire", { "_index": 1693, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["this.opensnackbar(this.translateservice.instant(\"la", { "_index": 1882, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["this.operationpath", { "_index": 1275, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.operatorsservice.fetch(params", { "_index": 1598, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["this.options", { "_index": 1136, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.options.explode", { "_index": 1139, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.options.style", { "_index": 1137, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.phases", { "_index": 1873, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["this.prepareparams(token", { "_index": 1597, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["this.qualityattributeservice.fetch_3(params", { "_index": 172, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["this.qualityphaseservice.fetch_2(params", { "_index": 1343, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/PhasesComponent.html": {} } }], ["this.querylistener", { "_index": 939, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["this.rooturl", { "_index": 703, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "classes/HeaderParameter.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.route.queryparams", { "_index": 892, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["this.router.navigate(['dashboard", { "_index": 1580, "title": {}, "body": { "components/LoginPinComponent.html": {} } }], ["this.router.navigate(['login/pin", { "_index": 1692, "title": {}, "body": { "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {} } }], ["this.router.navigate(['login/username", { "_index": 933, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "injectables/LogoutService.html": {} } }], ["this.sanitizer.sanitize(securitycontext.html", { "_index": 2003, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["this.serializevalue(array", { "_index": 1214, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.serializevalue(propval", { "_index": 1204, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.serializevalue(propval).split(separator).join(encodeuricomponent(separator", { "_index": 1146, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.serializevalue(this.value", { "_index": 1198, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.serializevalue(v", { "_index": 1195, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.serializevalue(v).split(separator).join(encodeuricomponent(separator))).join(separator", { "_index": 1141, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.serializevalue(value", { "_index": 1172, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.snackbar.open(message", { "_index": 1333, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["this.tabletquery", { "_index": 937, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["this.tabletquery.addeventlistener(\"change", { "_index": 942, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["this.tabletquery.removeeventlistener(\"change", { "_index": 944, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["this.themeservice.toggletheme(data.theme", { "_index": 1366, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["this.themeservice.toggletheme(this.isdark", { "_index": 2097, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["this.token", { "_index": 637, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["this.translateservice.setdefaultlang('it", { "_index": 384, "title": {}, "body": { "components/AppComponent.html": {} } }], ["this.translateservice.use(localstorage.getitem('lang", { "_index": 385, "title": {}, "body": { "components/AppComponent.html": {}, "injectables/LanguageService.html": {} } }], ["this.update", { "_index": 1473, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["this.update$response(params", { "_index": 1967, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["this.update(response.data!.map((attribute", { "_index": 174, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["this.user", { "_index": 2095, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["this.userid", { "_index": 639, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["this.username", { "_index": 641, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["this.usertheme", { "_index": 643, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["this.value", { "_index": 1156, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["this.value[key", { "_index": 1202, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["throw", { "_index": 350, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["tipi", { "_index": 2005, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["tipo", { "_index": 75, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["title", { "_index": 773, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["titlecase", { "_index": 2102, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["titolo", { "_index": 752, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["toappend", { "_index": 1255, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["today", { "_index": 2051, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["toggle", { "_index": 463, "title": {}, "body": { "modules/AppModule.html": {}, "components/ToolbarComponent.html": {} } }], ["toggletheme", { "_index": 2037, "title": {}, "body": { "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["toggletheme(dark", { "_index": 2039, "title": {}, "body": { "injectables/ThemeService.html": {} } }], ["toggletheme(undefined", { "_index": 2066, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["togliendo", { "_index": 1413, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["togliere", { "_index": 1761, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["token", { "_index": 161, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["token(token", { "_index": 646, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["token/id", { "_index": 927, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["toolbar", { "_index": 414, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["toolbar.component.html", { "_index": 2047, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["toolbar.component.scss", { "_index": 2046, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["toolbarcomponent", { "_index": 413, "title": { "components/ToolbarComponent.html": {} }, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "coverage.html": {}, "overview.html": {} } }], ["tooltip", { "_index": 1487, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["top", { "_index": 536, "title": {}, "body": { "modules/AppModule.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["totale", { "_index": 1031, "title": {}, "body": { "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["totalrows", { "_index": 1028, "title": {}, "body": { "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["tradotta", { "_index": 2059, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["traduzione", { "_index": 383, "title": {}, "body": { "components/AppComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["traduzioni", { "_index": 1309, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["tramite", { "_index": 901, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["tranne", { "_index": 1853, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["transform", { "_index": 1481, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "pipes/OptionsPipe.html": {}, "pipes/SafePipe.html": {}, "components/ToolbarComponent.html": {} } }], ["transform(option", { "_index": 1759, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["transform(style", { "_index": 1994, "title": {}, "body": { "pipes/SafePipe.html": {} } }], ["transition", { "_index": 1646, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["translate", { "_index": 382, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["translate/core", { "_index": 381, "title": {}, "body": { "components/AppComponent.html": {}, "modules/AppModule.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "dependencies.html": {} } }], ["translate/http", { "_index": 501, "title": {}, "body": { "modules/AppModule.html": {}, "dependencies.html": {} } }], ["translatehttploader", { "_index": 500, "title": {}, "body": { "modules/AppModule.html": {} } }], ["translatehttploader(http", { "_index": 512, "title": {}, "body": { "modules/AppModule.html": {} } }], ["translateloader", { "_index": 498, "title": {}, "body": { "modules/AppModule.html": {} } }], ["translatemodule", { "_index": 499, "title": {}, "body": { "modules/AppModule.html": {} } }], ["translatemodule.forroot", { "_index": 513, "title": {}, "body": { "modules/AppModule.html": {} } }], ["translateservice", { "_index": 376, "title": {}, "body": { "components/AppComponent.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["translation", { "_index": 2119, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["tre", { "_index": 2016, "title": {}, "body": { "components/SidenavComponent.html": {} } }], ["tree", { "_index": 366, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["triggerarne", { "_index": 749, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["trim", { "_index": 1775, "title": {}, "body": { "pipes/OptionsPipe.html": {} } }], ["trovare", { "_index": 295, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {} } }], ["trovate", { "_index": 1033, "title": {}, "body": { "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["trovati", { "_index": 1008, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["true", { "_index": 895, "title": {}, "body": { "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "injectables/ThemeService.html": {} } }], ["ts", { "_index": 1183, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["tslib", { "_index": 2176, "title": {}, "body": { "dependencies.html": {} } }], ["tslint:disable", { "_index": 335, "title": {}, "body": { "modules/ApiModule.html": {} } }], ["tutti", { "_index": 917, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["tutto", { "_index": 1852, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["type", { "_index": 45, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "injectables/ApiConfiguration.html": {}, "interfaces/ApiConfigurationParams.html": {}, "modules/ApiModule.html": {}, "components/AppComponent.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Logout$Params.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "injectables/OperatorsService.html": {}, "pipes/OptionsPipe.html": {}, "interfaces/OrderOperatorsModel.html": {}, "interfaces/OrderQualityattributeModel.html": {}, "interfaces/OrderQualityphaseModel.html": {}, "interfaces/OrderQualitysavelogModel.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "pipes/SafePipe.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {}, "interfaces/optionType.html": {}, "miscellaneous/typealiases.html": {} } }], ["typealiases", { "_index": 2242, "title": { "miscellaneous/typealiases.html": {} }, "body": {} }], ["typeof", { "_index": 1142, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["types", { "_index": 1264, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["ultima", { "_index": 216, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["un", { "_index": 73, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "interfaces/Add$Params.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/ErrorModel.html": {}, "interfaces/Fetch_1$Params.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "interfaces/Message.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "pipes/SafePipe.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {}, "interfaces/optionType.html": {} } }], ["una", { "_index": 998, "title": {}, "body": { "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/PhasesComponent.html": {}, "interfaces/QualityphaseModel.html": {}, "pipes/SafePipe.html": {}, "miscellaneous/functions.html": {} } }], ["undefined", { "_index": 160, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["unit", { "_index": 2215, "title": {}, "body": { "index.html": {} } }], ["update", { "_index": 31, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "components/LogModifierComponent.html": {}, "injectables/QualitySaveLogService.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["update$params", { "_index": 1951, "title": { "interfaces/Update$Params.html": {} }, "body": { "injectables/QualitySaveLogService.html": {}, "interfaces/Update$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["update$response", { "_index": 1936, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["update$response(params", { "_index": 1953, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["update(attributes", { "_index": 106, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["update(http", { "_index": 2125, "title": {}, "body": { "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["update(params", { "_index": 1950, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["update(phase", { "_index": 209, "title": {}, "body": { "injectables/ActivePhaseService.html": {} } }], ["update(this.http", { "_index": 1966, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["update.path", { "_index": 2126, "title": {}, "body": { "interfaces/Update$Params.html": {} } }], ["update.ts", { "_index": 2123, "title": {}, "body": { "interfaces/Update$Params.html": {}, "coverage.html": {}, "miscellaneous/functions.html": {} } }], ["updatedialog", { "_index": 1398, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["updatedialog.afterclosed().subscribe((result", { "_index": 1472, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["updatepath", { "_index": 1931, "title": {}, "body": { "injectables/QualitySaveLogService.html": {} } }], ["uploads", { "_index": 1270, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["url", { "_index": 264, "title": {}, "body": { "interfaces/Add$Params.html": {}, "injectables/BaseService.html": {}, "components/DashboardComponent.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "classes/HeaderParameter.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["urlencoded", { "_index": 1243, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["usare", { "_index": 2080, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["uscire", { "_index": 1717, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["use", { "_index": 686, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "index.html": {} } }], ["used", { "_index": 1161, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["usefactory", { "_index": 514, "title": {}, "body": { "modules/AppModule.html": {} } }], ["user", { "_index": 2052, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["user_id", { "_index": 1742, "title": {}, "body": { "interfaces/Message.html": {} } }], ["userid", { "_index": 554, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {} } }], ["userid(userid", { "_index": 648, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["username", { "_index": 555, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "interfaces/Login$Params.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "interfaces/Message.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {}, "miscellaneous/functions.html": {} } }], ["username'},{'name", { "_index": 402, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["username(username", { "_index": 650, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["username.component", { "_index": 434, "title": {}, "body": { "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {} } }], ["username.component.html", { "_index": 1683, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["username.component.scss", { "_index": 1682, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["username.component.ts", { "_index": 1681, "title": {}, "body": { "components/LoginUsernameComponent.html": {}, "coverage.html": {} } }], ["username.component.ts:22", { "_index": 1691, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["username.component.ts:27", { "_index": 1690, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["username.component.ts:32", { "_index": 1685, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["username.component.ts:53", { "_index": 1688, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["username.component.ts:65", { "_index": 1689, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["username.component.ts:76", { "_index": 1686, "title": {}, "body": { "components/LoginUsernameComponent.html": {} } }], ["username/login", { "_index": 433, "title": {}, "body": { "modules/AppModule.html": {}, "modules/AppRoutingModule.html": {}, "components/LoginUsernameComponent.html": {}, "coverage.html": {} } }], ["userpin", { "_index": 1071, "title": {}, "body": { "interfaces/FilterOperatorsModel.html": {}, "components/LoginPinComponent.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/OrderOperatorsModel.html": {} } }], ["usertheme", { "_index": 556, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["usertheme(usertheme", { "_index": 652, "title": {}, "body": { "injectables/AuthInformationsService.html": {} } }], ["usevalue", { "_index": 348, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {} } }], ["using", { "_index": 1206, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["utente", { "_index": 574, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/DashboardComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/LogoutService.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["utilit", { "_index": 260, "title": {}, "body": { "interfaces/Add$Params.html": {}, "interfaces/Delete$Params.html": {}, "interfaces/Fetch$Params.html": {}, "interfaces/Fetch_1$Params.html": {}, "interfaces/Fetch_2$Params.html": {}, "interfaces/Fetch_3$Params.html": {}, "interfaces/Login$Params.html": {}, "interfaces/Logout$Params.html": {}, "interfaces/Update$Params.html": {}, "miscellaneous/functions.html": {} } }], ["utilizzo", { "_index": 1318, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["v", { "_index": 1193, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["val", { "_index": 1245, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["validatori", { "_index": 1416, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["validators", { "_index": 1435, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["validators.required", { "_index": 1449, "title": {}, "body": { "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["valido", { "_index": 1364, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LoginPinComponent.html": {} } }], ["valore", { "_index": 619, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {}, "pipes/OptionsPipe.html": {} } }], ["valori", { "_index": 876, "title": {}, "body": { "components/DashboardComponent.html": {}, "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["value", { "_index": 90, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/ApiConfiguration.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/AuthenticationService.html": {}, "components/DashboardComponent.html": {}, "interfaces/FilterOperatorsModel.html": {}, "interfaces/FilterQualityattributeModel.html": {}, "interfaces/FilterQualityphaseModel.html": {}, "interfaces/FilterQualitysavelogModel.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "interfaces/JsonList.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "injectables/OperatorsService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "interfaces/QualityattributeModel.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/ToolbarComponent.html": {}, "interfaces/optionType.html": {}, "miscellaneous/variables.html": {} } }], ["value.attributename", { "_index": 1452, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["value.attributevaluetype", { "_index": 1445, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["value.join", { "_index": 1169, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["value.map(v", { "_index": 1140, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["value.optionvalue?.value.key.at(position", { "_index": 1458, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["value.optionvalue?.value.value.findindex((value", { "_index": 1456, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["value.type", { "_index": 1240, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["value?.tostring", { "_index": 169, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["value[key", { "_index": 1145, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["values", { "_index": 1117, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["var", { "_index": 389, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["vari", { "_index": 1316, "title": {}, "body": { "injectables/IframeInitializerService.html": {} } }], ["variabile", { "_index": 1522, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "injectables/ThemeService.html": {} } }], ["variable", { "_index": 1176, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "coverage.html": {} } }], ["variables", { "_index": 2248, "title": { "miscellaneous/variables.html": {} }, "body": { "miscellaneous/variables.html": {} } }], ["variables.scss", { "_index": 1617, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["variant", { "_index": 1178, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["varie", { "_index": 81, "title": {}, "body": { "injectables/ActiveAttributesService.html": {} } }], ["vecchi", { "_index": 1414, "title": {}, "body": { "components/LogModifierComponent.html": {} } }], ["verifico", { "_index": 914, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["version", { "_index": 2195, "title": {}, "body": { "index.html": {}, "properties.html": {} } }], ["vertical", { "_index": 2116, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["verticalmente", { "_index": 1798, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["verticalposition", { "_index": 535, "title": {}, "body": { "modules/AppModule.html": {} } }], ["vi", { "_index": 1519, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["via", { "_index": 2219, "title": {}, "body": { "index.html": {} } }], ["video", { "_index": 603, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LogModifierComponent.html": {}, "pipes/OptionsPipe.html": {} } }], ["viene", { "_index": 838, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["viewer", { "_index": 966, "title": {}, "body": { "components/DashboardComponent.html": {}, "components/LogViewerComponent.html": {} } }], ["viewer'},{'name", { "_index": 408, "title": {}, "body": { "components/AppComponent.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["viewer.component", { "_index": 477, "title": {}, "body": { "modules/AppModule.html": {} } }], ["viewer.component.html", { "_index": 1493, "title": {}, "body": { "components/LogViewerComponent.html": {} } }], ["viewer.component.scss", { "_index": 1492, "title": {}, "body": { "components/LogViewerComponent.html": {} } }], ["viewer.component.ts", { "_index": 1491, "title": {}, "body": { "components/LogViewerComponent.html": {}, "coverage.html": {} } }], ["viewer.component.ts:19", { "_index": 1494, "title": {}, "body": { "components/LogViewerComponent.html": {} } }], ["viewer.component.ts:32", { "_index": 1495, "title": {}, "body": { "components/LogViewerComponent.html": {} } }], ["viewer.component.ts:48", { "_index": 1498, "title": {}, "body": { "components/LogViewerComponent.html": {} } }], ["viewer/log", { "_index": 476, "title": {}, "body": { "modules/AppModule.html": {}, "components/LogViewerComponent.html": {}, "coverage.html": {} } }], ["viewport", { "_index": 1893, "title": {}, "body": { "components/PhasesComponent.html": {} } }], ["visibility", { "_index": 1610, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["visibility_off", { "_index": 1609, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {} } }], ["vista", { "_index": 830, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["visualizza", { "_index": 1900, "title": {}, "body": { "injectables/QualityAttributeService.html": {} } }], ["visualizzano", { "_index": 1029, "title": {}, "body": { "interfaces/FetchResponseOperatorsModel.html": {}, "interfaces/FetchResponseQualityattributeModel.html": {}, "interfaces/FetchResponseQualityphaseModel.html": {}, "interfaces/FetchResponseQualitysavelogModel.html": {} } }], ["visualizzare", { "_index": 602, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "interfaces/FetchRequestOperatorsModel.html": {}, "interfaces/FetchRequestQualityattributeModel.html": {}, "interfaces/FetchRequestQualityphaseModel.html": {}, "interfaces/FetchRequestQualitysavelogModel.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/PhasesComponent.html": {} } }], ["visualizzata", { "_index": 859, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["visualizzazione", { "_index": 204, "title": {}, "body": { "injectables/ActivePhaseService.html": {}, "components/DashboardComponent.html": {}, "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["void", { "_index": 68, "title": {}, "body": { "injectables/ActiveAttributesService.html": {}, "injectables/ActivePhaseService.html": {}, "injectables/AuthInformationsService.html": {}, "injectables/BaseService.html": {}, "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "classes/HeaderParameter.html": {}, "injectables/IframeInitializerService.html": {}, "injectables/LanguageService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "injectables/LogoutService.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "components/PhasesComponent.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {}, "components/SidenavComponent.html": {}, "injectables/ThemeService.html": {}, "components/ToolbarComponent.html": {} } }], ["voler", { "_index": 1716, "title": {}, "body": { "components/LogoutDialogComponent.html": {} } }], ["webkit", { "_index": 1623, "title": {}, "body": { "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["weight", { "_index": 806, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["whether", { "_index": 1267, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["whichever", { "_index": 528, "title": {}, "body": { "modules/AppModule.html": {} } }], ["white", { "_index": 794, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {} } }], ["whose", { "_index": 1209, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["widget", { "_index": 909, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["width", { "_index": 786, "title": {}, "body": { "components/ConfirmDataDialogComponent.html": {}, "components/DashboardComponent.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/LogoutDialogComponent.html": {}, "components/PhasesComponent.html": {}, "components/SidenavComponent.html": {}, "components/ToolbarComponent.html": {} } }], ["window.addeventlistener(\"message", { "_index": 905, "title": {}, "body": { "components/DashboardComponent.html": {} } }], ["without", { "_index": 1205, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["wm", { "_index": 608, "title": {}, "body": { "injectables/AuthInformationsService.html": {}, "components/LoginPinComponent.html": {}, "interfaces/Message.html": {}, "components/ToolbarComponent.html": {} } }], ["worker", { "_index": 509, "title": {}, "body": { "modules/AppModule.html": {}, "dependencies.html": {} } }], ["worker.js", { "_index": 519, "title": {}, "body": { "modules/AppModule.html": {} } }], ["ww", { "_index": 2104, "title": {}, "body": { "components/ToolbarComponent.html": {} } }], ["www", { "_index": 1242, "title": {}, "body": { "classes/HeaderParameter.html": {}, "classes/Parameter.html": {}, "classes/ParameterCodec.html": {}, "interfaces/ParameterOptions.html": {}, "classes/PathParameter.html": {}, "classes/QueryParameter.html": {}, "classes/RequestBuilder.html": {} } }], ["x", { "_index": 1351, "title": {}, "body": { "injectables/IframeInitializerService.html": {}, "components/LogModifierComponent.html": {}, "components/LogViewerComponent.html": {}, "components/LoginPinComponent.html": {}, "components/LoginUsernameComponent.html": {}, "components/PhasesComponent.html": {} } }], ["y", { "_index": 1369, "title": {}, "body": { "interfaces/JsonList.html": {}, "components/LogModifierComponent.html": {}, "interfaces/OperatorsModel.html": {}, "interfaces/QualityattributeModel.html": {}, "interfaces/QualityphaseModel.html": {}, "interfaces/QualitysavelogModel.html": {}, "interfaces/optionType.html": {} } }], ["yes", { "_index": 682, "title": {}, "body": { "injectables/AuthenticationService.html": {}, "injectables/OperatorsService.html": {}, "injectables/QualityAttributeService.html": {}, "injectables/QualityPhaseService.html": {}, "injectables/QualitySaveLogService.html": {}, "classes/RequestBuilder.html": {}, "miscellaneous/functions.html": {} } }], ["zone.js", { "_index": 2178, "title": {}, "body": { "dependencies.html": {} } }], ["zoom", { "_index": 324, "title": {}, "body": { "modules/ApiModule.html": {}, "modules/AppModule.html": {}, "overview.html": {} } }]], "pipeline": ["stemmer"] },
    "store": { "injectables/ActiveAttributesService.html": { "url": "injectables/ActiveAttributesService.html", "title": "injectable - ActiveAttributesService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveAttributesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/active-attributes/active-attributes.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce gli attributi attivi\nAd ogni cambio di fase, aggiorna gli attributi\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeAttributes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchAttributes\n                            \n                            \n                                    Private\n                                filterJsonOptions\n                            \n                            \n                                    Public\n                                getActiveAttributes\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qualityAttributeService: QualityAttributeService, authInfoService: AuthInformationsService, activePhaseService: ActivePhaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/active-attributes/active-attributes.service.ts:21\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce gli attributi attivi\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        qualityAttributeService\n                                                  \n                                                        \n                                                                        QualityAttributeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per l'ottenimento degli attributi attivi\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        activePhaseService\n                                                  \n                                                        \n                                                                        ActivePhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire la fase attiva\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchAttributes\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchAttributes(activePhase: QualityphaseModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/active-attributes/active-attributes.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Metodo per ottenere gli attributi relativi alla fase attualmente attiva\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                activePhase\n                                            \n                                                            QualityphaseModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Fase attualmente attiva\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filterJsonOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    filterJsonOptions(attribute: QualityattributeModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/active-attributes/active-attributes.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Metodo per ottenere le opzioni per un attributo di tipo \"lista\"\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                attribute\n                                            \n                                                            QualityattributeModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Attributo per il quale individuare le varie opzioni di selezione (presenti come stringhe negli array 'key' e 'value' all'avvio)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         QualityattributeModel\n\n                        \n                            \n                                L'attributo in ingresso al quale le opzioni sono state modellate\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveAttributes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveAttributes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/active-attributes/active-attributes.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Metodo per ottenere un oggetto osservabile degli attributi attivi\n\n\n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto osservabile, serve per eseguire codice al cambiamento degli attributi attivi\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(attributes: Array)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/active-attributes/active-attributes.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Metodo per aggiornare gli attributi attivi\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                attributes\n                                            \n                                                            Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuovi attributi attivi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject>\n\n                    \n                \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/active-attributes/active-attributes.service.ts:21\n                        \n                    \n\n            \n                \n                    Subject che emette gli attributi attivi dopo ogni cambio di fase attiva\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { QualityattributeModel, QualityphaseModel } from 'src/app/api/models';\nimport { ActivePhaseService } from '../active-phase/active-phase.service';\nimport { AuthInformationsService } from '../auth-informations/auth-informations.service';\nimport { QualityAttributeService } from 'src/app/api/services';\nimport { JsonList } from 'src/app/api/models/qualityattribute-model';\n\n/**\n * Classe che gestisce gli attributi attivi\n * Ad ogni cambio di fase, aggiorna gli attributi\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveAttributesService {\n\n  /**\n   * Subject che emette gli attributi attivi dopo ogni cambio di fase attiva\n   */\n  private activeAttributes: Subject> = new Subject>();\n\n  /**\n   * Costruttore della classe che gestisce gli attributi attivi\n   * @param qualityAttributeService Servizio per l'ottenimento degli attributi attivi\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione \n   * @param activePhaseService Servizio per gestire la fase attiva\n   */\n  constructor(private qualityAttributeService: QualityAttributeService, private authInfoService: AuthInformationsService, private activePhaseService: ActivePhaseService) {\n    this.activePhaseService.getActivePhase().subscribe(activePhase => { this.fetchAttributes(activePhase) });\n  }\n\n  /**\n * Metodo per ottenere gli attributi relativi alla fase attualmente attiva\n * @param activePhase Fase attualmente attiva\n */\n  private fetchAttributes(activePhase: QualityphaseModel): void {\n\n    const fieldName = \"m_product_category_id\" as 'optionvalue' | 'groupname' | 'groupdescription' | 'c_project_attribute_group_id' | 'attributeseqno' | 'attributedescription' | 'ad_reference_id' | 'm_product_category_id' | 'm_product_id' | 'attributevaluetype' | 'attributevalue' | 'attributename'\n    const value = activePhase.m_product_category_id;\n    const operator = \"equals\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined;\n    const token = this.authInfoService.Token;\n\n    const params = {\n      \"AdesuiteToken\": token,\n      \"body\": {\n        \"startRow\": 0,\n        \"criteria\": [\n          {\n            \"fieldName\": fieldName as 'optionvalue' | 'groupname' | 'groupdescription' | 'c_project_attribute_group_id' | 'attributeseqno' | 'attributedescription' | 'ad_reference_id' | 'm_product_category_id' | 'm_product_id' | 'attributevaluetype' | 'attributevalue' | 'attributename',\n            \"value\": value?.toString(),\n            \"operator\": operator as 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals'\n          },\n        ],\n        \"endRow\": 50\n      }\n    };\n\n    this.qualityAttributeService.fetch_3(params)\n      .subscribe((response) => {\n        this.update(response.data!.map((attribute) => { return this.filterJsonOptions(attribute) }));\n      });\n  }\n\n\n  /**\n   * Metodo per ottenere le opzioni per un attributo di tipo \"lista\"\n   * @param attribute Attributo per il quale individuare le varie opzioni di selezione (presenti come stringhe negli array 'key' e 'value' all'avvio)\n   * @returns L'attributo in ingresso al quale le opzioni sono state modellate\n   */\n  private filterJsonOptions(attribute: QualityattributeModel): QualityattributeModel {\n    let json = attribute.optionvalue?.value.toString();\n    let dataList: JsonList = {\n      key: [],\n      value: []\n    };\n    if (json != undefined) {\n      const parsedJson = JSON.parse(json);\n      dataList = {\n        key: parsedJson.key,\n        value: parsedJson.value,\n      };\n    }\n\n    return {\n      ad_reference_id: attribute.ad_reference_id,\n      attributedescription: attribute.attributedescription,\n      attributename: attribute.attributename,\n      attributeseqno: attribute.attributeseqno,\n      attributevalue: attribute.attributevalue,\n      attributevaluetype: attribute.attributevaluetype,\n      c_project_attribute_group_id: attribute.c_project_attribute_group_id,\n      groupdescription: attribute.groupdescription,\n      groupname: attribute.groupname,\n      m_product_category_id: attribute.m_product_category_id,\n      m_product_id: attribute.m_product_id,\n      optionvalue: {\n        type: attribute.optionvalue?.type!,\n        value: dataList\n      }\n    }\n\n  }\n\n  /**\n   * Metodo per aggiornare gli attributi attivi\n   * @param attributes Nuovi attributi attivi\n   */\n  public update(attributes: Array): void {\n    this.activeAttributes.next(attributes);\n  }\n\n  /**\n   * Metodo per ottenere un oggetto osservabile degli attributi attivi\n   * @returns Oggetto osservabile, serve per eseguire codice al cambiamento degli attributi attivi\n   */\n  public getActiveAttributes(): Observable> {\n    return this.activeAttributes;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/ActivePhaseService.html": { "url": "injectables/ActivePhaseService.html", "title": "injectable - ActivePhaseService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivePhaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/active-phase/active-phase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce la fase attualmente selezionata\nServe per notificare il component di visualizzazione degli attributi\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activePhase\n                            \n                            \n                                    Private\n                                lastValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActivePhase\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/active-phase/active-phase.service.ts:22\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce la fase attiva\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActivePhase\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActivePhase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/active-phase/active-phase.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Metodo per ottenere un oggetto osservabile della fase attiva\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Oggetto osservabile, serve per eseguire codice al cambiamento della fase attiva\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(phase: QualityphaseModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/active-phase/active-phase.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Metodo per aggiornare la fase attualmente selezionata\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                phase\n                                            \n                                                            QualityphaseModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuova fase selezionata\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activePhase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/active-phase/active-phase.service.ts:17\n                        \n                    \n\n            \n                \n                    Attributo che contiene un Subject della fase attiva\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QualityphaseModel\n\n                    \n                \n                \n                    \n                        Default value : new Object()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/active-phase/active-phase.service.ts:22\n                        \n                    \n\n            \n                \n                    Ultima fase selezionata, serve per evitare di fare il fetch di attributi se si prova a selezionare la fase già selezionata\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { QualityphaseModel } from 'src/app/api/models';\n\n/**\n * Classe che gestisce la fase attualmente selezionata\n * Serve per notificare il component di visualizzazione degli attributi\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivePhaseService {\n\n  /**\n   * Attributo che contiene un Subject della fase attiva\n   */\n  private activePhase: Subject = new Subject();\n\n  /**\n   * Ultima fase selezionata, serve per evitare di fare il fetch di attributi se si prova a selezionare la fase già selezionata\n   */\n  private lastValue: QualityphaseModel = new Object();\n\n  /**\n   * Costruttore della classe che gestisce la fase attiva\n   */\n  constructor() { }\n\n  /**\n   * Metodo per aggiornare la fase attualmente selezionata\n   * @param phase Nuova fase selezionata\n   */\n  public update(phase: QualityphaseModel): void {\n    if (phase != this.lastValue) {\n      this.activePhase.next(phase);\n      this.lastValue = phase;\n    }\n  }\n\n  /**\n   * Metodo per ottenere un oggetto osservabile della fase attiva\n   * @returns Oggetto osservabile, serve per eseguire codice al cambiamento della fase attiva\n   */\n  public getActivePhase(): Observable {\n    return this.activePhase;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Add$Params.html": { "url": "interfaces/Add$Params.html", "title": "interface - Add$Params", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Add$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-save-log/9000004-add.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per inserire un nuovo log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         QualitysavelogModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QualitysavelogModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { QualitysavelogModel } from '../../models/qualitysavelog-model';\n\n/**\n * Interfaccia che definisce i parametri per inserire un nuovo log di qualità\n */\nexport interface Add$Params {\n  AdesuiteToken: string;\n  body: QualitysavelogModel\n}\n\n/**\n * Funzione di utilità per aggiungere un log di qualità per la fase attiva\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - il log inserito\n */\nexport function Add(http: HttpClient, rootUrl: string, params: Add$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, Add.PATH, 'put');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'inserimento di un log di qualità per la fase attiva\n */\nAdd.PATH = '/9000004/qualitysavelog/add';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/ApiConfiguration.html": { "url": "injectables/ApiConfiguration.html", "title": "injectable - ApiConfiguration", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/api-configuration.ts\n        \n\n\n            \n                Description\n            \n            \n                Global configuration\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://test.adesuite.com/faltracco/rest/openapi/operation'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/api-configuration.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Global configuration\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = 'https://test.adesuite.com/faltracco/rest/openapi/operation';\n}\n\n/**\n * Parameters for `ApiModule.forRoot()`\n */\nexport interface ApiConfigurationParams {\n  rootUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/ApiConfigurationParams.html": { "url": "interfaces/ApiConfigurationParams.html", "title": "interface - ApiConfigurationParams", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiConfigurationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/api-configuration.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for ApiModule.forRoot()\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            rootUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Global configuration\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = 'https://test.adesuite.com/faltracco/rest/openapi/operation';\n}\n\n/**\n * Parameters for `ApiModule.forRoot()`\n */\nexport interface ApiConfigurationParams {\n  rootUrl?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "modules/ApiModule.html": { "url": "modules/ApiModule.html", "title": "module - ApiModule", "body": "\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_providers\n\n\n\n\nApiConfiguration\n\nApiConfiguration\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nApiConfiguration->ApiModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nApiModule -->\n\nAuthenticationService->ApiModule\n\n\n\n\n\nOperatorsService\n\nOperatorsService\n\nApiModule -->\n\nOperatorsService->ApiModule\n\n\n\n\n\nQualityAttributeService\n\nQualityAttributeService\n\nApiModule -->\n\nQualityAttributeService->ApiModule\n\n\n\n\n\nQualityPhaseService\n\nQualityPhaseService\n\nApiModule -->\n\nQualityPhaseService->ApiModule\n\n\n\n\n\nQualitySaveLogService\n\nQualitySaveLogService\n\nApiModule -->\n\nQualitySaveLogService->ApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/api/api.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module that provides all services and configuration.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiConfiguration\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            OperatorsService\n                        \n                        \n                            QualityAttributeService\n                        \n                        \n                            QualityPhaseService\n                        \n                        \n                            QualitySaveLogService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(params: ApiConfigurationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/api.module.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            ApiConfigurationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /* tslint:disable */\n/* eslint-disable */\nimport { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiConfiguration, ApiConfigurationParams } from './api-configuration';\n\nimport { AuthenticationService } from './services/authentication.service';\nimport { QualitySaveLogService } from './services/quality-save-log.service';\nimport { OperatorsService } from './services/operators.service';\nimport { QualityPhaseService } from './services/quality-phase.service';\nimport { QualityAttributeService } from './services/quality-attribute.service';\n\n/**\n * Module that provides all services and configuration.\n */\n@NgModule({\n  imports: [],\n  exports: [],\n  declarations: [],\n  providers: [\n    AuthenticationService,\n    QualitySaveLogService,\n    OperatorsService,\n    QualityPhaseService,\n    QualityAttributeService,\n    ApiConfiguration\n  ],\n})\nexport class ApiModule {\n  static forRoot(params: ApiConfigurationParams): ModuleWithProviders {\n    return {\n      ngModule: ApiModule,\n      providers: [\n        {\n          provide: ApiConfiguration,\n          useValue: params\n        }\n      ]\n    }\n  }\n\n  constructor(\n    @Optional() @SkipSelf() parentModule: ApiModule,\n    @Optional() http: HttpClient\n  ) {\n    if (parentModule) {\n      throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n    }\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n        'See also https://github.com/angular/angular/issues/20575');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/AppComponent.html": { "url": "components/AppComponent.html", "title": "component - AppComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di entry point\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  /**\n   * Costruttore della classe di entry point\n   * @param translate Servizio di traduzione di ngx-translate\n   */\n  constructor(private translateService: TranslateService) {\n    this.translateService.setDefaultLang('it');\n    this.translateService.use(localStorage.getItem('lang') || 'it');\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "modules/AppModule.html": { "url": "modules/AppModule.html", "title": "module - AppModule", "body": "\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmDataDialogComponent\n\nConfirmDataDialogComponent\n\nAppModule -->\n\nConfirmDataDialogComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLogModifierComponent\n\nLogModifierComponent\n\nAppModule -->\n\nLogModifierComponent->AppModule\n\n\n\n\n\nLogViewerComponent\n\nLogViewerComponent\n\nAppModule -->\n\nLogViewerComponent->AppModule\n\n\n\n\n\nLoginPinComponent\n\nLoginPinComponent\n\nAppModule -->\n\nLoginPinComponent->AppModule\n\n\n\n\n\nLoginUsernameComponent\n\nLoginUsernameComponent\n\nAppModule -->\n\nLoginUsernameComponent->AppModule\n\n\n\n\n\nLogoutDialogComponent\n\nLogoutDialogComponent\n\nAppModule -->\n\nLogoutDialogComponent->AppModule\n\n\n\n\n\nOptionsPipe\n\nOptionsPipe\n\nAppModule -->\n\nOptionsPipe->AppModule\n\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\nAppModule -->\n\nPhasesComponent->AppModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nAppModule -->\n\nSafePipe->AppModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nAppModule -->\n\nSidenavComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ConfirmDataDialogComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            LogModifierComponent\n                        \n                        \n                            LogViewerComponent\n                        \n                        \n                            LoginPinComponent\n                        \n                        \n                            LoginUsernameComponent\n                        \n                        \n                            LogoutDialogComponent\n                        \n                        \n                            OptionsPipe\n                        \n                        \n                            PhasesComponent\n                        \n                        \n                            SafePipe\n                        \n                        \n                            SidenavComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LOCALE_ID, NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginUsernameComponent } from './components/login-username/login-username.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { LoginPinComponent } from './components/login-pin/login-pin.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LogModifierComponent } from './components/log-modifier/log-modifier.component';\nimport { PhasesComponent } from './components/phases/phases.component';\nimport { LogViewerComponent } from './components/log-viewer/log-viewer.component';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { LogoutDialogComponent } from './components/logout-dialog/logout-dialog.component';\nimport { SafePipe } from './pipes/safe-html.pipe';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ConfirmDataDialogComponent } from './components/confirm-data-dialog/confirm-data-dialog.component';\nimport { OptionsPipe } from './pipes/options.pipe';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport localeIt from '@angular/common/locales/it';\nimport { registerLocaleData } from '@angular/common';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nregisterLocaleData(localeIt);\n\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginUsernameComponent,\n    LoginPinComponent,\n    DashboardComponent,\n    LogModifierComponent,\n    PhasesComponent,\n    LogViewerComponent,\n    SidenavComponent,\n    ToolbarComponent,\n    LogoutDialogComponent,\n    SafePipe,\n    OptionsPipe,\n    ConfirmDataDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatTableModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    ScrollingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      },\n      defaultLanguage: 'it'\n    }),\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [\n    DashboardComponent,\n    MatSnackBar,\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { horizontalPosition: 'center', verticalPosition: 'top', duration: 3000 } },\n    { provide: LOCALE_ID, useValue: 'it-IT' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "modules/AppRoutingModule.html": { "url": "modules/AppRoutingModule.html", "title": "module - AppRoutingModule", "body": "\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginUsernameComponent } from './components/login-username/login-username.component';\nimport { LoginPinComponent } from './components/login-pin/login-pin.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    pathMatch: 'full',\n  },\n  { path: 'login/username', component: LoginUsernameComponent },\n  { path: 'login/pin', component: LoginPinComponent },\n  { path: 'dashboard', component: DashboardComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/AuthInformationsService.html": { "url": "injectables/AuthInformationsService.html", "title": "injectable - AuthInformationsService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthInformationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-informations/auth-informations.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che contiene le informazioni fondamentali di autenticazione: token e userId\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                userName\n                            \n                            \n                                    Private\n                                userTheme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                clearUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Token\n                                \n                                \n                                    UserId\n                                \n                                \n                                    UserName\n                                \n                                \n                                    UserTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:31\n                            \n                        \n\n                \n                    \n                            Costruttore, cerca di ottenere il token da localStorage qualora l'utente avesse già eseguito l'accesso in precedenza\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth-informations/auth-informations.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Metodo per ripristinare a stato di default il token e l'identificativo utente\nRimuove il token da localStorage e le informazioni da sessionStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clearUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth-informations/auth-informations.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Metodo per eseguire il logout rispetto all'ultimo passo di autenticazione (quando si ottiene l'identificativo utente)\nRimuove l'id ed il tema dell'utente da sessionStorage\nImposta il tema chiaro (evita che i form di login abbiano tema scuro)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:16\n                        \n                    \n\n            \n                \n                    Token per l'autenticazione durante l'uso delle API\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:21\n                        \n                    \n\n            \n                \n                    Id utente per acquisire informazioni da visualizzare a video\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:26\n                        \n                    \n\n            \n                \n                    Nome dell'utente autenticato\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"DM\" | \"WM\" | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-informations/auth-informations.service.ts:31\n                        \n                    \n\n            \n                \n                    Tema predefinito dell'utente autenticato\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Token\n                    \n                \n\n                \n                    \n                        getToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:46\n                                \n                            \n                    \n                        \n                                Getter del token\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setToken(token: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:67\n                                \n                            \n                    \n                        \n                                Setter del token (con salvataggio in localStorage)\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Valore del nuovo token\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        UserId\n                    \n                \n\n                \n                    \n                        getUserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:51\n                                \n                            \n                    \n                        \n                                Getter dell'id utente\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setUserId(userId: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:76\n                                \n                            \n                    \n                        \n                                Setter dell'identificativo utente (con salvataggio in sessionStorage)\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            userId\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Valore del nuovo identificativo dell'utente\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        UserName\n                    \n                \n\n                \n                    \n                        getUserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:56\n                                \n                            \n                    \n                        \n                                Getter del nome utente\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setUserName(userName: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:85\n                                \n                            \n                    \n                        \n                                Setter del nome utente\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            userName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Valore del nuovo nome dell'utente\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        UserTheme\n                    \n                \n\n                \n                    \n                        getUserTheme()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:61\n                                \n                            \n                    \n                        \n                                Getter del tema predefinito\n\n\n                                \n                                    Returns :     \"DM\" | \"WM\"\n\n                                \n                        \n                    \n\n                \n                    \n                        setUserTheme(userTheme: \"DM\" | \"WM\")\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth-informations/auth-informations.service.ts:94\n                                \n                            \n                    \n                        \n                                Setter del tema predefinito\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            userTheme\n                                                    \n                                                            \n                                                                        \"DM\" | \"WM\"\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Nuovo tema\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Fetch$Params } from 'src/app/api/fn/operators/fetch';\nimport { OperatorsService } from 'src/app/api/services';\n\n/**\n * Classe che contiene le informazioni fondamentali di autenticazione: token e userId\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInformationsService {\n\n  /**\n  * Token per l'autenticazione durante l'uso delle API\n  */\n  private token: string = \"\";\n\n  /**\n  * Id utente per acquisire informazioni da visualizzare a video\n  */\n  private userId: number = 0;\n\n  /**\n   * Nome dell'utente autenticato\n   */\n  private userName: string = \"\";\n\n  /**\n   * Tema predefinito dell'utente autenticato\n   */\n  private userTheme: \"DM\" | \"WM\" | undefined = undefined;\n\n  /**\n   * Costruttore, cerca di ottenere il token da localStorage qualora l'utente avesse già eseguito l'accesso in precedenza\n   */\n  constructor() {\n    this.token = localStorage.getItem(\"ADeToken\") || \"\";\n    this.userId = sessionStorage.getItem(\"ADeUserId\") as any as number || 0;\n    this.userName = sessionStorage.getItem(\"ADeUserName\") || \"\";\n    this.userTheme = sessionStorage.getItem(\"ADeUserTheme\") as \"DM\" | \"WM\";\n  }\n\n  /**\n   * Getter del token\n   */\n  public get Token(): string { return this.token }\n\n  /**\n   * Getter dell'id utente\n   */\n  public get UserId(): number { return this.userId }\n\n  /**\n   * Getter del nome utente\n   */\n  public get UserName(): string { return this.userName; }\n\n  /**\n   * Getter del tema predefinito\n   */\n  public get UserTheme(): \"DM\" | \"WM\" { return this.userTheme!; }\n\n  /**\n   * Setter del token (con salvataggio in localStorage)\n   * @param token Valore del nuovo token\n   */\n  public set Token(token: string) {\n    localStorage.setItem(\"ADeToken\", token);\n    this.token = token\n  }\n\n  /**\n   * Setter dell'identificativo utente (con salvataggio in sessionStorage)\n   * @param userId Valore del nuovo identificativo dell'utente\n   */\n  public set UserId(userId: number) {\n    this.userId = userId;\n    sessionStorage.setItem(\"ADeUserId\", this.userId as any as string);\n  }\n\n  /**\n   * Setter del nome utente\n   * @param userName Valore del nuovo nome dell'utente\n   */\n  public set UserName(userName: string) {\n    this.userName = userName;\n    sessionStorage.setItem(\"ADeUserName\", this.userName);\n  }\n\n  /**\n   * Setter del tema predefinito\n   * @param userTheme Nuovo tema\n   */\n  public set UserTheme(userTheme: \"DM\" | \"WM\") {\n    this.userTheme = userTheme;\n    sessionStorage.setItem(\"ADeUserTheme\", this.userTheme!);\n  }\n\n  /**\n   * Metodo per ripristinare a stato di default il token e l'identificativo utente\n   * Rimuove il token da localStorage e le informazioni da sessionStorage\n   */\n  public clear(): void {\n    this.token = \"\";\n    localStorage.removeItem(\"ADeToken\");\n    this.clearUser();\n  }\n\n  /**\n   * Metodo per eseguire il logout rispetto all'ultimo passo di autenticazione (quando si ottiene l'identificativo utente)\n   * Rimuove l'id ed il tema dell'utente da sessionStorage\n   * Imposta il tema chiaro (evita che i form di login abbiano tema scuro)\n   */\n  public clearUser(): void {\n    this.userId = 0;\n    this.userName = \"\";\n    sessionStorage.removeItem(\"ADeUserId\");\n    sessionStorage.removeItem(\"ADeUserTheme\");\n\n    document.body.classList.remove('theme-dark');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/AuthenticationService.html": { "url": "injectables/AuthenticationService.html", "title": "injectable - AuthenticationService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                LoginPath\n                            \n                            \n                                    Static\n                                    Readonly\n                                LogoutPath\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                login$Response\n                            \n                            \n                                logout\n                            \n                            \n                                logout$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/authentication.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(params: Login$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/authentication.service.ts:44\n                        \n                    \n\n\n            \n                \n                        This method provides access only to the response body.\nTo access the full response (for headers, for example), login$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Login$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login$Response\n                        \n                    \n                \n            \n            \n                \nlogin$Response(params: Login$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/authentication.service.ts:32\n                        \n                    \n\n\n            \n                \n                        This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use login() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Login$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(params: Logout$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/authentication.service.ts:77\n                        \n                    \n\n\n            \n                \n                        This method provides access only to the response body.\nTo access the full response (for headers, for example), logout$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Logout$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout$Response\n                        \n                    \n                \n            \n            \n                \nlogout$Response(params: Logout$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/authentication.service.ts:65\n                        \n                    \n\n\n            \n                \n                        This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use logout() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Logout$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        LoginPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/login'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/authentication.service.ts:24\n                        \n                    \n\n            \n                \n                    Path part for operation login()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        LogoutPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/logout'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/authentication.service.ts:57\n                        \n                    \n\n            \n                \n                    Path part for operation logout()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { login } from '../fn/authentication/login';\nimport { Login$Params } from '../fn/authentication/login';\nimport { logout } from '../fn/authentication/logout';\nimport { Logout$Params } from '../fn/authentication/logout';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `login()` */\n  static readonly LoginPath = '/login';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `login()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  login$Response(params: Login$Params, context?: HttpContext): Observable> {\n    return login(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `login$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  login(params: Login$Params, context?: HttpContext): Observable {\n    return this.login$Response(params, context).pipe(\n      map((r: StrictHttpResponse): {\n        'token'?: string;\n      } => r.body)\n    );\n  }\n\n  /** Path part for operation `logout()` */\n  static readonly LogoutPath = '/logout';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `logout()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  logout$Response(params: Logout$Params, context?: HttpContext): Observable> {\n    return logout(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `logout$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  logout(params: Logout$Params, context?: HttpContext): Observable {\n    return this.logout$Response(params, context).pipe(\n      map((r: StrictHttpResponse): {\n        'status'?: string;\n      } => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/BaseService.html": { "url": "injectables/BaseService.html", "title": "injectable - BaseService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/base-service.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class for services\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rootUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/base-service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/base-service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rootUrl\n                    \n                \n\n                \n                    \n                        getrootUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/api/base-service.ts:24\n                                \n                            \n                    \n                        \n                                Returns the root url for all operations in this service. If not set directly in this\nservice, will fallback to ApiConfiguration.rootUrl.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setrootUrl(rootUrl: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/api/base-service.ts:31\n                                \n                            \n                    \n                        \n                                Sets the root URL for API operations in this service.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            rootUrl\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiConfiguration } from './api-configuration';\n\n/**\n * Base class for services\n */\n@Injectable()\nexport class BaseService {\n  constructor(\n    protected config: ApiConfiguration,\n    protected http: HttpClient\n  ) {\n  }\n\n  private _rootUrl?: string;\n\n  /**\n   * Returns the root url for all operations in this service. If not set directly in this\n   * service, will fallback to `ApiConfiguration.rootUrl`.\n   */\n  get rootUrl(): string {\n    return this._rootUrl || this.config.rootUrl;\n  }\n\n  /**\n   * Sets the root URL for API operations in this service.\n   */\n  set rootUrl(rootUrl: string) {\n    this._rootUrl = rootUrl;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/ConfirmDataDialogComponent.html": { "url": "components/ConfirmDataDialogComponent.html", "title": "component - ConfirmDataDialogComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDataDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce un dialog di conferma per l'aggiornamento/inserimento di log\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-data-dialog\n            \n\n\n\n            \n                styleUrls\n                ./confirm-data-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-data-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fromPage\n                            \n                            \n                                    \n                                    \n                                    Public\n                                mydata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, mydata: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di presentazione e gestione degli eventi relativi a un dialog\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n\n                                                        \n                                                \n                                                \n                                                        mydata\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Descrizione (titolo + descrizione + riassunto dei dati) del dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cancel\n                        \n                    \n                \n            \n            \n                \n                        \n                    cancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Metodo che segnala la scelta dell'opzione \"Annulla\" nel dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Metodo che segnala la scelta dell'opzione \"Conferma\" nel dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Metodo che inizializza titolo e descrizione del dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:24\n                        \n                    \n\n            \n                \n                    Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fromPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:17\n                        \n                    \n\n            \n                \n                    Attributo che descrive il tipo di dialog (titolo + descrizione + riassunto dei dati)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        mydata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()@Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts:25\n                        \n                    \n\n            \n                \n                    Descrizione (titolo + descrizione + riassunto dei dati) del dialog\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n/**\n * Classe che gestisce un dialog di conferma per l'aggiornamento/inserimento di log\n */\n@Component({\n  selector: 'app-confirm-data-dialog',\n  templateUrl: './confirm-data-dialog.component.html',\n  styleUrls: ['./confirm-data-dialog.component.scss']\n})\nexport class ConfirmDataDialogComponent implements OnInit {\n\n  /**\n   * Attributo che descrive il tipo di dialog (titolo + descrizione + riassunto dei dati)\n   */\n  public fromPage!: { title: string, description: string, resume: string[] };\n\n  /**\n   * Costruttore della classe di presentazione e gestione degli eventi relativi a un dialog\n   * @param dialogRef Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n   * @param mydata Descrizione (titolo + descrizione + riassunto dei dati) del dialog\n   */\n  constructor(public dialogRef: MatDialogRef,\n    @Optional() @Inject(MAT_DIALOG_DATA) public mydata: any) { }\n\n  /**\n   * Metodo che inizializza titolo e descrizione del dialog\n   */\n  ngOnInit(): void {\n    this.fromPage = this.mydata;\n  }\n\n  /**\n   * Metodo che segnala la scelta dell'opzione \"Conferma\" nel dialog\n   */\n  public confirm(): void {\n    this.dialogRef.close({ event: 'confirm-option' });\n  }\n\n  /**\n   * Metodo che segnala la scelta dell'opzione \"Annulla\" nel dialog\n   */\n  public cancel(): void {\n    this.dialogRef.close({ event: 'cancel-option' });\n  }\n}\n\n    \n\n    \n        \n    {{fromPage.title | translate}}\n    {{fromPage.description | translate}}\n    \n        {{entry}}\n    \n    \n        {{\"Conferma\" | translate}}\n        {{\"Annulla\" | translate}}\n    \n\n    \n\n    \n                \n                    ./confirm-data-dialog.component.scss\n                \n                #dialog {\n    padding: 1em;\n    width: 15em;\n    min-width: 100px;\n    color: black;\n}\n\nbutton {\n    background-color: white;\n}\n\n#buttons {\n    text-align: right;\n    margin-top: 1.5em;\n}\n\nbutton {\n    margin: auto;\n}\n\n#title {\n    margin-top: 0.2em;\n    font-size: 20px;\n    font-weight: 500;\n}\n\np {\n    font-size: 18px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{fromPage.title | translate}}    {{fromPage.description | translate}}            {{entry}}                {{\"Conferma\" | translate}}        {{\"Annulla\" | translate}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDataDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/DashboardComponent.html": { "url": "components/DashboardComponent.html", "title": "component - DashboardComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce la visualizzazione principale\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                insideFrame\n                            \n                            \n                                    Public\n                                mobileQuery\n                            \n                            \n                                    Private\n                                queryListener\n                            \n                            \n                                    Public\n                                tabletQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    InsideFrame\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authInfoService: AuthInformationsService, router: Router, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, route: ActivatedRoute, iframeInitService: IframeInitializerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/dashboard.component.ts:36\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce la vista principale, reindirizza al login con username in assenza delle informazioni di autenticazione necessarie (token, userId) se non si è all'interno di un iframe\nSe si è all'interno di un iframe, il software viene richiamato con il parametro 'inside=true'\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router per eseguire dei reindirizzamenti su browser\n\n                                                        \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                URL attivo\n\n                                                        \n                                                \n                                                \n                                                        iframeInitService\n                                                  \n                                                        \n                                                                        IframeInitializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di inizializzazione dei servizi indispensabili per il funzionamento dell'applicazione in un iframe\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dashboard/dashboard.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Distruttore per rimuovere gli event listener\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insideFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:36\n                        \n                    \n\n            \n                \n                    Attributo booleano che indica se l'interfaccia viene visualizzata all'interno di un iframe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mobileQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:31\n                        \n                    \n\n            \n                \n                    Lista di query per capire quando nascondere la barra laterale e incorporarla alla barra del titolo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        queryListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:21\n                        \n                    \n\n            \n                \n                    Query listener: consente di capire quando il menù delle fasi deve cambiare [mode] (possibili valori: 'over', 'push', 'side')\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tabletQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:26\n                        \n                    \n\n            \n                \n                    Lista di query per capire quando cambiare [mode] al menù delle fasi\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        InsideFrame\n                    \n                \n\n                \n                    \n                        getInsideFrame()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:98\n                                \n                            \n                    \n                        \n                                Getter per insideFrame\n\n\n                        \n                    \n\n                \n                    \n                        setInsideFrame(inside: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:93\n                                \n                            \n                    \n                        \n                                Setter per insideFrame\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            inside\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Message } from 'src/app/models/message';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { IframeInitializerService } from 'src/app/services/iframe-initializer/iframe-initializer.service';\n\n/**\n * Classe che gestisce la visualizzazione principale\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnDestroy {\n\n  /**\n   * Query listener: consente di capire quando il menù delle fasi deve cambiare [mode] (possibili valori: 'over', 'push', 'side')\n   */\n  private queryListener: () => void;\n\n  /**\n   * Lista di query per capire quando cambiare [mode] al menù delle fasi\n   */\n  public tabletQuery: MediaQueryList;\n\n  /**\n   * Lista di query per capire quando nascondere la barra laterale e incorporarla alla barra del titolo\n   */\n  public mobileQuery: MediaQueryList;\n\n  /**\n   * Attributo booleano che indica se l'interfaccia viene visualizzata all'interno di un iframe\n   */\n  private insideFrame: boolean = false;\n\n  /**\n   * Costruttore della classe che gestisce la vista principale, reindirizza al login con username in assenza delle informazioni di autenticazione necessarie (token, userId) se non si è all'interno di un iframe\n   * Se si è all'interno di un iframe, il software viene richiamato con il parametro 'inside=true'\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione \n   * @param router Router per eseguire dei reindirizzamenti su browser\n   * @param route URL attivo\n   * @param iframeInitService Servizio di inizializzazione dei servizi indispensabili per il funzionamento dell'applicazione in un iframe\n   */\n  constructor(private authInfoService: AuthInformationsService, private router: Router, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, private route: ActivatedRoute, private iframeInitService: IframeInitializerService) {\n    this.route.queryParams\n      .subscribe(params => {\n        if (params && params['inside']) {\n          if (params['inside'] == \"true\") {\n            this.insideFrame = true;\n          }\n        }\n      }\n      );\n\n    // Se siamo dentro a un frame, aggiungo un event listener per acquisire i parametri in ingresso tramite postMessage (dall'applicazione contenitrice)\n    if (this.insideFrame) {\n      window.addEventListener(\"message\", (event) => {\n\n        // Accetta i dati in ingresso solo se sono dati dal widget padre\n        if (event.source == parent) {\n          const data: Message = event.data as Message;\n\n          // Verifico che i parametri ci siano tutti\n          if (data == undefined || data.token == undefined || data.lang == undefined || data.theme == undefined || data.username == undefined\n            || data.m_product_id == undefined || data.c_projectphase_id == undefined || data.user_id == undefined) {\n            this.insideFrame = false;\n          } else {\n            this.iframeInitService.initialize(data);\n          }\n        }\n      });\n    }\n\n    // Se non siamo in un frame e mancano dati (token/id utente), si fa un redirect alle pagine di login\n    if (!this.insideFrame && this.authInfoService.Token == \"\" || !this.insideFrame && this.authInfoService.UserId as any as number == 0) {\n      this.router.navigate(['login/username']);\n    }\n\n    this.mobileQuery = media.matchMedia('(max-width: 900px)');\n    this.tabletQuery = media.matchMedia('(max-width: 1200px)');\n\n    this.queryListener = () => changeDetectorRef.detectChanges();\n\n    this.mobileQuery.addEventListener(\"change\", this.queryListener);\n    this.tabletQuery.addEventListener(\"change\", this.queryListener);\n  }\n\n  /**\n   * Setter per insideFrame\n   */\n  public set InsideFrame(inside: boolean) { this.insideFrame = inside; }\n\n  /**\n   * Getter per insideFrame\n   */\n  public get InsideFrame() { return this.insideFrame; }\n\n  /**\n   * Distruttore per rimuovere gli event listener\n   */\n  ngOnDestroy(): void {\n    this.tabletQuery.removeEventListener(\"change\", this.queryListener);\n    this.mobileQuery.removeEventListener(\"change\", this.queryListener);\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            menu\n        \n        \n            \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n\n    \n        \n            \n                \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                #container {\n    width: 100%;\n    display: flex;\n    height: 100%;\n}\n\n#mainFrame {\n    width: 100%;\n}\n\n#mainContent {\n    width: 100%;\n    height: calc(100% - 70px); //70px sono di toolbar\n}\n\nmat-drawer {\n    width: 20%;\n    height: auto;\n}\n\napp-phases {\n    width: 100%;\n}\n\n#logView {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    min-width: 400px;\n}\n\napp-log-modifier {\n    width: 100%;\n    flex: 40%;\n}\n\napp-log-viewer {\n    width: 100%;\n    flex: 60%;\n}\n\n@media screen and (max-width: 1200px) {\n    mat-drawer {\n        width: 35%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            menu                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Delete$Params.html": { "url": "interfaces/Delete$Params.html", "title": "interface - Delete$Params", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Delete$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-save-log/9000004-delete.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per eliminare un log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { QualitysavelogModel } from '../../models/qualitysavelog-model';\n\n/**\n * Interfaccia che definisce i parametri per eliminare un log di qualità\n */\nexport interface Delete$Params {\n  AdesuiteToken: string;\n  body: {\n    'c_projectphase_id'?: number;\n  }\n}\n\n/**\n * Funzione di utilità per eliminare un log di qualità\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - il log eliminato\n */\nexport function Delete(http: HttpClient, rootUrl: string, params: Delete$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, Delete.PATH, 'delete');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'eliminazione di un log di qualità\n */\nDelete.PATH = '/9000004/qualitysavelog/remove';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/ErrorModel.html": { "url": "interfaces/ErrorModel.html", "title": "interface - ErrorModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/error-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di un errore HTTP\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorModel {\n  code?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Fetch$Params.html": { "url": "interfaces/Fetch$Params.html", "title": "interface - Fetch$Params", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fetch$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/operators/fetch.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per il login - pin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         FetchRequestOperatorsModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchRequestOperatorsModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FetchRequestOperatorsModel } from '../../models/fetch-request-operators-model';\nimport { FetchResponseOperatorsModel } from '../../models/fetch-response-operators-model';\n\n/**\n * Interfaccia che definisce i parametri per il login - pin\n */\nexport interface Fetch$Params {\n  AdesuiteToken: string;\n  body: FetchRequestOperatorsModel\n}\n\n/**\n * Funzione di utilità per il login - pin\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta\n */\nexport function fetch(http: HttpClient, rootUrl: string, params: Fetch$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, fetch.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa al login - pin\n */\nfetch.PATH = '/9000006/operators/fetch';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FetchRequestOperatorsModel.html": { "url": "interfaces/FetchRequestOperatorsModel.html", "title": "interface - FetchRequestOperatorsModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchRequestOperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-request-operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una richiesta per gli operatori (login - pin)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orderby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali filtrare gli operatori\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui finire di visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderby:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali ordinare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui iniziare a visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FilterOperatorsModel } from '../models/filter-operators-model';\nimport { OrderOperatorsModel } from '../models/order-operators-model';\n\n/**\n * Interfaccia che definisce la struttura di una richiesta per gli operatori (login - pin)\n */\nexport interface FetchRequestOperatorsModel {\n  /**\n   * Criteri per i quali filtrare gli operatori\n   */\n  criteria?: Array;\n\n  /**\n   * Riga finale da cui finire di visualizzare i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Criteri per i quali ordinare i record trovati\n   */\n  orderby?: Array;\n\n  /**\n   * Riga iniziale da cui iniziare a visualizzare i record trovati\n   */\n  startRow?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FetchRequestQualityattributeModel.html": { "url": "interfaces/FetchRequestQualityattributeModel.html", "title": "interface - FetchRequestQualityattributeModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchRequestQualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-request-qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una richiesta per gli attributi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orderby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali filtrare gli attributi\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui finire di visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderby:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali ordinare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui iniziare a visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FilterQualityattributeModel } from '../models/filter-qualityattribute-model';\nimport { OrderQualityattributeModel } from '../models/order-qualityattribute-model';\n\n/**\n * Interfaccia che definisce la struttura di una richiesta per gli attributi di qualità\n */\nexport interface FetchRequestQualityattributeModel {\n\n  /**\n   * Criteri per i quali filtrare gli attributi\n   */\n  criteria?: Array;\n\n  /**\n   * Riga finale da cui finire di visualizzare i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Criteri per i quali ordinare i record trovati\n   */\n  orderby?: Array;\n\n  /**\n   * Riga iniziale da cui iniziare a visualizzare i record trovati\n   */\n  startRow?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FetchRequestQualityphaseModel.html": { "url": "interfaces/FetchRequestQualityphaseModel.html", "title": "interface - FetchRequestQualityphaseModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchRequestQualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-request-qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una richiesta per le fasi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orderby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali filtrare le fasi\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui finire di visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderby:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali ordinare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui iniziare a visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FilterQualityphaseModel } from '../models/filter-qualityphase-model';\nimport { OrderQualityphaseModel } from '../models/order-qualityphase-model';\n\n/**\n * Interfaccia che definisce la struttura di una richiesta per le fasi di qualità\n */\nexport interface FetchRequestQualityphaseModel {\n\n  /**\n   * Criteri per i quali filtrare le fasi\n   */\n  criteria?: Array;\n\n  /**\n   * Riga finale da cui finire di visualizzare i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Criteri per i quali ordinare i record trovati\n   */\n  orderby?: Array;\n\n  /**\n   * Riga iniziale da cui iniziare a visualizzare i record trovati\n   */\n  startRow?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FetchRequestQualitysavelogModel.html": { "url": "interfaces/FetchRequestQualitysavelogModel.html", "title": "interface - FetchRequestQualitysavelogModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchRequestQualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-request-qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una richiesta per i log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            criteria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orderby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criteria:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali filtrare i log di qualità\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui finire di visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderby:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Criteri per i quali ordinare i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui iniziare a visualizzare i record trovati\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FilterQualitysavelogModel } from '../models/filter-qualitysavelog-model';\nimport { OrderQualitysavelogModel } from '../models/order-qualitysavelog-model';\n\n/**\n * Interfaccia che definisce la struttura di una richiesta per i log di qualità\n */\nexport interface FetchRequestQualitysavelogModel {\n\n  /**\n   * Criteri per i quali filtrare i log di qualità\n   */\n  criteria?: Array;\n\n  /**\n   * Riga finale da cui finire di visualizzare i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Criteri per i quali ordinare i record trovati\n   */\n  orderby?: Array;\n\n  /**\n   * Riga iniziale da cui iniziare a visualizzare i record trovati\n   */\n  startRow?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FetchResponseOperatorsModel.html": { "url": "interfaces/FetchResponseOperatorsModel.html", "title": "interface - FetchResponseOperatorsModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchResponseOperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-response-operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una risposta per una richiesta di operatori\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dati in risposta: array di operatori\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Numero totale di righe trovate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OperatorsModel } from '../models/operators-model';\n\n/**\n * Interfaccia che definisce la struttura di una risposta per una richiesta di operatori\n */\nexport interface FetchResponseOperatorsModel {\n\n  /**\n   * Dati in risposta: array di operatori\n   */\n  data?: Array;\n\n  /**\n   * Riga finale da cui si visualizzano i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Riga iniziale da cui si visualizzano i record trovati\n   */\n  startRow?: number;\n\n  /**\n   * Numero totale di righe trovate\n   */\n  totalRows?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FetchResponseQualityattributeModel.html": { "url": "interfaces/FetchResponseQualityattributeModel.html", "title": "interface - FetchResponseQualityattributeModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchResponseQualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-response-qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una risposta per una richiesta di attributi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dati in risposta: array di attributi di qualità\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Numero totale di righe trovate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { QualityattributeModel } from '../models/qualityattribute-model';\n\n/**\n * Interfaccia che definisce la struttura di una risposta per una richiesta di attributi di qualità\n */\nexport interface FetchResponseQualityattributeModel {\n\n  /**\n   * Dati in risposta: array di attributi di qualità\n   */\n  data?: Array;\n\n  /**\n   * Riga finale da cui si visualizzano i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Riga iniziale da cui si visualizzano i record trovati\n   */\n  startRow?: number;\n\n  /**\n   * Numero totale di righe trovate\n   */\n  totalRows?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FetchResponseQualityphaseModel.html": { "url": "interfaces/FetchResponseQualityphaseModel.html", "title": "interface - FetchResponseQualityphaseModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchResponseQualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-response-qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una risposta per una richiesta di fasi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dati in risposta: array di fasi di qualità\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Numero totale di righe trovate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { QualityphaseModel } from '../models/qualityphase-model';\n\n/**\n * Interfaccia che definisce la struttura di una risposta per una richiesta di fasi di qualità\n */\nexport interface FetchResponseQualityphaseModel {\n\n  /**\n   * Dati in risposta: array di fasi di qualità\n   */\n  data?: Array;\n\n  /**\n   * Riga finale da cui si visualizzano i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Riga iniziale da cui si visualizzano i record trovati\n   */\n  startRow?: number;\n\n  /**\n   * Numero totale di righe trovate\n   */\n  totalRows?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FetchResponseQualitysavelogModel.html": { "url": "interfaces/FetchResponseQualitysavelogModel.html", "title": "interface - FetchResponseQualitysavelogModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FetchResponseQualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/fetch-response-qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce la struttura di una risposta per una richiesta di log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dati in risposta: array di log di qualità\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga finale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startRow:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Riga iniziale da cui si visualizzano i record trovati\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Numero totale di righe trovate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { QualitysavelogModel } from '../models/qualitysavelog-model';\n\n/**\n * Interfaccia che definisce la struttura di una risposta per una richiesta di log di qualità\n */\nexport interface FetchResponseQualitysavelogModel {\n\n  /**\n   * Dati in risposta: array di log di qualità\n   */\n  data?: Array;\n\n  /**\n   * Riga finale da cui si visualizzano i record trovati\n   */\n  endRow?: number;\n\n  /**\n   * Riga iniziale da cui si visualizzano i record trovati\n   */\n  startRow?: number;\n\n  /**\n   * Numero totale di righe trovate\n   */\n  totalRows?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Fetch_1$Params.html": { "url": "interfaces/Fetch_1$Params.html", "title": "interface - Fetch_1$Params", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fetch_1$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-save-log/fetch-1.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per ottenere i log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         FetchRequestQualitysavelogModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchRequestQualitysavelogModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FetchRequestQualitysavelogModel } from '../../models/fetch-request-qualitysavelog-model';\nimport { FetchResponseQualitysavelogModel } from '../../models/fetch-response-qualitysavelog-model';\n\n/**\n * Interfaccia che definisce i parametri per ottenere i log di qualità\n */\nexport interface Fetch_1$Params {\n  AdesuiteToken: string;\n  body: FetchRequestQualitysavelogModel\n}\n\n/**\n * Funzione di utilità per ottenere un log di qualità\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - i log di qualità\n */\nexport function fetch_1(http: HttpClient, rootUrl: string, params: Fetch_1$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, fetch_1.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'ottenimento dei log di qualità\n */\nfetch_1.PATH = '/9000004/qualitysavelog/fetch';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Fetch_2$Params.html": { "url": "interfaces/Fetch_2$Params.html", "title": "interface - Fetch_2$Params", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fetch_2$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-phase/fetch-2.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per ottenere le fasi di produzione\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         FetchRequestQualityphaseModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchRequestQualityphaseModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FetchRequestQualityphaseModel } from '../../models/fetch-request-qualityphase-model';\nimport { FetchResponseQualityphaseModel } from '../../models/fetch-response-qualityphase-model';\n\n/**\n * Interfaccia che definisce i parametri per ottenere le fasi di produzione\n */\nexport interface Fetch_2$Params {\n  AdesuiteToken: string;\n  body: FetchRequestQualityphaseModel\n}\n\n/**\n * Funzione di utilità per ottenere una fase di produzione\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - le fasi di produzione\n */\nexport function fetch_2(http: HttpClient, rootUrl: string, params: Fetch_2$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, fetch_2.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'ottenimento delle fasi di produzione\n */\nfetch_2.PATH = '/9000005/qualityphase/fetch';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Fetch_3$Params.html": { "url": "interfaces/Fetch_3$Params.html", "title": "interface - Fetch_3$Params", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fetch_3$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-attribute/fetch-3.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per ottenere gli attributi di qualità di una fase\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         FetchRequestQualityattributeModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchRequestQualityattributeModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { FetchRequestQualityattributeModel } from '../../models/fetch-request-qualityattribute-model';\nimport { FetchResponseQualityattributeModel } from '../../models/fetch-response-qualityattribute-model';\n\n/**\n * Interfaccia che definisce i parametri per ottenere gli attributi di qualità di una fase\n */\nexport interface Fetch_3$Params {\n  AdesuiteToken: string;\n  body: FetchRequestQualityattributeModel\n}\n\n/**\n * Funzione di utilità per ottenere gli attributi di qualità di una fase\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - gli attributi di qualità di una fase\n */\nexport function fetch_3(http: HttpClient, rootUrl: string, params: Fetch_3$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, fetch_3.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'ottenimento degli attributi di qualità di una fase\n */\nfetch_3.PATH = '/9000003/qualityattribute/fetch';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FilterOperatorsModel.html": { "url": "interfaces/FilterOperatorsModel.html", "title": "interface - FilterOperatorsModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterOperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/filter-operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ottenere (filtrando) gli operatori\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fieldName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldName:     \"mes_theme_display\" | \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"userpin\" | \"foto\" | \"ad_user_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mes_theme_display\" | \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"userpin\" | \"foto\" | \"ad_user_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterOperatorsModel {\n  fieldName?: 'mes_theme_display' | 'mes_theme' | 'note' | 'name' | 'ismobileuser' | 'numero_matricola' | 'isactive' | 'userpin' | 'foto' | 'ad_user_id';\n  operator?: 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals';\n  value?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FilterQualityattributeModel.html": { "url": "interfaces/FilterQualityattributeModel.html", "title": "interface - FilterQualityattributeModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterQualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/filter-qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ottenere (filtrando) gli attributi di qualità per la fase attiva\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fieldName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldName:     \"optionvalue\" | \"groupname\" | \"groupdescription\" | \"c_project_attribute_group_id\" | \"attributeseqno\" | \"attributedescription\" | \"ad_reference_id\" | \"m_product_category_id\" | \"m_product_id\" | \"attributevaluetype\" | \"attributevalue\" | \"attributename\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"optionvalue\" | \"groupname\" | \"groupdescription\" | \"c_project_attribute_group_id\" | \"attributeseqno\" | \"attributedescription\" | \"ad_reference_id\" | \"m_product_category_id\" | \"m_product_id\" | \"attributevaluetype\" | \"attributevalue\" | \"attributename\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterQualityattributeModel {\n  fieldName?: 'optionvalue' | 'groupname' | 'groupdescription' | 'c_project_attribute_group_id' | 'attributeseqno' | 'attributedescription' | 'ad_reference_id' | 'm_product_category_id' | 'm_product_id' | 'attributevaluetype' | 'attributevalue' | 'attributename';\n  operator?: 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals';\n  value?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FilterQualityphaseModel.html": { "url": "interfaces/FilterQualityphaseModel.html", "title": "interface - FilterQualityphaseModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterQualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/filter-qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ottenere (filtrando) le fasi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fieldName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldName:     \"c_phase_id\" | \"m_product_category_id\" | \"m_product_id\" | \"status\" | \"projectplan_timeline_id\" | \"isglobal\" | \"c_projectphase_id\" | \"c_bpartner_id\" | \"linename\" | \"color\" | \"start_plan\" | \"phasename\" | \"end_plan\" | \"customer\" | \"c_projectline_id\" | \"ad_org_id\" | \"ad_client_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"c_phase_id\" | \"m_product_category_id\" | \"m_product_id\" | \"status\" | \"projectplan_timeline_id\" | \"isglobal\" | \"c_projectphase_id\" | \"c_bpartner_id\" | \"linename\" | \"color\" | \"start_plan\" | \"phasename\" | \"end_plan\" | \"customer\" | \"c_projectline_id\" | \"ad_org_id\" | \"ad_client_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterQualityphaseModel {\n  fieldName?: 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n  operator?: 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals';\n  value?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/FilterQualitysavelogModel.html": { "url": "interfaces/FilterQualitysavelogModel.html", "title": "interface - FilterQualitysavelogModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterQualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/filter-qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ottenere (filtrando) i log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fieldName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldName:     \"qualitystatus\" | \"qualityvalue\" | \"isactive\" | \"c_projectphase_quality_log_id\" | \"c_projectphase_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"qualitystatus\" | \"qualityvalue\" | \"isactive\" | \"c_projectphase_quality_log_id\" | \"c_projectphase_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | \"equals\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterQualitysavelogModel {\n  fieldName?: 'qualitystatus' | 'qualityvalue' | 'isactive' | 'c_projectphase_quality_log_id' | 'c_projectphase_id';\n  operator?: 'iNotContains' | 'iContains' | 'greaterOrEqual' | 'lessOrEqual' | 'equals';\n  value?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "classes/HeaderParameter.html": { "url": "classes/HeaderParameter.html", "title": "class - HeaderParameter", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HeaderParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                A parameter in the HTTP request header\n\n            \n\n            \n                Extends\n            \n            \n                            Parameter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                serializeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: any, options: ParameterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:188\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ParameterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParameterOptions\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(headers: HttpHeaders)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                        HttpHeaders\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeValue\n                        \n                    \n                \n            \n            \n                \nserializeValue(value: any, separator: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         Parameter\n\n                        \n                    \n                    \n                        \n                                Defined in         Parameter:50\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                separator\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ','\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/IframeInitializerService.html": { "url": "injectables/IframeInitializerService.html", "title": "injectable - IframeInitializerService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IframeInitializerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/iframe-initializer/iframe-initializer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe di gestione dell'inizializzazione dei servizi se il software esegue all'interno di un iframe\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, authInfoService: AuthInformationsService, languageService: LanguageService, activePhaseService: ActivePhaseService, themeService: ThemeService, qualityPhaseService: QualityPhaseService, logoutService: LogoutService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/iframe-initializer/iframe-initializer.service.ts:19\n                            \n                        \n\n                \n                    \n                            Costruttore della classe relativa all'inizializzazione dei servizi se il software esegue in un iframe\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di notifica eventi\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del linguaggio attivo nell'applicazione\n\n                                                        \n                                                \n                                                \n                                                        activePhaseService\n                                                  \n                                                        \n                                                                        ActivePhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire la fase attiva\n\n                                                        \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del tema grafico di interfaccia\n\n                                                        \n                                                \n                                                \n                                                        qualityPhaseService\n                                                  \n                                                        \n                                                                        QualityPhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per l'ottenimento delle fasi\n\n                                                        \n                                                \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del logout\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize(data: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/iframe-initializer/iframe-initializer.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Metodo per inizializzare i vari servizi in caso di utilizzo del software all'interno di un iframe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Dati passati dalla pagina che contiene il software all'interno di un iframe\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                        \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/iframe-initializer/iframe-initializer.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Messaggio da mostrare\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Etichetta del pulsante di chiusura\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { QualityPhaseService } from 'src/app/api/services';\nimport { ActivePhaseService } from '../active-phase/active-phase.service';\nimport { LanguageService } from '../language/language.service';\nimport { LogoutService } from '../logout/logout.service';\nimport { ThemeService } from '../theme/theme.service';\nimport { AuthInformationsService } from '../auth-informations/auth-informations.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ErrorModel } from 'src/app/api/models';\nimport { Message } from 'src/app/models/message';\n\n/**\n * Classe di gestione dell'inizializzazione dei servizi se il software esegue all'interno di un iframe\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IframeInitializerService {\n\n  /**\n   * Costruttore della classe relativa all'inizializzazione dei servizi se il software esegue in un iframe\n   * @param snackBar Barra di notifica eventi\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param languageService Servizio di gestione del linguaggio attivo nell'applicazione\n   * @param activePhaseService Servizio per gestire la fase attiva\n   * @param themeService Servizio di gestione del tema grafico di interfaccia\n   * @param qualityPhaseService Servizio per l'ottenimento delle fasi\n   * @param logoutService Servizio di gestione del logout\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   */\n  constructor(private snackBar: MatSnackBar, private authInfoService: AuthInformationsService, private languageService: LanguageService, private activePhaseService: ActivePhaseService, private themeService: ThemeService, private qualityPhaseService: QualityPhaseService,\n    private logoutService: LogoutService, private translateService: TranslateService) { }\n\n  /**\n  * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n  * @param message Messaggio da mostrare\n  * @param type Etichetta del pulsante di chiusura\n  */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar', 'login-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo per inizializzare i vari servizi in caso di utilizzo del software all'interno di un iframe\n   * @param data Dati passati dalla pagina che contiene il software all'interno di un iframe\n   */\n  public initialize(data: Message): void {\n\n    //1. Aggiornare AuthInfoService\n    this.authInfoService.Token = data.token;\n    this.authInfoService.UserName = data.username;\n    this.authInfoService.UserTheme = data.theme;\n    this.authInfoService.UserId = data.user_id;\n\n    //2. Aggiornare LanguageService\n    this.languageService.changeLanguage(data.lang);\n\n    //3. Aggiornare ActivePhaseService\n    const params = {\n      \"AdesuiteToken\": data.token,\n      \"body\": {\n        \"startRow\": 0,\n        \"criteria\": [\n          {\n            \"fieldName\": 'c_projectphase_id' as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"value\": data.c_projectphase_id.toString(),\n            \"operator\": 'equals' as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          }\n        ],\n        \"endRow\": 1\n      }\n    };\n    this.qualityPhaseService.fetch_2(params)\n      .subscribe({\n        next: (response) => {\n          (response.data != undefined && response.data != null && response.data.length == 1 && response.data.at(0) != undefined) ? this.activePhaseService.update(response.data.at(0)!) : this.openSnackBar(this.translateService.instant(\"Errore: non ci sono fasi da visualizzare!\"), \"X\");\n        },\n        error: (error) => {\n          const errorDescription = (error.error as ErrorModel) != null ? (error.error as ErrorModel).description : (error.status == 401 ? \"Non autorizzato\" : \"Errore lato server\");\n          this.openSnackBar(this.translateService.instant(\"Errore \" + error.status + \" - \" + errorDescription), \"X\");\n          if (error.status == 401) {\n            this.logoutService.logout();\n            this.openSnackBar(this.translateService.instant(\"Errore 401 - Il token di accesso non è più valido\"), \"X\");\n          }\n        }\n      });\n\n    //4. Aggiornare ThemeService\n    this.themeService.toggleTheme(data.theme == \"DM\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/JsonList.html": { "url": "interfaces/JsonList.html", "title": "interface - JsonList", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JsonList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche dei valori delle opzioni di un attributo di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JsonList {\n  key: string[],\n  value: string[]\n}\n\n/**\n * Interfaccia che definisce le caratteristiche delle opzioni di un attributo di qualità\n */\nexport interface optionType {\n  type: string,\n  value: JsonList\n}\n\n/**\n * Interfaccia che definisce le caratteristiche di un attributo di qualità\n */\nexport interface QualityattributeModel {\n  ad_reference_id?: number;\n  attributedescription?: string;\n  attributename?: string;\n  attributeseqno?: number;\n  attributevalue?: string;\n  attributevaluetype?: 'Y' | 'N' | 'S' | 'L';\n  c_project_attribute_group_id?: number;\n  groupdescription?: string;\n  groupname?: string;\n  m_product_category_id?: number;\n  m_product_id?: number;\n  optionvalue?: optionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/LanguageService.html": { "url": "injectables/LanguageService.html", "title": "injectable - LanguageService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe di gestione del linguaggio attivo\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/language/language.service.ts:16\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di gestione del linguaggio attivo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeLanguage(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/language/language.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Metodo per cambiare il linguaggio attivo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Linguaggio da impostare come attivo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/language/language.service.ts:16\n                        \n                    \n\n            \n                \n                    Flusso che emette il linguaggio attivo durante l'esecuzione\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject } from 'rxjs';\n\n/**\n * Classe di gestione del linguaggio attivo\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n\n  /**\n   * Flusso che emette il linguaggio attivo durante l'esecuzione \n   */\n  public activeLanguage: Subject = new Subject();\n\n  /**\n   * Costruttore della classe di gestione del linguaggio attivo\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   */\n  constructor(private translateService: TranslateService) { }\n\n  /**\n   * Metodo per cambiare il linguaggio attivo\n   * @param language Linguaggio da impostare come attivo\n   */\n  public changeLanguage(language: string): void {\n\n    if (language != 'it' && language != 'es' && language != 'en') {\n      language = 'it'\n    }\n\n    localStorage.setItem('lang', language);\n    this.translateService.use(localStorage.getItem('lang') || 'it');\n\n    this.activeLanguage.next(language);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/LogModifierComponent.html": { "url": "components/LogModifierComponent.html", "title": "component - LogModifierComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  LogModifierComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/log-modifier/log-modifier.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce gli attributi relativi a una determinata fase selezionata ed i loro valori\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-log-modifier\n            \n\n\n\n            \n                styleUrls\n                ./log-modifier.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./log-modifier.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeAttributes\n                            \n                            \n                                    Public\n                                addLog\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                addDialog\n                            \n                            \n                                    Public\n                                clearDialog\n                            \n                            \n                                    Private\n                                initializeForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Public\n                                updateDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeAttributesService: ActiveAttributesService, snackBar: MatSnackBar, dialog: MatDialog, translateService: TranslateService, authInfoService: AuthInformationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/log-modifier/log-modifier.component.ts:54\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce gli attributi relativi a una fase selezionata ed i loro valori\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeAttributesService\n                                                  \n                                                        \n                                                                        ActiveAttributesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio che gestisce gli attributi attualmente attivi\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di notifica eventi\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog di conferma dei dati inseriti dall'utente\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-modifier/log-modifier.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Metodo per aggiungere un nuovo log relativo alla fase di qualità attiva\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-modifier/log-modifier.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Metodo per mostrare a video il dialog di conferma dei dati inseriti per l'aggiunta di un nuovo log\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clearDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-modifier/log-modifier.component.ts:206\n                        \n                    \n\n\n            \n                \n                        Metodo per ripulire il form dopo il submit dei dati\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-modifier/log-modifier.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Metodo per inizializzare il form:\nSi inseriscono nuovi controlli (togliendo i vecchi)\nSi assegnano valori di default\nSi assegnano dei validatori\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-modifier/log-modifier.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Metodo che consente di aggiornare la tabella ad ogni cambio degli attributi attivi (avviene quando si aggiorna la fase attiva)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                        \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-modifier/log-modifier.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Messaggio da mostrare\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Etichetta del pulsante di chiusura\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-modifier/log-modifier.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Metodo per aggiornare un log relativo alla fase di qualità attiva\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-modifier/log-modifier.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Metodo per mostrare a video il dialog di conferma dei dati inseriti per la modifica di un log\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-modifier/log-modifier.component.ts:30\n                        \n                    \n\n            \n                \n                    Gli attributi che caratterizzano un controllo qualità per la fase selezionata\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-modifier/log-modifier.component.ts:43\n                        \n                    \n\n            \n                \n                    Attributo booleano per gestire il form da visualizzare\nForm possibili:\n-) Form di aggiunta log: true\n-) Form di modifica log: false\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-modifier/log-modifier.component.ts:25\n                        \n                    \n\n            \n                \n                    Le colonne da mostrare (la descrizione degli attributi che caratterizzano un controllo qualità per la fase selezionata)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-modifier/log-modifier.component.ts:35\n                        \n                    \n\n            \n                \n                    Form di gestione dell'aggiunta/modifica di un log di qualità per la fase selezionata\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { QualityattributeModel } from 'src/app/api/models';\nimport { ActiveAttributesService } from 'src/app/services/active-attributes/active-attributes.service';\nimport { ConfirmDataDialogComponent } from '../confirm-data-dialog/confirm-data-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OptionsPipe } from 'src/app/pipes/options.pipe';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\n\n/**\n * Classe che gestisce gli attributi relativi a una determinata fase selezionata ed i loro valori\n */\n@Component({\n  selector: 'app-log-modifier',\n  templateUrl: './log-modifier.component.html',\n  styleUrls: ['./log-modifier.component.scss']\n})\nexport class LogModifierComponent implements OnInit {\n\n  /**\n   * Le colonne da mostrare (la descrizione degli attributi che caratterizzano un controllo qualità per la fase selezionata)\n   */\n  public displayedColumns: Array = new Array();\n\n  /**\n   * Gli attributi che caratterizzano un controllo qualità per la fase selezionata\n   */\n  public activeAttributes: Array = new Array();\n\n  /**\n   * Form di gestione dell'aggiunta/modifica di un log di qualità per la fase selezionata\n   */\n  public form: FormGroup = new FormGroup({});\n\n  /**\n   * Attributo booleano per gestire il form da visualizzare\n   * Form possibili:\n   * -) Form di aggiunta log: true\n   * -) Form di modifica log: false\n   */\n  public addLog: boolean = true;\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n  */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar', 'login-snackbar'],\n    });\n  }\n\n  /**\n   * Costruttore della classe che gestisce gli attributi relativi a una fase selezionata ed i loro valori\n   * @param activeAttributesService Servizio che gestisce gli attributi attualmente attivi\n   * @param snackBar Barra di notifica eventi\n   * @param dialog Dialog di conferma dei dati inseriti dall'utente\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione \n   */\n  constructor(private activeAttributesService: ActiveAttributesService, private snackBar: MatSnackBar, private dialog: MatDialog, private translateService: TranslateService,\n    private authInfoService: AuthInformationsService) { }\n\n  /**\n   * Metodo che consente di aggiornare la tabella ad ogni cambio degli attributi attivi (avviene quando si aggiorna la fase attiva)\n   */\n  ngOnInit() {\n    this.activeAttributesService.getActiveAttributes()\n      .subscribe(attributes => {\n        this.activeAttributes = attributes;\n        this.displayedColumns = this.activeAttributes.map((attribute) => attribute.attributename!);\n        this.initializeForm();\n      });\n  }\n\n  /**\n   * Metodo per inizializzare il form: \n   * Si inseriscono nuovi controlli (togliendo i vecchi)\n   * Si assegnano valori di default\n   * Si assegnano dei validatori\n   */\n  private initializeForm(): void {\n    this.form = new FormGroup({});\n\n    this.activeAttributes.forEach((value, index) => {\n      if (value.attributevaluetype == \"Y\") {\n        this.form.addControl(\"control-\" + index.toString(), new FormControl(false, Validators.required));\n      } else {\n        this.form.addControl(\"control-\" + index.toString(), new FormControl('', Validators.required));\n      }\n    });\n\n    if (this.activeAttributes.length == 0) {\n      this.openSnackBar(this.translateService.instant(\"Errore: non sono disponibili attributi per la fase selezionata!\"), \"X\");\n    }\n  }\n\n  /**\n   * Metodo per mostrare a video il dialog di conferma dei dati inseriti per l'aggiunta di un nuovo log\n   */\n  public addDialog(): void {\n\n    let formData: string[] = [];\n\n    this.activeAttributes.forEach((value, index) => {\n      let entry: string = value.attributename! + \": \";\n\n      if (value.attributevaluetype != \"L\") {\n        entry += this.form.get('control-' + index.toString())?.value;\n      } else {\n        let position: number = 0;\n        position = value.optionvalue?.value.value.findIndex((value) => {\n          return this.form.get('control-' + index.toString())?.value == value;\n        })!;\n\n        entry += new OptionsPipe().transform(this.form.get('control-' + index.toString())?.value, value.optionvalue?.value.key.at(position)!);\n      }\n\n      formData.push(entry);\n    });\n\n    const addDialog = this.dialog.open(ConfirmDataDialogComponent, {\n      data: {\n        title: 'Aggiungi un log',\n        description: 'Dati inseriti:',\n        resume: formData\n      }\n    });\n\n    addDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"confirm-option\":\n          this.add();\n          this.clearDialog();\n          break;\n        case \"cancel-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  /**\n   * Metodo per mostrare a video il dialog di conferma dei dati inseriti per la modifica di un log\n   */\n  public updateDialog(): void {\n    const updateDialog = this.dialog.open(ConfirmDataDialogComponent, {\n      data: {\n        title: 'Modifica il log selezionato',\n        description: 'Dati aggiornati: ' + this.form.value\n      }\n    });\n\n    updateDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"confirm-option\":\n          this.update();\n          this.clearDialog();\n          break;\n        case \"cancel-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  /**\n   * Metodo per aggiungere un nuovo log relativo alla fase di qualità attiva\n   */\n  public add(): void {\n\n    const token: string = this.authInfoService.Token;\n    let qualityvalue: string = \"{\\\"\";\n\n    for (let i = 0; i \n    \n\n    \n        {{\"Attributi\" | translate}}\n\n\n -->\n\n\n    \n        \n\n            \n                 {{attribute.attributename}}\n                \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                    \n                        \n                            {{option | optionsTrim: attribute.optionvalue?.value?.key?.at(i)!}}\n                            \n                        \n                    \n                \n            \n            \n            \n        \n    \n    \n        {{\"Aggiungi\"\n            | translate}}\n    \n\n\n\n\n -->\n\n\n    \n        \n            \n                 {{attribute.attributename}}\n                \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                    \n                        \n                            {{option | optionsTrim: attribute.optionvalue?.value?.key?.at(i)!}}\n                            \n                        \n                    \n                \n            \n            \n            \n        \n    \n    \n        {{\"Aggiorna\"\n            | translate}}\n    \n\n    \n\n    \n                \n                    ./log-modifier.component.scss\n                \n                table {\n    width: 100%;\n}\n\ntable * {\n    text-align: center;\n    padding-top: 0.5em;\n}\n\n.header {\n    width: 100%;\n    text-align: center;\n    padding-top: 0.75em;\n    padding-bottom: 0.75em;\n}\n\nmat-checkbox {\n    transform: scale(1.5);\n    margin-bottom: 0.5rem;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    gap: 1em;\n}\n\n#submitButton {\n    margin: auto;\n    height: 2.5em;\n    color: white;\n}\n\n#button-tooltip {\n    display: flex;\n    margin: auto;\n    margin-bottom: 1em;\n\n}\n\n.container {\n    position: relative;\n    max-height: 80%;\n    width: 90%;\n    overflow: auto;\n    margin: auto;\n    margin-top: 1em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\"Attributi\" | translate}} -->                                         {{attribute.attributename}}                                                                                                                                                                                                                                                            {{option | optionsTrim: attribute.optionvalue?.value?.key?.at(i)!}}                                                                                                                                                    {{\"Aggiungi\"            | translate}}     -->                                         {{attribute.attributename}}                                                                                                                                                                                                                                                            {{option | optionsTrim: attribute.optionvalue?.value?.key?.at(i)!}}                                                                                                                                                    {{\"Aggiorna\"            | translate}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogModifierComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/LogViewerComponent.html": { "url": "components/LogViewerComponent.html", "title": "component - LogViewerComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  LogViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/log-viewer/log-viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe di visualizzazione dei log inseriti\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-log-viewer\n            \n\n\n\n            \n                styleUrls\n                ./log-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./log-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeAttributesService: ActiveAttributesService, snackBar: MatSnackBar, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:19\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce gli attributi relativi a una fase selezionata ed i loro valori\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeAttributesService\n                                                  \n                                                        \n                                                                        ActiveAttributesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio che gestisce gli attributi attualmente attivi\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di notifica eventi\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-viewer/log-viewer.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Metodo per ottenere colonne e log salvati per la fase attuale\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                        \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/log-viewer/log-viewer.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Messaggio da mostrare\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Etichetta del pulsante di chiusura\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/log-viewer/log-viewer.component.ts:19\n                        \n                    \n\n            \n                \n                    Le colonne da mostrare (la descrizione degli attributi che caratterizzano un controllo qualità per la fase selezionata)\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActiveAttributesService } from 'src/app/services/active-attributes/active-attributes.service';\n\n/**\n * Classe di visualizzazione dei log inseriti\n */\n@Component({\n  selector: 'app-log-viewer',\n  templateUrl: './log-viewer.component.html',\n  styleUrls: ['./log-viewer.component.scss']\n})\nexport class LogViewerComponent implements OnInit {\n\n  /**\n   * Le colonne da mostrare (la descrizione degli attributi che caratterizzano un controllo qualità per la fase selezionata)\n   */\n  public displayedColumns: Array = new Array();\n\n  /**\n   * Costruttore della classe che gestisce gli attributi relativi a una fase selezionata ed i loro valori\n   * @param activeAttributesService Servizio che gestisce gli attributi attualmente attivi\n   * @param snackBar Barra di notifica eventi\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   */\n  constructor(private activeAttributesService: ActiveAttributesService, private snackBar: MatSnackBar, private translateService: TranslateService) { }\n\n  /**\n   * Metodo per ottenere colonne e log salvati per la fase attuale\n   */\n  ngOnInit(): void {\n    this.activeAttributesService.getActiveAttributes()\n      .subscribe(attributes => {\n        this.displayedColumns = attributes.map((attribute) => attribute.attributename!);\n\n        if (this.displayedColumns.length == 0) {\n          this.openSnackBar(this.translateService.instant(\"Errore: non sono disponibili attributi per la fase selezionata!\"), \"X\");\n        }\n      });\n  }\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n  */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar', 'login-snackbar'],\n    });\n  }\n\n}\n\n    \n\n    \n        {{\"Log\" | translate}}\n\n  \n\n    \n       {{column}} \n      \n      \n    \n\n    \n    \n  \n\n    \n\n    \n                \n                    ./log-viewer.component.scss\n                \n                table {\n    width: 100%;\n}\n\ntable * {\n    text-align: center;\n    padding-top: 0.5em;\n}\n\n.header {\n    width: 100%;\n    text-align: center;\n    padding-top: 0.75em;\n    padding-bottom: 0.75em;\n}\n\n.container {\n    position: relative;\n    max-height: 80%;\n    width: 90%;\n    overflow: auto;\n    margin: auto;\n    margin-top: 1em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\"Log\" | translate}}             {{column}}                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Login$Params.html": { "url": "interfaces/Login$Params.html", "title": "interface - Login$Params", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Login$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/authentication/login.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per il login - username\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\n/**\n * Interfaccia che definisce i parametri per il login - username\n */\nexport interface Login$Params {\n  body: {\n    'password'?: string;\n    'username'?: string;\n  }\n}\n\n/**\n * Funzione di utilità per il login - username\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta\n */\nexport function login(http: HttpClient, rootUrl: string, params: Login$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, login.PATH, 'post');\n  if (params) {\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa al login - username\n */\nlogin.PATH = '/login';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/LoginPinComponent.html": { "url": "components/LoginPinComponent.html", "title": "component - LoginPinComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  LoginPinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login-pin/login-pin.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce il form di login con username e password\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-pin\n            \n\n\n\n            \n                styleUrls\n                ./login-pin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-pin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                append\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                            \n                                    Private\n                                prepareParams\n                            \n                            \n                                    Public\n                                removeLast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, operatorsService: OperatorsService, authInfoService: AuthInformationsService, snackBar: MatSnackBar, router: Router, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login-pin/login-pin.component.ts:34\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di login con pin: evita di renderizzare la pagina se non si è prima ottenuto il token\nReindirizza alla dashboard qualora vi fosse già una sessione attiva\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Variabile atta alla costruzione del form a livello logico\n\n                                                        \n                                                \n                                                \n                                                        operatorsService\n                                                  \n                                                        \n                                                                        OperatorsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per ottenere gli operatori attivi\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di visualizzazione di messaggi di stato (ex. login fallito)\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router per eseguire dei reindirizzamenti su browser\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        append\n                        \n                    \n                \n            \n            \n                \n                        \n                    append(input: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-pin/login-pin.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Metodo per appendere l'ultimo numero inserito dall'utente nella casella di testo riservata al pin\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero da aggiungere alla stringa numerica che rappresenta il pin immesso dall'utente\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-pin/login-pin.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Metodo per cancellare il pin inserito, pulendo la casella di testo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-pin/login-pin.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Metodo per eseguire il login, consente di salvare l'id utente nel servizio authInfoService e passare così alla visualizzazione di fasi e informazioni di controllo qualità\nIn caso di errore, gestisce l'apertura della barra di stato\nGestisce l'apertura della barra di caricamento\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-pin/login-pin.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Costruzione del form alla creazione del componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                        \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-pin/login-pin.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Messaggio da mostrare\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Etichetta del pulsante di chiusura\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareParams(token: string, fieldName: string, value: string, operator: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-pin/login-pin.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Metodo per preparare i parametri per le richieste relative agli operatori\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token di autenticazione per eseguire la chiamata\n\n                                            \n                                        \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Campo per il quale filtrare\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valore per il quale filtrare\n\n                                            \n                                        \n                                        \n                                                operator\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Operatore per il quale filtrare\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Fetch$Params\n\n                        \n                            \n                                I parametri per una richiesta relativa agli operatori\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeLast\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeLast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-pin/login-pin.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Metodo per rimuovere l'ultima cifra del pin inserito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-pin/login-pin.component.ts:29\n                        \n                    \n\n            \n                \n                    Form di login\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-pin/login-pin.component.ts:24\n                        \n                    \n\n            \n                \n                    Variabile booleana per cambiare l'icona che nasconde il contenuto del campo \"password\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-pin/login-pin.component.ts:34\n                        \n                    \n\n            \n                \n                    Variabile booleana per far comparire la rotellina di caricamento qualora la richiesta di login impiegasse più tempo del normale\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ErrorModel } from 'src/app/api/models';\nimport { OperatorsService } from 'src/app/api/services';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Fetch$Params } from 'src/app/api/fn/operators/fetch';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Classe che gestisce il form di login con username e password\n */\n@Component({\n  selector: 'app-login-pin',\n  templateUrl: './login-pin.component.html',\n  styleUrls: ['./login-pin.component.scss']\n})\nexport class LoginPinComponent implements OnInit {\n\n  /**\n  * Variabile booleana per cambiare l'icona che nasconde il contenuto del campo \"password\"\n  */\n  public hide: boolean = true;\n\n  /**\n   * Form di login\n   */\n  public form!: FormGroup;\n\n  /**\n   * Variabile booleana per far comparire la rotellina di caricamento qualora la richiesta di login impiegasse più tempo del normale\n   */\n  public loading: boolean = false;\n\n  /**\n   * Costruttore della classe di login con pin: evita di renderizzare la pagina se non si è prima ottenuto il token\n   * Reindirizza alla dashboard qualora vi fosse già una sessione attiva\n   * @param formBuilder Variabile atta alla costruzione del form a livello logico\n   * @param operatorsService Servizio per ottenere gli operatori attivi\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param snackBar Barra di visualizzazione di messaggi di stato (ex. login fallito)\n   * @param router Router per eseguire dei reindirizzamenti su browser\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   */\n  constructor(private formBuilder: FormBuilder, private operatorsService: OperatorsService, private authInfoService: AuthInformationsService, private snackBar: MatSnackBar, private router: Router, private translateService: TranslateService) {\n    if (localStorage.getItem('ADeToken') == null || localStorage.getItem('ADeToken') == \"\") {\n      this.router.navigate(['login/username']);\n    }\n\n    if (sessionStorage.getItem('ADeUserId') != \"\" && sessionStorage.getItem('ADeUserId') != null && sessionStorage.getItem('ADeUserId') as any as number != 0\n      && sessionStorage.getItem('ADeUserName') != \"\" && sessionStorage.getItem('ADeUserName') != null && sessionStorage.getItem('ADeUserName') != \"\"\n      && sessionStorage.getItem('ADeUserTheme') != \"\" && sessionStorage.getItem('ADeUserTheme') != null && sessionStorage.getItem('ADeUserTheme') as any as \"DM\" | \"WM\" | undefined != undefined) {\n      this.authInfoService.UserId = sessionStorage.getItem('ADeUserId') as any as number;\n      this.authInfoService.UserName = sessionStorage.getItem(\"ADeUserName\")!;\n      this.authInfoService.UserTheme = sessionStorage.getItem(\"ADeUserTheme\") as \"DM\" | \"WM\";\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  /**\n   * Costruzione del form alla creazione del componente\n   */\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      pin: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n   */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar', 'login-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo per preparare i parametri per le richieste relative agli operatori\n   * @param token Token di autenticazione per eseguire la chiamata\n   * @param fieldName Campo per il quale filtrare\n   * @param value Valore per il quale filtrare\n   * @param operator Operatore per il quale filtrare\n   * @returns I parametri per una richiesta relativa agli operatori\n   */\n  private prepareParams(token: string, fieldName: string, value: string, operator: string): Fetch$Params {\n    return {\n      \"AdesuiteToken\": token,\n      \"body\": {\n        \"startRow\": 0,\n        \"criteria\": [\n          {\n            \"fieldName\": fieldName as \"userpin\" | \"mes_theme_display\" | \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"foto\" | \"ad_user_id\" | undefined,\n            \"value\": value,\n            \"operator\": operator as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          }\n        ],\n        \"endRow\": 1\n      }\n    };\n  }\n\n  /**\n   * Metodo per appendere l'ultimo numero inserito dall'utente nella casella di testo riservata al pin \n   * @param input Numero da aggiungere alla stringa numerica che rappresenta il pin immesso dall'utente\n   */\n  public append(input: number): void {\n    const previous = this.form.get('pin')?.value;\n    this.form.setValue({ \"pin\": previous + input });\n  }\n\n  /**\n   * Metodo per cancellare il pin inserito, pulendo la casella di testo\n   */\n  public clear(): void {\n    this.form = this.formBuilder.group({\n      pin: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Metodo per rimuovere l'ultima cifra del pin inserito\n   */\n  public removeLast(): void {\n    const element = (document.getElementById(\"pin\"));\n    this.form.setValue({ \"pin\": element.value.substring(0, element.value.length - 1) });\n  }\n\n  /**\n   * Metodo per eseguire il login, consente di salvare l'id utente nel servizio authInfoService e passare così alla visualizzazione di fasi e informazioni di controllo qualità\n   * In caso di errore, gestisce l'apertura della barra di stato\n   * Gestisce l'apertura della barra di caricamento\n   */\n  public login(): void {\n\n    if (this.form.invalid) {\n      this.openSnackBar((this.translateService.instant(\"Il pin inserito non è valido!\")), \"X\");\n      return;\n    }\n\n    // Dichiarazioni dati di autenticazione\n    const token = this.authInfoService.Token;\n    const pin = this.form.controls['pin'].value;\n\n    // Dichiarazioni dettate dai modelli in /app/api/models\n    const fieldName = \"userpin\" as \"userpin\" | \"mes_theme_display\" | \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"foto\" | \"ad_user_id\";\n    const operator = \"equals\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\";\n\n    this.loading = true;\n\n    const params = this.prepareParams(token, fieldName, pin, operator);\n\n    this.operatorsService.fetch(params)\n      .subscribe({\n        next: (response) => {\n\n          if (response.data != undefined && response.data[0] != undefined && response.data[0].ad_user_id != undefined && response.data[0].name != undefined && response.data[0].mes_theme != undefined) {\n            this.authInfoService.UserId = response.data[0].ad_user_id;\n            this.authInfoService.UserName = response.data[0].name.trim();\n            this.authInfoService.UserTheme = response.data[0].mes_theme.trim() as \"DM\" | \"WM\";\n          }\n          else {\n            this.openSnackBar(this.translateService.instant(\"Il PIN inserito non appartiene ad alcun utente\"), \"X\")\n          };\n          if (this.authInfoService.UserId && this.authInfoService.UserName) {\n            this.router.navigate(['dashboard']);\n          }\n        },\n        error: (error) => {\n          const errorDescription = (error.error as ErrorModel) != null ? (error.error as ErrorModel).description : (error.status == 401 ? \"Non autorizzato\" : \"Errore lato server\");\n          this.openSnackBar(this.translateService.instant(\"Errore \" + error.status + \" - \" + errorDescription), \"X\");\n          if (error.status == 401) {\n            this.authInfoService.Token = \"\";\n            this.router.navigate(['login/username']);\n          }\n          this.loading = false;\n        },\n        complete: () => { this.loading = false; }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Pin\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n        {{\"Accedi\" | translate}}\n        \n            \n                1\n                2\n                3\n                4\n                5\n                6\n                7\n                8\n                9\n                \n                    \n                \n                0\n                DEL\n            \n        \n    \n    \n\n\n    \n        {{\"Caricamento\" | translate}} \n    \n\n    \n\n    \n                \n                    ./login-pin.component.scss\n                \n                @import \"../../variables.scss\";\n\n#visibility-button {\n    border: 0px;\n    height: 40px;\n    width: 40px;\n    border-radius: 20px\n}\n\ninput.example-right-align::-webkit-outer-spin-button,\ninput.example-right-align::-webkit-inner-spin-button {\n    display: none;\n}\n\ninput.example-right-align {\n    -moz-appearance: textfield;\n}\n\n#form-background {\n    background-color: $backgroundColor;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\nform {\n    width: 45%;\n    height: 30%;\n    max-height: 500px;\n    background-color: white;\n    border-radius: 50px;\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5em;\n    gap: 1em;\n    flex-basis: 60%;\n    padding: 3em;\n    padding-bottom: 2.5em;\n}\n\nform>* {\n    height: 80px;\n    min-height: 80px;\n}\n\nform button {\n    color: white;\n    background-color: $backgroundColor;\n    border-radius: 5px;\n}\n\nform button:hover {\n    background-color: white;\n    color: $backgroundColor;\n    border: 1px solid black;\n    cursor: pointer;\n    transition: 250ms;\n}\n\nform>button {\n    width: auto;\n    height: 50px;\n    min-height: 60px;\n    margin-bottom: 3%;\n    font-size: 30px;\n    padding: 10px;\n}\n\nimg {\n    width: 20%;\n    height: 10%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: auto;\n    flex-basis: 25%;\n}\n\n#pin {\n    font-size: 25px;\n}\n\n#loading-frame {\n    min-width: 100px;\n    width: fit-content;\n    margin: auto;\n    position: absolute;\n    bottom: 10px;\n    left: 50%;\n    color: darkblue;\n    font-size: large;\n    font-weight: 500;\n    transform: translate(-50%, 0);\n}\n\n#loading-frame>* {\n    display: flex;\n    gap: 15px;\n    padding: 15px;\n    position: relative;\n    background-color: white;\n    border: 1px solid gray;\n    box-shadow: 0px 0px 5px white;\n}\n\n#pinFrame {\n    display: grid;\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n    gap: 10px;\n    padding: 10px;\n    min-width: 240px;\n    max-width: 400px;\n    margin: 0 auto 0 auto;\n}\n\n.pinButton {\n    border: 1px solid rgba(0, 0, 0, 0.8);\n    padding: 5px;\n    text-align: center;\n    font-size: 40px;\n}\n\n#del {\n    padding: 0;\n}\n\n.mat-icon {\n    margin-top: 0.2em;\n}\n\n\n@media only screen and (max-height: 800px) {\n    img {\n        height: 8%;\n        width: 15%;\n    }\n\n    form {\n        height: 50%;\n        padding: 1.5em;\n        padding-bottom: 1em;\n    }\n}\n\n@media only screen and (max-height: 800px),\n(max-width: 1000px) {\n\n    .pinButton {\n        font-size: 30px;\n    }\n\n    form>button {\n        font-size: 20px;\n        min-height: 30px;\n        padding: 5px;\n    }\n}\n\n@media only screen and (max-height : 700px) and (max-width : 1920px),\n(max-width: 600px) {\n    img {\n        height: 8%;\n        width: 15%;\n        position: absolute;\n        top: 20px;\n        right: 20px;\n    }\n\n    #form-background {\n        background-color: white;\n        width: 100%;\n        height: 100%;\n    }\n\n    form {\n        margin: auto 0 auto 0;\n        width: auto;\n        height: auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Pin                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                            {{\"Accedi\" | translate}}                                    1                2                3                4                5                6                7                8                9                                                                    0                DEL                                        {{\"Caricamento\" | translate}}     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/LoginUsernameComponent.html": { "url": "components/LoginUsernameComponent.html", "title": "component - LoginUsernameComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  LoginUsernameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login-username/login-username.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce il form di login con username e password\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-username\n            \n\n\n\n            \n                styleUrls\n                ./login-username.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-username.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthenticationService, authInfoService: AuthInformationsService, snackBar: MatSnackBar, router: Router, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login-username/login-username.component.ts:32\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di login con username e password, evita di renderizzare il form di login qualora vi fosse già un token di autenticazione in localStorage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Variabile atta alla costruzione del form a livello logico\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di autenticazione\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di visualizzazione di messaggi di stato (ex. login fallito)\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router per eseguire dei reindirizzamenti su browser\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-username/login-username.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Metodo per eseguire il login, consente di salvare il token in localStorage e passare, in caso di successo, al login tramite pin\nIn caso di errore, gestisce l'apertura della barra di stato\nGestisce l'apertura della barra di caricamento\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-username/login-username.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Costruzione del form alla creazione del componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                        \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-username/login-username.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Messaggio da mostrare\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Etichetta del pulsante di chiusura\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-username/login-username.component.ts:27\n                        \n                    \n\n            \n                \n                    Form di login\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-username/login-username.component.ts:22\n                        \n                    \n\n            \n                \n                    Variabile booleana per cambiare l'icona che nasconde il contenuto del campo \"password\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-username/login-username.component.ts:32\n                        \n                    \n\n            \n                \n                    Variabile booleana per far comparire la rotellina di caricamento qualora la richiesta di login impiegasse più tempo del normale\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ErrorModel } from 'src/app/api/models';\nimport { AuthenticationService } from 'src/app/api/services';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Classe che gestisce il form di login con username e password\n */\n@Component({\n  selector: 'app-login-username',\n  templateUrl: './login-username.component.html',\n  styleUrls: ['./login-username.component.scss']\n})\nexport class LoginUsernameComponent implements OnInit {\n  /**\n   * Variabile booleana per cambiare l'icona che nasconde il contenuto del campo \"password\"\n   */\n  public hide: boolean = true;\n\n  /**\n   * Form di login\n   */\n  public form!: FormGroup;\n\n  /**\n   * Variabile booleana per far comparire la rotellina di caricamento qualora la richiesta di login impiegasse più tempo del normale\n   */\n  public loading: boolean = false;\n\n  /**\n   * Costruttore della classe di login con username e password, evita di renderizzare il form di login qualora vi fosse già un token di autenticazione in localStorage\n   * @param formBuilder Variabile atta alla costruzione del form a livello logico\n   * @param authService Servizio di autenticazione\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param snackBar Barra di visualizzazione di messaggi di stato (ex. login fallito)\n   * @param router Router per eseguire dei reindirizzamenti su browser\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   */\n  constructor(private formBuilder: FormBuilder, private authService: AuthenticationService, private authInfoService: AuthInformationsService, private snackBar: MatSnackBar, private router: Router, private translateService: TranslateService) {\n    if (localStorage.getItem(\"ADeToken\") != undefined && localStorage.getItem(\"ADeToken\") != \"\") {\n      this.authInfoService.Token = localStorage.getItem(\"ADeToken\")!;\n      this.router.navigate(['login/pin']);\n    }\n  }\n\n  /**\n   * Costruzione del form alla creazione del componente\n   */\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n   */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar', 'login-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo per eseguire il login, consente di salvare il token in localStorage e passare, in caso di successo, al login tramite pin\n   * In caso di errore, gestisce l'apertura della barra di stato\n   * Gestisce l'apertura della barra di caricamento\n   */\n  public login(): void {\n    if (this.form.invalid) {\n      this.openSnackBar(this.translateService.instant(\"Inserire tutti i dati richiesti\"), \"X\");\n      return;\n    }\n\n    this.loading = true;\n\n    const params = {\n      \"body\": {\n        'password': this.form.controls['password'].value,\n        'username': this.form.controls['username'].value\n      }\n    };\n\n    this.authService.login(params)\n      .subscribe({\n        next: (response) => {\n          response.token != undefined ? this.authInfoService.Token = response.token : this.openSnackBar(this.translateService.instant(\"Errore 500 - Token nullo\"), \"X\");\n\n          if (this.authInfoService.Token) {\n            this.router.navigate(['login/pin']);\n          }\n        },\n        error: response => {\n          const errorDescription = (response.error as ErrorModel).description;\n          this.openSnackBar(this.translateService.instant(\"Errore \" + response.status + \" - \" + errorDescription), \"X\");\n          this.loading = false;\n        },\n        complete: () => { this.loading = false; }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{\"Nome utente\" | translate}}\n            \n        \n        \n            Password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n        {{\"Accedi\" | translate}}\n    \n    \n\n\n    \n        {{\"Caricamento\" | translate}} \n    \n\n    \n\n    \n                \n                    ./login-username.component.scss\n                \n                @import \"../../variables.scss\";\n\n#visibility-button {\n    border: 0px;\n    height: 40px;\n    width: 40px;\n    border-radius: 20px\n}\n\ninput.example-right-align::-webkit-outer-spin-button,\ninput.example-right-align::-webkit-inner-spin-button {\n    display: none;\n}\n\ninput.example-right-align {\n    -moz-appearance: textfield;\n}\n\n#form-background {\n    background-color: $backgroundColor;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\nform {\n    width: 50%;\n    height: 30%;\n    max-height: 400px;\n    background-color: white;\n    border-radius: 50px;\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: auto;\n    gap: 1.2em;\n    flex-basis: 20%;\n    padding: 3em;\n    padding-bottom: 2.5em;\n}\n\nform>* {\n    height: 80px;\n    min-height: 80px;\n}\n\nform button {\n    color: white;\n    background-color: $backgroundColor;\n}\n\nform>button {\n    width: auto;\n    border-radius: 5px;\n    height: 50px;\n    min-height: 40px;\n    margin-bottom: 3%;\n    font-size: large;\n}\n\nform button:hover {\n    background-color: white;\n    color: $backgroundColor;\n    border: 1px solid black;\n    cursor: pointer;\n    transition: 250ms;\n}\n\nimg {\n    width: 20%;\n    height: 10%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: auto;\n    flex-basis: 40%;\n}\n\n#loading-frame {\n    min-width: 100px;\n    width: fit-content;\n    margin: auto;\n    position: absolute;\n    bottom: 10px;\n    left: 50%;\n    color: darkblue;\n    font-size: large;\n    font-weight: 500;\n    transform: translate(-50%, 0);\n}\n\n#loading-frame>* {\n    display: flex;\n    gap: 15px;\n    padding: 15px;\n    position: relative;\n    background-color: white;\n    border: 1px solid gray;\n    box-shadow: 0px 0px 5px white;\n}\n\n.mat-icon {\n    margin-top: 0.2em;\n}\n\n@media only screen and (max-width: 1200px) {\n    img {\n        width: 40%;\n        height: 20%;\n    }\n}\n\n@media only screen and (max-height: 700px) {\n    img {\n        height: 8%;\n        width: 15%;\n    }\n\n    form {\n        height: 50%;\n        padding: 1.5em;\n        padding-bottom: 1em;\n    }\n}\n\n@media only screen and (max-height: 700px) and (max-width: 1000px) {\n    img {\n        height: 15%;\n        width: 30%;\n    }\n}\n\n@media only screen and (max-height : 600px) and (max-width : 1920px),\n(max-width: 500px) {\n    img {\n        height: 8%;\n        width: 15%;\n        position: absolute;\n        top: 20px;\n        right: 20px;\n    }\n\n    #form-background {\n        background-color: white;\n        width: 100%;\n        height: 100%;\n    }\n\n    form {\n        margin: auto 0 auto 0;\n        width: auto;\n        height: auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{\"Nome utente\" | translate}}                                        Password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                            {{\"Accedi\" | translate}}                    {{\"Caricamento\" | translate}}     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginUsernameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Logout$Params.html": { "url": "interfaces/Logout$Params.html", "title": "interface - Logout$Params", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logout$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/authentication/logout.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per il logout\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\n/**\n * Interfaccia che definisce i parametri per il logout\n */\nexport interface Logout$Params {\n  body: any\n}\n\n/**\n * Funzione di utilità per il logout\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta\n */\nexport function logout(http: HttpClient, rootUrl: string, params: Logout$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, logout.PATH, 'post');\n  if (params) {\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa al logout\n */\nlogout.PATH = '/logout';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/LogoutDialogComponent.html": { "url": "components/LogoutDialogComponent.html", "title": "component - LogoutDialogComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  LogoutDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/logout-dialog/logout-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che si occupa della presentazione e degli eventi relativi a un dialog\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-dialog\n            \n\n\n\n            \n                styleUrls\n                ./logout-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fromPage\n                            \n                            \n                                    \n                                    \n                                    Public\n                                mydata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                stay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, mydata: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/logout-dialog/logout-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di presentazione e gestione degli eventi relativi a un dialog\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n\n                                                        \n                                                \n                                                \n                                                        mydata\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Descrizione (titolo + descrizione) del dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        exit\n                        \n                    \n                \n            \n            \n                \n                        \n                    exit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/logout-dialog/logout-dialog.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Metodo che segnala la scelta dell'opzione \"Esci\" nel dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/logout-dialog/logout-dialog.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Metodo che inizializza titolo e descrizione del dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stay\n                        \n                    \n                \n            \n            \n                \n                        \n                    stay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/logout-dialog/logout-dialog.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Metodo che segnala la scelta dell'opzione \"Rimani\" nel dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/logout-dialog/logout-dialog.component.ts:24\n                        \n                    \n\n            \n                \n                    Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fromPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/logout-dialog/logout-dialog.component.ts:17\n                        \n                    \n\n            \n                \n                    Attributo che descrive il tipo di dialog (titolo + descrizione)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        mydata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()@Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/logout-dialog/logout-dialog.component.ts:24\n                        \n                    \n\n            \n                \n                    Descrizione (titolo + descrizione) del dialog\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n/**\n * Classe che si occupa della presentazione e degli eventi relativi a un dialog\n */\n@Component({\n  selector: 'app-logout-dialog',\n  templateUrl: './logout-dialog.component.html',\n  styleUrls: ['./logout-dialog.component.scss']\n})\nexport class LogoutDialogComponent implements OnInit {\n\n  /**\n   * Attributo che descrive il tipo di dialog (titolo + descrizione)\n   */\n  public fromPage!: { title: string, description: string };\n\n  /**\n   * Costruttore della classe di presentazione e gestione degli eventi relativi a un dialog\n   * @param dialogRef Riferimento programmatico al dialog grafico (per triggerarne la chiusura)\n   * @param mydata Descrizione (titolo + descrizione) del dialog\n   */\n  constructor(public dialogRef: MatDialogRef, @Optional() @Inject(MAT_DIALOG_DATA) public mydata: any) { }\n\n  /**\n   * Metodo che inizializza titolo e descrizione del dialog\n   */\n  ngOnInit(): void {\n    this.fromPage = this.mydata;\n  }\n\n  /**\n   * Metodo che segnala la scelta dell'opzione \"Rimani\" nel dialog\n   */\n  public stay(): void {\n    this.dialogRef.close({ event: 'stay-option' });\n  }\n\n  /**\n   * Metodo che segnala la scelta dell'opzione \"Esci\" nel dialog\n   */\n  public exit(): void {\n    this.dialogRef.close({ event: 'exit-option' });\n  }\n}\n\n    \n\n    \n        \n    {{fromPage.title | translate}}\n    {{fromPage.description | translate}}\n    {{\"Sicuro di voler uscire?\" | translate}}\n    \n        {{\"Rimani\" | translate}}\n        {{\"Esci\"| translate}}\n    \n\n    \n\n    \n                \n                    ./logout-dialog.component.scss\n                \n                #dialog {\n    padding: 1em;\n    width: 15em;\n    min-width: 100px;\n    color: black;\n}\n\nbutton {\n    background-color: white;\n}\n\n#buttons {\n    text-align: right;\n    margin-top: 1.5em;\n}\n\nbutton {\n    margin: auto;\n    font-weight: 500;\n}\n\n#title {\n    margin-top: 0.2em;\n    font-size: 20px;\n    font-weight: 500;\n}\n\np {\n    font-size: 16px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{fromPage.title | translate}}    {{fromPage.description | translate}}    {{\"Sicuro di voler uscire?\" | translate}}            {{\"Rimani\" | translate}}        {{\"Esci\"| translate}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/LogoutService.html": { "url": "injectables/LogoutService.html", "title": "injectable - LogoutService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logout/logout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce il logout dell'utente in due modalità:\n-) Logout utente: l'utente conserva il token in 'localStorage' ma perde le altre informazioni\n-) Logout completo: l'utente perde anche il token\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                logoutUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authInfoService: AuthInformationsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logout/logout.service.ts:13\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di gestione del logout\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router per eseguire dei reindirizzamenti su browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/logout/logout.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Metodo che gestisce il logout completo da parte dell'utente, eliminando anche il token di autenticazione\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logoutUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    logoutUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/logout/logout.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Metodo che gestisce il logout parziale da parte dell'utente, eliminando solo l'identificativo utente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AuthInformationsService } from '../auth-informations/auth-informations.service';\nimport { Router } from '@angular/router';\n\n/**\n * Classe che gestisce il logout dell'utente in due modalità:\n * -) Logout utente: l'utente conserva il token in 'localStorage' ma perde le altre informazioni\n * -) Logout completo: l'utente perde anche il token\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogoutService {\n\n  /**\n   * Costruttore della classe di gestione del logout\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione \n   * @param router Router per eseguire dei reindirizzamenti su browser\n   */\n  constructor(private authInfoService: AuthInformationsService, private router: Router) { }\n\n  /**\n   * Metodo che gestisce il logout completo da parte dell'utente, eliminando anche il token di autenticazione\n   */\n  public logout(): void {\n    this.authInfoService.clear();\n    this.router.navigate(['login/username']);\n  }\n\n  /**\n   * Metodo che gestisce il logout parziale da parte dell'utente, eliminando solo l'identificativo utente\n   */\n  public logoutUserId(): void {\n    this.authInfoService.clearUser();\n    this.router.navigate(['login/pin']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Message.html": { "url": "interfaces/Message.html", "title": "interface - Message", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che modella il messaggio in ingresso all'applicazione se esegue in un iframe\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            c_projectphase_id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            m_product_id\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectphase_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectphase_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:     \"DM\" | \"WM\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"DM\" | \"WM\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    token: string,\n    lang: string,\n    theme: 'DM' | 'WM',\n    username: string,\n    m_product_id: number,\n    c_projectphase_id: number,\n    user_id: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/OperatorsModel.html": { "url": "interfaces/OperatorsModel.html", "title": "interface - OperatorsModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche di un operatore\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ad_user_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            foto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ismobileuser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mes_theme\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mes_theme_display\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            numero_matricola\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userpin\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ad_user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ad_user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        foto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        foto:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isactive:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ismobileuser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ismobileuser:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mes_theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mes_theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mes_theme_display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mes_theme_display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero_matricola\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero_matricola:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userpin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userpin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OperatorsModel {\n  ad_user_id?: number;\n  foto?: number;\n  isactive?: 'Y' | 'N';\n  ismobileuser?: 'Y' | 'N';\n  mes_theme?: string;\n  mes_theme_display?: string;\n  name?: string;\n  note?: string;\n  numero_matricola?: string;\n  userpin?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/OperatorsService.html": { "url": "injectables/OperatorsService.html", "title": "injectable - OperatorsService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OperatorsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/operators.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                FetchPath\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetch\n                            \n                            \n                                fetch$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/operators.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetch\n                        \n                    \n                \n            \n            \n                \nfetch(params: Fetch$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/operators.service.ts:41\n                        \n                    \n\n\n            \n                \n                        This method provides access only to the response body.\nTo access the full response (for headers, for example), fetch$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Fetch$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch$Response\n                        \n                    \n                \n            \n            \n                \nfetch$Response(params: Fetch$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/operators.service.ts:31\n                        \n                    \n\n\n            \n                \n                        This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use fetch() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Fetch$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        FetchPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000006/operators/fetch'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/operators.service.ts:23\n                        \n                    \n\n            \n                \n                    Path part for operation fetch()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { fetch } from '../fn/operators/fetch';\nimport { Fetch$Params } from '../fn/operators/fetch';\nimport { FetchResponseOperatorsModel } from '../models/fetch-response-operators-model';\n\n@Injectable({ providedIn: 'root' })\nexport class OperatorsService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `fetch()` */\n  static readonly FetchPath = '/9000006/operators/fetch';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `fetch()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch$Response(params: Fetch$Params, context?: HttpContext): Observable> {\n    return fetch(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `fetch$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch(params: Fetch$Params, context?: HttpContext): Observable {\n    return this.fetch$Response(params, context).pipe(\n      map((r: StrictHttpResponse): FetchResponseOperatorsModel => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "pipes/OptionsPipe.html": { "url": "pipes/OptionsPipe.html", "title": "pipe - OptionsPipe", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  OptionsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/options.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce il filtraggio delle opzioni\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        optionsTrim\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(option: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/options.pipe.ts:20\n                        \n                    \n\n\n            \n                \n                        Metodo per togliere le chiavi alle opzioni degli attributi da mostrare a video\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                option\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Opzione da modificare (a cui togliere la chiave)\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Stringa contenente la chiave identificativa del valore dell'opzione da mostrare a video\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                L'opzione modificata senza la chiave\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n/**\n * Classe che gestisce il filtraggio delle opzioni\n */\n@Pipe({ name: 'optionsTrim' })\nexport class OptionsPipe implements PipeTransform {\n\n  /**\n   * Costruttore della classe che gestisce il filtro delle opzioni\n   */\n  constructor() { }\n\n  /**\n   * Metodo per togliere le chiavi alle opzioni degli attributi da mostrare a video\n   * @param option Opzione da modificare (a cui togliere la chiave)\n   * @param key Stringa contenente la chiave identificativa del valore dell'opzione da mostrare a video\n   * @returns L'opzione modificata senza la chiave\n   */\n  public transform(option: string, key: string): string {\n    return option.replaceAll(key, \"\").replaceAll(\"-\", \"\").trim();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/OrderOperatorsModel.html": { "url": "interfaces/OrderOperatorsModel.html", "title": "interface - OrderOperatorsModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderOperatorsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/order-operators-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ordinare gli operatori\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            direction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnname:     \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"userpin\" | \"foto\" | \"ad_user_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mes_theme\" | \"note\" | \"name\" | \"ismobileuser\" | \"numero_matricola\" | \"isactive\" | \"userpin\" | \"foto\" | \"ad_user_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderOperatorsModel {\n  columnname?: 'mes_theme' | 'note' | 'name' | 'ismobileuser' | 'numero_matricola' | 'isactive' | 'userpin' | 'foto' | 'ad_user_id';\n  direction?: 'ASC' | 'DESC';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/OrderQualityattributeModel.html": { "url": "interfaces/OrderQualityattributeModel.html", "title": "interface - OrderQualityattributeModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderQualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/order-qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ordinare gli attributi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            direction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnname:     \"optionvalue\" | \"groupname\" | \"groupdescription\" | \"c_project_attribute_group_id\" | \"attributeseqno\" | \"attributedescription\" | \"ad_reference_id\" | \"m_product_category_id\" | \"m_product_id\" | \"attributevaluetype\" | \"attributevalue\" | \"attributename\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"optionvalue\" | \"groupname\" | \"groupdescription\" | \"c_project_attribute_group_id\" | \"attributeseqno\" | \"attributedescription\" | \"ad_reference_id\" | \"m_product_category_id\" | \"m_product_id\" | \"attributevaluetype\" | \"attributevalue\" | \"attributename\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderQualityattributeModel {\n  columnname?: 'optionvalue' | 'groupname' | 'groupdescription' | 'c_project_attribute_group_id' | 'attributeseqno' | 'attributedescription' | 'ad_reference_id' | 'm_product_category_id' | 'm_product_id' | 'attributevaluetype' | 'attributevalue' | 'attributename';\n  direction?: 'ASC' | 'DESC';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/OrderQualityphaseModel.html": { "url": "interfaces/OrderQualityphaseModel.html", "title": "interface - OrderQualityphaseModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderQualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/order-qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ordinare le fasi di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            direction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnname:     \"c_phase_id\" | \"m_product_category_id\" | \"m_product_id\" | \"status\" | \"projectplan_timeline_id\" | \"isglobal\" | \"c_projectphase_id\" | \"c_bpartner_id\" | \"linename\" | \"color\" | \"start_plan\" | \"phasename\" | \"end_plan\" | \"customer\" | \"c_projectline_id\" | \"ad_org_id\" | \"ad_client_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"c_phase_id\" | \"m_product_category_id\" | \"m_product_id\" | \"status\" | \"projectplan_timeline_id\" | \"isglobal\" | \"c_projectphase_id\" | \"c_bpartner_id\" | \"linename\" | \"color\" | \"start_plan\" | \"phasename\" | \"end_plan\" | \"customer\" | \"c_projectline_id\" | \"ad_org_id\" | \"ad_client_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderQualityphaseModel {\n  columnname?: 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n  direction?: 'ASC' | 'DESC';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/OrderQualitysavelogModel.html": { "url": "interfaces/OrderQualitysavelogModel.html", "title": "interface - OrderQualitysavelogModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderQualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/order-qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce il modello delle richieste per ordinare i log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            direction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnname:     \"qualitystatus\" | \"qualityvalue\" | \"isactive\" | \"c_projectphase_quality_log_id\" | \"c_projectphase_id\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"qualitystatus\" | \"qualityvalue\" | \"isactive\" | \"c_projectphase_quality_log_id\" | \"c_projectphase_id\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderQualitysavelogModel {\n  columnname?: 'qualitystatus' | 'qualityvalue' | 'isactive' | 'c_projectphase_quality_log_id' | 'c_projectphase_id';\n  direction?: 'ASC' | 'DESC';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "classes/Parameter.html": { "url": "classes/Parameter.html", "title": "class - Parameter", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Parameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class for a parameter\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                serializeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: any, options: ParameterOptions, defaultStyle: string, defaultExplode: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ParameterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultExplode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParameterOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:40\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        serializeValue\n                        \n                    \n                \n            \n            \n                \nserializeValue(value: any, separator: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                separator\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ','\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "classes/ParameterCodec.html": { "url": "classes/ParameterCodec.html", "title": "class - ParameterCodec", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom parameter codec to correctly handle the plus sign in parameter\nvalues. See https://github.com/angular/angular/issues/18261\n\n            \n\n\n            \n                Implements\n            \n            \n                        HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decodeKey\n                        \n                    \n                \n            \n            \n                \ndecodeKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeValue\n                        \n                    \n                \n            \n            \n                \ndecodeValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeKey\n                        \n                    \n                \n            \n            \n                \nencodeKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeValue\n                        \n                    \n                \n            \n            \n                \nencodeValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/ParameterOptions.html": { "url": "interfaces/ParameterOptions.html", "title": "interface - ParameterOptions", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParameterOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the options for appending a parameter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            explode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            style\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        explode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        explode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "classes/PathParameter.html": { "url": "classes/PathParameter.html", "title": "class - PathParameter", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PathParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                A parameter in the operation path\n\n            \n\n            \n                Extends\n            \n            \n                            Parameter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                serializeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: any, options: ParameterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ParameterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParameterOptions\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeValue\n                        \n                    \n                \n            \n            \n                \nserializeValue(value: any, separator: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         Parameter\n\n                        \n                    \n                    \n                        \n                                Defined in         Parameter:117\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                separator\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ','\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/PhasesComponent.html": { "url": "components/PhasesComponent.html", "title": "component - PhasesComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  PhasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/phases/phases.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe di gestione della visualizzazione delle fasi\nLe fasi sono presentate come una lista di \"carte\" da scorrere (verticalmente o orizzontalmente, a seconda della modalità di visualizzazione)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-phases\n            \n\n\n\n            \n                styleUrls\n                ./phases.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phases.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                phases\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                setActivePhase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, qualityPhaseService: QualityPhaseService, authInfoService: AuthInformationsService, activePhaseService: ActivePhaseService, logoutService: LogoutService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/phases/phases.component.ts:30\n                            \n                        \n\n                \n                    \n                            Costruttore della classe di visualizzazione fasi, clicca automaticamente sulla prima fase disponibile\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barra di visualizzazione di messaggi di stato (ex. login fallito)\n\n                                                        \n                                                \n                                                \n                                                        qualityPhaseService\n                                                  \n                                                        \n                                                                        QualityPhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per l'ottenimento delle fasi\n\n                                                        \n                                                \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        activePhaseService\n                                                  \n                                                        \n                                                                        ActivePhaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire la fase attiva\n\n                                                        \n                                                \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del logout\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/phases/phases.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Inizializzazione delle fasi: chiamata API per ottenere le fasi\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        openSnackBar\n                        \n                    \n                \n            \n            \n                \n                        \n                    openSnackBar(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/phases/phases.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Messaggio da mostrare\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Etichetta del pulsante di chiusura\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                        \n                    select(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/phases/phases.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Metodo che gestisce graficamente la selezione di una fase\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificativo dell'elemento HTML cliccato\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setActivePhase\n                        \n                    \n                \n            \n            \n                \n                        \n                    setActivePhase(phase: QualityphaseModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/phases/phases.component.ts:163\n                        \n                    \n\n\n            \n                \n                        Metodo per gestire la selezione (programmatica) di una fase\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                phase\n                                            \n                                                            QualityphaseModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nome della fase da impostare come attiva\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/phases/phases.component.ts:25\n                        \n                    \n\n            \n                \n                    Variabile booleana per gestire lo \"skeleton loading\" (il caricamento fittizio di dati)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        phases\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/phases/phases.component.ts:30\n                        \n                    \n\n            \n                \n                    Fasi da visualizzare\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ErrorModel, QualityphaseModel } from 'src/app/api/models';\nimport { QualityPhaseService } from 'src/app/api/services';\nimport { ActivePhaseService } from 'src/app/services/active-phase/active-phase.service';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { LogoutService } from 'src/app/services/logout/logout.service';\n\n/**\n * Classe di gestione della visualizzazione delle fasi\n * Le fasi sono presentate come una lista di \"carte\" da scorrere (verticalmente o orizzontalmente, a seconda della modalità di visualizzazione)\n */\n@Component({\n  selector: 'app-phases',\n  templateUrl: './phases.component.html',\n  styleUrls: ['./phases.component.scss']\n})\nexport class PhasesComponent implements OnInit {\n\n  /**\n   * Variabile booleana per gestire lo \"skeleton loading\" (il caricamento fittizio di dati)\n   */\n  public loading = true;\n\n  /**\n   * Fasi da visualizzare\n   */\n  public phases: Array = new Array();\n\n  /**\n   * Costruttore della classe di visualizzazione fasi, clicca automaticamente sulla prima fase disponibile\n   * @param snackBar Barra di visualizzazione di messaggi di stato (ex. login fallito)\n   * @param qualityPhaseService Servizio per l'ottenimento delle fasi\n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param activePhaseService Servizio per gestire la fase attiva\n   * @param logoutService Servizio di gestione del logout\n   * @param translateService Servizio di gestione delle traduzioni: si basa su file json definiti in /assets/\n   */\n  constructor(private snackBar: MatSnackBar, private qualityPhaseService: QualityPhaseService, private authInfoService: AuthInformationsService, private activePhaseService: ActivePhaseService, private logoutService: LogoutService, private translateService: TranslateService) {\n    // Osserva il rendering del primo pulsante: appena renderizzato, lo preme per far comparire gli attributi\n    var observer = new MutationObserver(function () {\n      if (document.getElementsByClassName('phase').item(0) != null) {\n        let firstCard: HTMLElement = document.getElementsByClassName('phase')[0] as HTMLElement;\n        firstCard.click();\n        observer.disconnect();\n      }\n    });\n    observer.observe(document, { attributes: false, childList: true, characterData: false, subtree: true })\n  }\n\n  /**\n   * Inizializzazione delle fasi: chiamata API per ottenere le fasi\n   */\n  ngOnInit() {\n\n    const token = this.authInfoService.Token;\n\n    // Dichiarazioni dettate dai modelli in /app/api/models\n    const start_plan = \"start_plan\" as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n    const end_plan = \"end_plan\" as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n    const status = \"status\" as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id';\n    const start_plan_operator = \"greaterOrEqual\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\";\n    const end_plan_operator = \"lessOrEqual\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\";\n    const status_operator = \"greaterOrEqual\" as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\";\n    const status_value = \"I\";\n\n    // Condizioni di fetch:\n    // -) start_plan_date: 30gg prima della data attuale\n    // -) end_plan_date: 30gg dopo la data attuale\n    // -) status_value: I, L (tutto tranne C)\n    const previousMonth: number = (new Date().getMonth() - 1) % 12;\n    const nextMonth: number = (new Date().getMonth() + 1) % 12;\n    const previousYear: number = previousMonth == 11 ? new Date().getFullYear() - 1 : new Date().getFullYear();\n    const nextYear: number = nextMonth == 0 ? new Date().getFullYear() + 1 : new Date().getFullYear();\n\n    const start_plan_date: Date = new Date();\n    const end_plan_date: Date = new Date();\n\n    start_plan_date.setMonth(previousMonth);\n    start_plan_date.setFullYear(previousYear);\n    end_plan_date.setMonth(nextMonth);\n    end_plan_date.setFullYear(nextYear);\n\n    const params = {\n      \"AdesuiteToken\": token,\n      \"body\": {\n        \"startRow\": 0,\n        \"criteria\": [\n          {\n            \"fieldName\": start_plan as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"value\": start_plan_date.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\").substring(0, 22),\n            \"operator\": start_plan_operator as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          },\n          {\n            \"fieldName\": end_plan as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"value\": end_plan_date.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\").substring(0, 22),\n            \"operator\": end_plan_operator as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          },\n          {\n            \"fieldName\": status as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"value\": status_value,\n            \"operator\": status_operator as \"equals\" | \"iNotContains\" | \"iContains\" | \"greaterOrEqual\" | \"lessOrEqual\" | undefined\n          }\n        ],\n        \"orderby\": [\n          {\n            \"columnname\": \"end_plan\" as 'c_phase_id' | 'm_product_category_id' | 'm_product_id' | 'status' | 'projectplan_timeline_id' | 'isglobal' | 'c_projectphase_id' | 'c_bpartner_id' | 'linename' | 'color' | 'start_plan' | 'phasename' | 'end_plan' | 'customer' | 'c_projectline_id' | 'ad_org_id' | 'ad_client_id',\n            \"direction\": \"ASC\" as 'DESC' | 'ASC'\n          }\n        ],\n        \"endRow\": 100\n      }\n    };\n\n    this.qualityPhaseService.fetch_2(params)\n      .subscribe({\n        next: (response) => {\n          (response.data != undefined && response.data != null && response.data.length != 0) ? this.phases = response.data : this.openSnackBar(this.translateService.instant(\"Errore: non ci sono fasi da visualizzare!\"), \"X\");\n        },\n        error: (error) => {\n          const errorDescription = (error.error as ErrorModel) != null ? (error.error as ErrorModel).description : (error.status == 401 ? \"Non autorizzato\" : \"Errore lato server\");\n          this.openSnackBar(this.translateService.instant(\"Errore \" + error.status + \" - \" + errorDescription), \"X\");\n          if (error.status == 401) {\n            this.logoutService.logout();\n          }\n        },\n        complete: () => { this.loading = false; }\n      });\n\n  }\n\n  /**\n   * Metodo per l'apertura della barra di visualizzazione di messaggi di stato\n   * @param message Messaggio da mostrare\n   * @param type Etichetta del pulsante di chiusura\n  */\n  private openSnackBar(message: string, type: string): void {\n    this.snackBar.open(message, type, {\n      panelClass: ['red-snackbar', 'login-snackbar'],\n    });\n  }\n\n  /**\n   * Metodo che gestisce graficamente la selezione di una fase\n   * @param id Identificativo dell'elemento HTML cliccato\n   */\n  public select(id: string): void {\n    document.getElementsByClassName(\"selected-card\")[0] ? document.getElementsByClassName(\"selected-card\")[0].classList.remove(\"selected-card\") : \"\";\n    let activeElement = document.getElementById(id);\n    if (activeElement != null && activeElement != undefined && activeElement?.textContent != null && activeElement?.textContent != \"\") {\n      activeElement?.classList.add(\"selected-card\");\n    } else {\n      this.openSnackBar(this.translateService.instant(\"La carta selezionata non contiene testo!\"), \"X\");\n    }\n  }\n\n  /**\n   * Metodo per gestire la selezione (programmatica) di una fase\n   * @param phase Nome della fase da impostare come attiva\n   */\n  public setActivePhase(phase: QualityphaseModel): void {\n    this.activePhaseService.update(phase);\n  }\n\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n           \n          \n           \n           \n        \n      \n    \n    \n      \n        \n          \n          {{\"Inizio\" | translate}}: {{phase.start_plan | date:'dd/MM/yyyy HH:mm'}}\n          {{\"Fine\" | translate}}: {{phase.end_plan | date:'dd/MM/yyyy HH:mm'}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./phases.component.scss\n                \n                mat-card {\n    min-width: 150px;\n    margin: 1em;\n}\n\n.scroll-viewport {\n    width: 100%;\n    height: calc(100% - 2em);\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n}\n\n.scroll-viewport::-webkit-scrollbar {\n    display: none;\n}\n\n@media only screen and (max-width: 1920px) {\n    mat-card {\n        margin-left: 0.5em;\n        margin-right: 0.5em;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                 {{\"Inizio\" | translate}}: {{phase.start_plan | date:\\'dd/MM/yyyy HH:mm\\'}}          {{\"Fine\" | translate}}: {{phase.end_plan | date:\\'dd/MM/yyyy HH:mm\\'}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/QualityAttributeService.html": { "url": "injectables/QualityAttributeService.html", "title": "injectable - QualityAttributeService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QualityAttributeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/quality-attribute.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Visualizza gli attributi disponibile per prodotto o categoria prodotto\n\n            \n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                Fetch_3Path\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetch_3\n                            \n                            \n                                fetch_3$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/quality-attribute.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_3\n                        \n                    \n                \n            \n            \n                \nfetch_3(params: Fetch_3$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-attribute.service.ts:45\n                        \n                    \n\n\n            \n                \n                        This method provides access only to the response body.\nTo access the full response (for headers, for example), fetch_3$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Fetch_3$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_3$Response\n                        \n                    \n                \n            \n            \n                \nfetch_3$Response(params: Fetch_3$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-attribute.service.ts:35\n                        \n                    \n\n\n            \n                \n                        This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use fetch_3() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Fetch_3$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Fetch_3Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000003/qualityattribute/fetch'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-attribute.service.ts:27\n                        \n                    \n\n            \n                \n                    Path part for operation fetch_3()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { fetch_3 } from '../fn/quality-attribute/fetch-3';\nimport { Fetch_3$Params } from '../fn/quality-attribute/fetch-3';\nimport { FetchResponseQualityattributeModel } from '../models/fetch-response-qualityattribute-model';\n\n\n/**\n * Visualizza gli attributi disponibile per prodotto o categoria prodotto\n */\n@Injectable({ providedIn: 'root' })\nexport class QualityAttributeService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `fetch_3()` */\n  static readonly Fetch_3Path = '/9000003/qualityattribute/fetch';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `fetch_3()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_3$Response(params: Fetch_3$Params, context?: HttpContext): Observable> {\n    return fetch_3(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `fetch_3$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_3(params: Fetch_3$Params, context?: HttpContext): Observable {\n    return this.fetch_3$Response(params, context).pipe(\n      map((r: StrictHttpResponse): FetchResponseQualityattributeModel => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/QualityPhaseService.html": { "url": "injectables/QualityPhaseService.html", "title": "injectable - QualityPhaseService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QualityPhaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/quality-phase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Lista delle fasi di cui eseguire i controlli\n\n            \n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                Fetch_2Path\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetch_2\n                            \n                            \n                                fetch_2$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/quality-phase.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_2\n                        \n                    \n                \n            \n            \n                \nfetch_2(params: Fetch_2$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-phase.service.ts:45\n                        \n                    \n\n\n            \n                \n                        This method provides access only to the response body.\nTo access the full response (for headers, for example), fetch_2$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Fetch_2$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_2$Response\n                        \n                    \n                \n            \n            \n                \nfetch_2$Response(params: Fetch_2$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-phase.service.ts:35\n                        \n                    \n\n\n            \n                \n                        This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use fetch_2() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Fetch_2$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Fetch_2Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000005/qualityphase/fetch'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-phase.service.ts:27\n                        \n                    \n\n            \n                \n                    Path part for operation fetch_2()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { fetch_2 } from '../fn/quality-phase/fetch-2';\nimport { Fetch_2$Params } from '../fn/quality-phase/fetch-2';\nimport { FetchResponseQualityphaseModel } from '../models/fetch-response-qualityphase-model';\n\n\n/**\n * Lista delle fasi di cui eseguire i controlli\n */\n@Injectable({ providedIn: 'root' })\nexport class QualityPhaseService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `fetch_2()` */\n  static readonly Fetch_2Path = '/9000005/qualityphase/fetch';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `fetch_2()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_2$Response(params: Fetch_2$Params, context?: HttpContext): Observable> {\n    return fetch_2(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `fetch_2$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_2(params: Fetch_2$Params, context?: HttpContext): Observable {\n    return this.fetch_2$Response(params, context).pipe(\n      map((r: StrictHttpResponse): FetchResponseQualityphaseModel => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/QualitySaveLogService.html": { "url": "injectables/QualitySaveLogService.html", "title": "injectable - QualitySaveLogService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QualitySaveLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/services/quality-save-log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servizi che permettono il salvataggio dei log\n\n            \n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                AddPath\n                            \n                            \n                                    Static\n                                    Readonly\n                                DeletePath\n                            \n                            \n                                    Static\n                                    Readonly\n                                Fetch_1Path\n                            \n                            \n                                    Static\n                                    Readonly\n                                UpdatePath\n                            \n                            \n                                    Private\n                                    Optional\n                                _rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Add\n                            \n                            \n                                Add$Response\n                            \n                            \n                                Delete\n                            \n                            \n                                Delete$Response\n                            \n                            \n                                fetch_1\n                            \n                            \n                                fetch_1$Response\n                            \n                            \n                                Update\n                            \n                            \n                                Update$Response\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfiguration, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/services/quality-save-log.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfiguration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Add\n                        \n                    \n                \n            \n            \n                \nAdd(params: Add$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-save-log.service.ts:52\n                        \n                    \n\n\n            \n                \n                        This method provides access only to the response body.\nTo access the full response (for headers, for example), Add$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Add$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Add$Response\n                        \n                    \n                \n            \n            \n                \nAdd$Response(params: Add$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-save-log.service.ts:42\n                        \n                    \n\n\n            \n                \n                        This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use Add() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Add$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Delete\n                        \n                    \n                \n            \n            \n                \nDelete(params: Delete$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-save-log.service.ts:77\n                        \n                    \n\n\n            \n                \n                        This method provides access only to the response body.\nTo access the full response (for headers, for example), Delete$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Delete$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Delete$Response\n                        \n                    \n                \n            \n            \n                \nDelete$Response(params: Delete$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-save-log.service.ts:67\n                        \n                    \n\n\n            \n                \n                        This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use Delete() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Delete$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_1\n                        \n                    \n                \n            \n            \n                \nfetch_1(params: Fetch_1$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-save-log.service.ts:102\n                        \n                    \n\n\n            \n                \n                        This method provides access only to the response body.\nTo access the full response (for headers, for example), fetch_1$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Fetch_1$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetch_1$Response\n                        \n                    \n                \n            \n            \n                \nfetch_1$Response(params: Fetch_1$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-save-log.service.ts:92\n                        \n                    \n\n\n            \n                \n                        This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use fetch_1() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Fetch_1$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Update\n                        \n                    \n                \n            \n            \n                \nUpdate(params: Update$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-save-log.service.ts:127\n                        \n                    \n\n\n            \n                \n                        This method provides access only to the response body.\nTo access the full response (for headers, for example), Update$Response() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Update$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Update$Response\n                        \n                    \n                \n            \n            \n                \nUpdate$Response(params: Update$Params, context?: HttpContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/services/quality-save-log.service.ts:117\n                        \n                    \n\n\n            \n                \n                        This method provides access to the full HttpResponse, allowing access to response headers.\nTo access only the response body, use Update() instead.\nThis method sends application/json and handles request body of type application/json.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            Update$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        AddPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000004/qualitysavelog/add'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-save-log.service.ts:34\n                        \n                    \n\n            \n                \n                    Path part for operation Add()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        DeletePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000004/qualitysavelog/remove'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-save-log.service.ts:59\n                        \n                    \n\n            \n                \n                    Path part for operation Delete()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Fetch_1Path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000004/qualitysavelog/fetch'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-save-log.service.ts:84\n                        \n                    \n\n            \n                \n                    Path part for operation fetch_1()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        UpdatePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/9000004/qualitysavelog/update'\n                    \n                \n                    \n                        \n                                Defined in src/app/api/services/quality-save-log.service.ts:109\n                        \n                    \n\n            \n                \n                    Path part for operation Update()\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpContext } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\n\nimport { Add } from '../fn/quality-save-log/9000004-add';\nimport { Add$Params } from '../fn/quality-save-log/9000004-add';\nimport { Delete } from '../fn/quality-save-log/9000004-delete';\nimport { Delete$Params } from '../fn/quality-save-log/9000004-delete';\nimport { Update } from '../fn/quality-save-log/9000004-update';\nimport { Update$Params } from '../fn/quality-save-log/9000004-update';\nimport { fetch_1 } from '../fn/quality-save-log/fetch-1';\nimport { Fetch_1$Params } from '../fn/quality-save-log/fetch-1';\nimport { FetchResponseQualitysavelogModel } from '../models/fetch-response-qualitysavelog-model';\nimport { QualitysavelogModel } from '../models/qualitysavelog-model';\n\n\n/**\n * Servizi che permettono il salvataggio dei log\n */\n@Injectable({ providedIn: 'root' })\nexport class QualitySaveLogService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /** Path part for operation `Add()` */\n  static readonly AddPath = '/9000004/qualitysavelog/add';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `Add()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Add$Response(params: Add$Params, context?: HttpContext): Observable> {\n    return Add(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `Add$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Add(params: Add$Params, context?: HttpContext): Observable {\n    return this.Add$Response(params, context).pipe(\n      map((r: StrictHttpResponse): QualitysavelogModel => r.body)\n    );\n  }\n\n  /** Path part for operation `Delete()` */\n  static readonly DeletePath = '/9000004/qualitysavelog/remove';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `Delete()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Delete$Response(params: Delete$Params, context?: HttpContext): Observable> {\n    return Delete(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `Delete$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Delete(params: Delete$Params, context?: HttpContext): Observable {\n    return this.Delete$Response(params, context).pipe(\n      map((r: StrictHttpResponse): QualitysavelogModel => r.body)\n    );\n  }\n\n  /** Path part for operation `fetch_1()` */\n  static readonly Fetch_1Path = '/9000004/qualitysavelog/fetch';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `fetch_1()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_1$Response(params: Fetch_1$Params, context?: HttpContext): Observable> {\n    return fetch_1(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `fetch_1$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  fetch_1(params: Fetch_1$Params, context?: HttpContext): Observable {\n    return this.fetch_1$Response(params, context).pipe(\n      map((r: StrictHttpResponse): FetchResponseQualitysavelogModel => r.body)\n    );\n  }\n\n  /** Path part for operation `Update()` */\n  static readonly UpdatePath = '/9000004/qualitysavelog/update';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `Update()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Update$Response(params: Update$Params, context?: HttpContext): Observable> {\n    return Update(this.http, this.rootUrl, params, context);\n  }\n\n  /**\n   * This method provides access only to the response body.\n   * To access the full response (for headers, for example), `Update$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  Update(params: Update$Params, context?: HttpContext): Observable {\n    return this.Update$Response(params, context).pipe(\n      map((r: StrictHttpResponse): QualitysavelogModel => r.body)\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/QualityattributeModel.html": { "url": "interfaces/QualityattributeModel.html", "title": "interface - QualityattributeModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QualityattributeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche di un attributo di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ad_reference_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributedescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributename\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributeseqno\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributevalue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            attributevaluetype\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_project_attribute_group_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupdescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            m_product_category_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            m_product_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            optionvalue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ad_reference_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ad_reference_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributedescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributedescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributeseqno\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributeseqno:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributevalue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributevalue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attributevaluetype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributevaluetype:     \"Y\" | \"N\" | \"S\" | \"L\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\" | \"S\" | \"L\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_project_attribute_group_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_project_attribute_group_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupdescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupdescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_category_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionvalue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionvalue:         optionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         optionType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JsonList {\n  key: string[],\n  value: string[]\n}\n\n/**\n * Interfaccia che definisce le caratteristiche delle opzioni di un attributo di qualità\n */\nexport interface optionType {\n  type: string,\n  value: JsonList\n}\n\n/**\n * Interfaccia che definisce le caratteristiche di un attributo di qualità\n */\nexport interface QualityattributeModel {\n  ad_reference_id?: number;\n  attributedescription?: string;\n  attributename?: string;\n  attributeseqno?: number;\n  attributevalue?: string;\n  attributevaluetype?: 'Y' | 'N' | 'S' | 'L';\n  c_project_attribute_group_id?: number;\n  groupdescription?: string;\n  groupname?: string;\n  m_product_category_id?: number;\n  m_product_id?: number;\n  optionvalue?: optionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/QualityphaseModel.html": { "url": "interfaces/QualityphaseModel.html", "title": "interface - QualityphaseModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QualityphaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualityphase-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche di una fase di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ad_client_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ad_org_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_bpartner_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_phase_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_projectline_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_projectphase_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            end_plan\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isglobal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            linename\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            m_product_category_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            m_product_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phasename\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phasetitlehtml\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectplan_timeline_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            start_plan\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ad_client_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ad_client_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ad_org_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ad_org_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_bpartner_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_bpartner_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_phase_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_phase_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectline_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectline_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectphase_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectphase_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end_plan:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isglobal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isglobal:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_category_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m_product_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        m_product_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phasename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phasename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phasetitlehtml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phasetitlehtml:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectplan_timeline_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectplan_timeline_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start_plan:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QualityphaseModel {\n  ad_client_id?: number;\n  ad_org_id?: number;\n  c_bpartner_id?: number;\n  c_phase_id?: number;\n  c_projectline_id?: number;\n  c_projectphase_id?: number;\n  color?: string;\n  customer?: string;\n  end_plan?: Date;\n  isglobal?: 'Y' | 'N';\n  linename?: string;\n  m_product_category_id?: number;\n  m_product_id?: number;\n  phasename?: string;\n  phasetitlehtml?: string;\n  projectplan_timeline_id?: number;\n  start_plan?: Date;\n  status?: 'Y' | 'N';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/QualitysavelogModel.html": { "url": "interfaces/QualitysavelogModel.html", "title": "interface - QualitysavelogModel", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QualitysavelogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualitysavelog-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche di un log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            c_projectphase_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            c_projectphase_quality_log_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            qualitystatus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            qualityvalue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectphase_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectphase_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        c_projectphase_quality_log_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        c_projectphase_quality_log_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isactive:     \"Y\" | \"N\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Y\" | \"N\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qualitystatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualitystatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qualityvalue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualityvalue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QualitysavelogModel {\n  c_projectphase_id?: number;\n  c_projectphase_quality_log_id?: number;\n  isactive?: 'Y' | 'N';\n  qualitystatus?: string;\n  qualityvalue?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "classes/QueryParameter.html": { "url": "classes/QueryParameter.html", "title": "class - QueryParameter", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                A parameter in the query\n\n            \n\n            \n                Extends\n            \n            \n                            Parameter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                append\n                            \n                            \n                                serializeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: any, options: ParameterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ParameterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ParameterOptions\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         Parameter\n\n                            \n                        \n                    \n                        \n                                Defined in         Parameter:40\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        append\n                        \n                    \n                \n            \n            \n                \nappend(params: HttpParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeValue\n                        \n                    \n                \n            \n            \n                \nserializeValue(value: any, separator: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         Parameter\n\n                        \n                    \n                    \n                        \n                                Defined in         Parameter:50\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                separator\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ','\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "classes/RequestBuilder.html": { "url": "classes/RequestBuilder.html", "title": "class - RequestBuilder", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/request-builder.ts\n        \n\n\n            \n                Description\n            \n            \n                Helper to build http requests from parameters\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _bodyContent\n                            \n                            \n                                    Optional\n                                _bodyContentType\n                            \n                            \n                                    Private\n                                _header\n                            \n                            \n                                    Private\n                                _path\n                            \n                            \n                                    Private\n                                _query\n                            \n                            \n                                    Public\n                                method\n                            \n                            \n                                    Public\n                                operationPath\n                            \n                            \n                                    Public\n                                rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                build\n                            \n                            \n                                    Private\n                                formDataValue\n                            \n                            \n                                header\n                            \n                            \n                                path\n                            \n                            \n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rootUrl: string, operationPath: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/api/request-builder.ts:216\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rootUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        operationPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _bodyContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:215\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _bodyContentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:216\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _header\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:214\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:212\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _query\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:213\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:221\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        operationPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:220\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/api/request-builder.ts:219\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n            \n                \nbody(value: any, contentType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:248\n                        \n                    \n\n\n            \n                \n                        Sets the body content, along with the content type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                contentType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'application/json'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:314\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Builds the request with the current set parameters\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpRequest\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formDataValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    formDataValue(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:298\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        header\n                        \n                    \n                \n            \n            \n                \nheader(name: string, value: any, options?: ParameterOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:241\n                        \n                    \n\n\n            \n                \n                        Sets a header parameter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ParameterOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath(name: string, value: any, options?: ParameterOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:227\n                        \n                    \n\n\n            \n                \n                        Sets a path parameter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ParameterOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n            \n                \nquery(name: string, value: any, options?: ParameterOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/api/request-builder.ts:234\n                        \n                    \n\n\n            \n                \n                        Sets a query parameter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ParameterOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders, HttpContext } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace(/%3D/g, '=');\n    result = result.replace(/%3B/g, ';');\n    result = result.replace(/%2C/g, ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map();\n  private _query = new Map();\n  private _header = new Map();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n\n    /** Allow passing HttpContext for HttpClient */\n    context?: HttpContext;\n  }): HttpRequest {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress,\n      context: options.context\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "pipes/SafePipe.html": { "url": "pipes/SafePipe.html", "title": "pipe - SafePipe", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/safe-html.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Classe che gestisce la sanificazione di input HTML\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(style: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/safe-html.pipe.ts:21\n                        \n                    \n\n\n            \n                \n                        Metodo per sanificare una stringa contenente HTML\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                style\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Stringa da sanificare\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                La stringa sanificata (un oggetto nullo in caso di errori)\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n/**\n * Classe che gestisce la sanificazione di input HTML\n */\n@Pipe({ name: 'safeHtml' })\nexport class SafePipe implements PipeTransform {\n\n  /**\n   * Costruttore della classe che gestisce la sanificazione di input HTML\n   * @param sanitizer Oggetto che sanifica gli input\n   */\n  constructor(private sanitizer: DomSanitizer) { }\n\n  /**\n   * Metodo per sanificare una stringa contenente HTML\n   * @param style Stringa da sanificare\n   * @returns La stringa sanificata (un oggetto nullo in caso di errori)\n   */\n  public transform(style: string): string | null {\n    return this.sanitizer.sanitize(SecurityContext.HTML, style);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/SidenavComponent.html": { "url": "components/SidenavComponent.html", "title": "component - SidenavComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidenav/sidenav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce i due tipi di logout:\n\nLogout generale, nel quale si elimina anche il token di autenticazione\nLogout utente, nel quale si elimina sono l'identificativo dell'utente\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n\n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openLogoutDialog\n                            \n                            \n                                    Public\n                                openLogoutUserDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logoutService: LogoutService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidenav/sidenav.component.ts:16\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce la barra laterale, provvista di tre icone (di cui due per i diversi tipi di logout)\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione logout\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog di logout\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openLogoutDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    openLogoutDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/sidenav/sidenav.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Metodo per gestire le interazioni con il dialog di logout generale\nOccorre reinserire nome utente e password per ri-ottenere il token\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openLogoutUserDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    openLogoutUserDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/sidenav/sidenav.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Metodo per gestire le interazioni con il dialog di logout parziale\nOccorre reinserire il pin per ri-accedere ai servizi in qualità di operatore\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LogoutDialogComponent } from '../logout-dialog/logout-dialog.component';\nimport { LogoutService } from 'src/app/services/logout/logout.service';\n\n/**\n * Classe che gestisce i due tipi di logout:\n * - Logout generale, nel quale si elimina anche il token di autenticazione\n * - Logout utente, nel quale si elimina sono l'identificativo dell'utente\n */\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n\n  /**\n   * Costruttore della classe che gestisce la barra laterale, provvista di tre icone (di cui due per i diversi tipi di logout)\n   * @param logoutService Servizio di gestione logout\n   * @param dialog Dialog di logout\n   */\n  constructor(private logoutService: LogoutService, private dialog: MatDialog) { }\n\n  /**\n   * Metodo per gestire le interazioni con il dialog di logout generale \n   * Occorre reinserire nome utente e password per ri-ottenere il token\n   */\n  public openLogoutDialog(): void {\n    const logoutDialog = this.dialog.open(LogoutDialogComponent, {\n      data: {\n        title: 'Logout generale',\n        description: 'Occorre reinserire username e pin'\n      }\n    });\n\n    logoutDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"exit-option\":\n          this.logoutService.logout();\n          break;\n        case \"stay-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  /**\n   * Metodo per gestire le interazioni con il dialog di logout parziale \n   * Occorre reinserire il pin per ri-accedere ai servizi in qualità di operatore\n   */\n  public openLogoutUserDialog(): void {\n    const logoutDialog = this.dialog.open(LogoutDialogComponent, {\n      data: {\n        title: 'Logout parziale',\n        description: 'Occorre reinserire il pin'\n      }\n    });\n\n    logoutDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"exit-option\":\n          this.logoutService.logoutUserId();\n          break;\n        case \"stay-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                #nav {\n    height: 100%;\n    width: 60px;\n    display: flex;\n    flex-direction: column;\n}\n\n#logo {\n    margin-bottom: 3em;\n    margin-top: 1em;\n    width: 70%;\n    height: 50px;\n    background-repeat: no-repeat;\n    background-size: contain;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.icon {\n    width: 100%;\n    border: none;\n    height: 48px;\n    margin-bottom: 0.5em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "injectables/ThemeService.html": { "url": "injectables/ThemeService.html", "title": "injectable - ThemeService", "body": "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/theme/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servizio che consente la gestione del tema grafico dell'applicazione\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/theme/theme.service.ts:9\n                            \n                        \n\n                \n                    \n                            Costruttore di default\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggleTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleTheme(dark: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Metodo per impostare il tema grafico dell'applicazione\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dark\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Variabile booleana che indica se il tema è chiaro (false) o scuro (true)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Servizio che consente la gestione del tema grafico dell'applicazione\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  /**\n   * Costruttore di default\n   */\n  constructor() { }\n\n  /**\n   * Metodo per impostare il tema grafico dell'applicazione \n   * @param dark Variabile booleana che indica se il tema è chiaro (false) o scuro (true)\n   */\n  public toggleTheme(dark: boolean) {\n\n    if (dark) {\n      document.body.classList.remove('theme-light');\n      document.body.classList.add('theme-dark');\n    } else {\n      document.body.classList.remove('theme-dark');\n      document.body.classList.add('theme-light');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "components/ToolbarComponent.html": { "url": "components/ToolbarComponent.html", "title": "component - ToolbarComponent", "body": "\n                   \n\n\n\n\n\n  Components\n  \n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbar/toolbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Classe che gestisce l'intestazione della visualizzazione grafica\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n\n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeLanguage\n                            \n                            \n                                    Public\n                                isDark\n                            \n                            \n                                    Public\n                                languages\n                            \n                            \n                                    Public\n                                mobileQuery\n                            \n                            \n                                    Private\n                                queryListener\n                            \n                            \n                                    Public\n                                strictLang\n                            \n                            \n                                    Public\n                                today\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeActiveLanguage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openLogoutDialog\n                            \n                            \n                                    Public\n                                openLogoutUserDialog\n                            \n                            \n                                    Public\n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authInfoService: AuthInformationsService, themeService: ThemeService, logoutService: LogoutService, dialog: MatDialog, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbar/toolbar.component.ts:59\n                            \n                        \n\n                \n                    \n                            Costruttore della classe che gestisce l'intestazione della visualizzazione grafica\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authInfoService\n                                                  \n                                                        \n                                                                        AuthInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio per gestire le informazioni relative all'autenticazione\n\n                                                        \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del tema grafico di interfaccia\n\n                                                        \n                                                \n                                                \n                                                        logoutService\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione logout\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog di logout\n\n                                                        \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servizio di gestione del linguaggio attivo nell'applicazione\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeActiveLanguage(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toolbar/toolbar.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Metodo per cambiare linguaggio di traduzione dell'applicazione\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuovo linguaggio in cui l'applicazione deve essere tradotta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toolbar/toolbar.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Distruttore per rimuovere gli event listener\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toolbar/toolbar.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Metodo di inizializzazione per quanto riguarda nome utente e tema all'avvio\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openLogoutDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    openLogoutDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toolbar/toolbar.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Metodo per gestire le interazioni con il dialog di logout generale\nOccorre reinserire nome utente e password per ri-ottenere il token\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openLogoutUserDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    openLogoutUserDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toolbar/toolbar.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Metodo per gestire le interazioni con il dialog di logout parziale\nOccorre reinserire il pin per ri-accedere ai servizi in qualità di operatore\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggleTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleTheme(undefined: MatSlideToggleChange)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toolbar/toolbar.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Metodo per cambiare tema dell'applicazione\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        MatSlideToggleChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:49\n                        \n                    \n\n            \n                \n                    Linguaggio attualmente selezionato dalla lista di linguaggi disponibili\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDark\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:23\n                        \n                    \n\n            \n                \n                    Attributo per gestire il toggle dello slider all'avvio\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Italiano\", \"Inglese\", \"Spagnolo\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:39\n                        \n                    \n\n            \n                \n                    Lista di linguaggi disponibili\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mobileQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:59\n                        \n                    \n\n            \n                \n                    Lista di query per capire quando cambiare [mode]\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        queryListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:54\n                        \n                    \n\n            \n                \n                    Query listener: consente di capire quando il menù delle fasi deve cambiare [mode]\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        strictLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['it', 'en', 'es']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:44\n                        \n                    \n\n            \n                \n                    Lista di linguaggi - stringhe da usare con il servizio di traduzione\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:29\n                        \n                    \n\n            \n                \n                    Attributo contenente la data odierna (giorno in cui il component viene generato)\nServe per estrarre nel template HTML il mese, l'anno e la settimana\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toolbar/toolbar.component.ts:34\n                        \n                    \n\n            \n                \n                    Attributo contenente il nome dell'utente (operatore) autenticato\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { AuthInformationsService } from 'src/app/services/auth-informations/auth-informations.service';\nimport { LogoutService } from 'src/app/services/logout/logout.service';\nimport { ThemeService } from 'src/app/services/theme/theme.service';\nimport { LogoutDialogComponent } from '../logout-dialog/logout-dialog.component';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { LanguageService } from 'src/app/services/language/language.service';\n\n/**\n * Classe che gestisce l'intestazione della visualizzazione grafica\n */\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n  /**\n   * Attributo per gestire il toggle dello slider all'avvio\n   */\n  public isDark: boolean = false;\n\n  /**\n   * Attributo contenente la data odierna (giorno in cui il component viene generato)\n   * Serve per estrarre nel template HTML il mese, l'anno e la settimana\n   */\n  public today: Date = new Date();\n\n  /**\n   * Attributo contenente il nome dell'utente (operatore) autenticato\n   */\n  public user: string = \"\";\n\n  /**\n   * Lista di linguaggi disponibili\n   */\n  public languages: string[] = [\"Italiano\", \"Inglese\", \"Spagnolo\"];\n\n  /**\n   * Lista di linguaggi - stringhe da usare con il servizio di traduzione\n   */\n  public strictLang: string[] = ['it', 'en', 'es'];\n\n  /**\n   * Linguaggio attualmente selezionato dalla lista di linguaggi disponibili\n   */\n  public activeLanguage: string = \"\";\n\n  /**\n * Query listener: consente di capire quando il menù delle fasi deve cambiare [mode]\n */\n  private queryListener: () => void;\n\n  /**\n   * Lista di query per capire quando cambiare [mode]\n   */\n  public mobileQuery: MediaQueryList;\n\n  /**\n   * Costruttore della classe che gestisce l'intestazione della visualizzazione grafica \n   * @param authInfoService Servizio per gestire le informazioni relative all'autenticazione\n   * @param themeService Servizio di gestione del tema grafico di interfaccia\n   * @param logoutService Servizio di gestione logout\n   * @param dialog Dialog di logout\n   * @param languageService Servizio di gestione del linguaggio attivo nell'applicazione\n   */\n  constructor(private authInfoService: AuthInformationsService, private themeService: ThemeService, private logoutService: LogoutService, private dialog: MatDialog, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, private languageService: LanguageService) {\n\n    this.mobileQuery = media.matchMedia('(max-width: 900px)');\n    this.queryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addEventListener(\"change\", this.queryListener);\n\n    this.activeLanguage = localStorage.getItem('lang') || 'it';\n    this.languageService.changeLanguage(this.activeLanguage);\n  }\n\n  /**\n   * Metodo di inizializzazione per quanto riguarda nome utente e tema all'avvio\n   */\n  ngOnInit(): void {\n    this.user = this.authInfoService.UserName;\n    this.isDark = this.authInfoService.UserTheme == \"DM\" as \"DM\" | \"WM\";\n    this.themeService.toggleTheme(this.isDark);\n    this.languageService.activeLanguage.subscribe(\n      language => {\n        this.activeLanguage = language;\n      }\n    )\n  }\n\n  /**\n   * Distruttore per rimuovere gli event listener\n   */\n  ngOnDestroy(): void {\n    this.mobileQuery.removeEventListener(\"change\", this.queryListener);\n  }\n\n  /**\n   * Metodo per cambiare linguaggio di traduzione dell'applicazione\n   * @param language Nuovo linguaggio in cui l'applicazione deve essere tradotta\n   */\n  public changeActiveLanguage(language: string): void {\n    this.languageService.changeLanguage(language);\n  }\n\n  /**\n   * Metodo per cambiare tema dell'applicazione\n   * @param checked Indica se il nuovo tema è scuro o chiaro\n   */\n  public toggleTheme({ checked }: MatSlideToggleChange): void {\n    this.isDark = checked;\n    this.themeService.toggleTheme(this.isDark);\n  }\n\n  /**\n   * Metodo per gestire le interazioni con il dialog di logout generale \n   * Occorre reinserire nome utente e password per ri-ottenere il token\n   */\n  public openLogoutDialog(): void {\n    const logoutDialog = this.dialog.open(LogoutDialogComponent, {\n      data: {\n        title: 'Logout generale',\n        description: 'Occorre reinserire username e pin'\n      }\n    });\n\n    logoutDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"exit-option\":\n          this.logoutService.logout();\n          break;\n        case \"stay-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  /**\n   * Metodo per gestire le interazioni con il dialog di logout parziale \n   * Occorre reinserire il pin per ri-accedere ai servizi in qualità di operatore\n   */\n  public openLogoutUserDialog(): void {\n    const logoutDialog = this.dialog.open(LogoutDialogComponent, {\n      data: {\n        title: 'Logout parziale',\n        description: 'Occorre reinserire il pin'\n      }\n    });\n\n    logoutDialog.afterClosed().subscribe((result) => {\n      switch (result.event) {\n        case \"exit-option\":\n          this.logoutService.logoutUserId();\n          break;\n        case \"stay-option\":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  {{(today | date:'MMMM')! | titlecase | translate}} {{today | date:'yyyy'}} -\n    {{\"Settimana\" | translate}} {{today | date: 'ww'}}\n  \n  \n    \n    \n    \n  \n\n  \n    \n  \n  \n    \n      {{language | translate}}\n    \n  \n\n  {{user}}\n  \n\n  \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                #toolbar {\n    width: 100%;\n    height: 70px;\n}\n\n.spacer {\n    flex: 1 1 auto;\n}\n\nimg {\n    width: 40px;\n    border-radius: 40px;\n}\n\n#toolbar>* {\n    margin-left: 1em;\n}\n\n#dark-theme-slider {\n    display: flex;\n    align-items: center;\n    transition-duration: 0ms;\n}\n\n#dark-theme-slider>* {\n    margin-left: 0.2em;\n}\n\n.checkmark:before {\n    content: 'L';\n    font-family: arial;\n    transform: scaleX(-1) rotate(-35deg);\n    display: inline-block;\n    vertical-align: top;\n    line-height: 1em;\n    width: 1em;\n    height: 1em;\n    margin-left: 0.5em;\n    text-align: center;\n    position: absolute;\n    left: 0;\n}\n\n.entry {\n    margin-left: 1em;\n}\n\n#logo {\n    flex: 0 0 60px;\n    height: 30px;\n    background-repeat: no-repeat;\n    background-size: contain;\n    margin-right: 1em;\n}\n\n.logout-mobile,\n#translation {\n    width: 48px;\n    height: 48px;\n    border-radius: 100%;\n    border: none;\n}\n\n.logout-mobile {\n    font-weight: 600;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{(today | date:\\'MMMM\\')! | titlecase | translate}} {{today | date:\\'yyyy\\'}} -    {{\"Settimana\" | translate}} {{today | date: \\'ww\\'}}                                      {{language | translate}}        {{user}}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDataDialogComponent', 'selector': 'app-confirm-data-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginPinComponent', 'selector': 'app-login-pin'},{'name': 'LoginUsernameComponent', 'selector': 'app-login-username'},{'name': 'LogModifierComponent', 'selector': 'app-log-modifier'},{'name': 'LogoutDialogComponent', 'selector': 'app-logout-dialog'},{'name': 'LogViewerComponent', 'selector': 'app-log-viewer'},{'name': 'PhasesComponent', 'selector': 'app-phases'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/Update$Params.html": { "url": "interfaces/Update$Params.html", "title": "interface - Update$Params", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Update$Params\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/fn/quality-save-log/9000004-update.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce i parametri per aggiornare un log di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AdesuiteToken\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdesuiteToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AdesuiteToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         QualitysavelogModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QualitysavelogModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StrictHttpResponse } from '../../strict-http-response';\nimport { RequestBuilder } from '../../request-builder';\n\nimport { QualitysavelogModel } from '../../models/qualitysavelog-model';\n\n/**\n * Interfaccia che definisce i parametri per aggiornare un log di qualità\n */\nexport interface Update$Params {\n  AdesuiteToken: string;\n  body: QualitysavelogModel\n}\n\n/**\n * Funzione di utilità per aggiornare un log di qualità\n * @param http Servizio di utilità per eseguire chiamate HTTP\n * @param rootUrl URL di base della richiesta\n * @param params Parametri per effettuare la richiesta\n * @param context Contesto HTTP della richiesta\n * @returns Oggetto Observable contenete il body della risposta - il log aggiornato\n */\nexport function Update(http: HttpClient, rootUrl: string, params: Update$Params, context?: HttpContext): Observable> {\n  const rb = new RequestBuilder(rootUrl, Update.PATH, 'post');\n  if (params) {\n    rb.header('AdesuiteToken', params.AdesuiteToken, {});\n    rb.body(params.body, 'application/json');\n  }\n\n  return http.request(\n    rb.build({ responseType: 'json', accept: 'application/json', context })\n  ).pipe(\n    filter((r: any): r is HttpResponse => r instanceof HttpResponse),\n    map((r: HttpResponse) => {\n      return r as StrictHttpResponse;\n    })\n  );\n}\n\n/**\n * Path relativo in cui trovare l'API relativa all'aggiornamento di un log di qualità\n */\nUpdate.PATH = '/9000004/qualitysavelog/update';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "coverage.html": { "url": "coverage.html", "title": "coverage - coverage", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api/api-configuration.ts\n            \n            injectable\n            ApiConfiguration\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/api/api-configuration.ts\n            \n            interface\n            ApiConfigurationParams\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/api/base-service.ts\n            \n            injectable\n            BaseService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/authentication/login.ts\n            \n            interface\n            Login$Params\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/api/fn/authentication/login.ts\n            \n            function\n            login\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/authentication/logout.ts\n            \n            interface\n            Logout$Params\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/api/fn/authentication/logout.ts\n            \n            function\n            logout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/operators/fetch.ts\n            \n            interface\n            Fetch$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/operators/fetch.ts\n            \n            function\n            fetch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-attribute/fetch-3.ts\n            \n            interface\n            Fetch_3$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-attribute/fetch-3.ts\n            \n            function\n            fetch_3\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-phase/fetch-2.ts\n            \n            interface\n            Fetch_2$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-phase/fetch-2.ts\n            \n            function\n            fetch_2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-add.ts\n            \n            interface\n            Add$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-add.ts\n            \n            function\n            Add\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-delete.ts\n            \n            interface\n            Delete$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-delete.ts\n            \n            function\n            Delete\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-update.ts\n            \n            interface\n            Update$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/9000004-update.ts\n            \n            function\n            Update\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/fetch-1.ts\n            \n            interface\n            Fetch_1$Params\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/fn/quality-save-log/fetch-1.ts\n            \n            function\n            fetch_1\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/api/models/error-model.ts\n            \n            interface\n            ErrorModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-request-operators-model.ts\n            \n            interface\n            FetchRequestOperatorsModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-request-qualityattribute-model.ts\n            \n            interface\n            FetchRequestQualityattributeModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-request-qualityphase-model.ts\n            \n            interface\n            FetchRequestQualityphaseModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-request-qualitysavelog-model.ts\n            \n            interface\n            FetchRequestQualitysavelogModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-response-operators-model.ts\n            \n            interface\n            FetchResponseOperatorsModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-response-qualityattribute-model.ts\n            \n            interface\n            FetchResponseQualityattributeModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-response-qualityphase-model.ts\n            \n            interface\n            FetchResponseQualityphaseModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/fetch-response-qualitysavelog-model.ts\n            \n            interface\n            FetchResponseQualitysavelogModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/api/models/filter-operators-model.ts\n            \n            interface\n            FilterOperatorsModel\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/api/models/filter-qualityattribute-model.ts\n            \n            interface\n            FilterQualityattributeModel\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/api/models/filter-qualityphase-model.ts\n            \n            interface\n            FilterQualityphaseModel\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/api/models/filter-qualitysavelog-model.ts\n            \n            interface\n            FilterQualitysavelogModel\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/api/models/operators-model.ts\n            \n            interface\n            OperatorsModel\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/api/models/order-operators-model.ts\n            \n            interface\n            OrderOperatorsModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/order-qualityattribute-model.ts\n            \n            interface\n            OrderQualityattributeModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/order-qualityphase-model.ts\n            \n            interface\n            OrderQualityphaseModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/order-qualitysavelog-model.ts\n            \n            interface\n            OrderQualitysavelogModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/qualityattribute-model.ts\n            \n            interface\n            JsonList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/qualityattribute-model.ts\n            \n            interface\n            optionType\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/models/qualityattribute-model.ts\n            \n            interface\n            QualityattributeModel\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/api/models/qualityphase-model.ts\n            \n            interface\n            QualityphaseModel\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/app/api/models/qualitysavelog-model.ts\n            \n            interface\n            QualitysavelogModel\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            HeaderParameter\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            Parameter\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            ParameterCodec\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            PathParameter\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            QueryParameter\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            class\n            RequestBuilder\n            \n                37 %\n                (6/16)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            interface\n            ParameterOptions\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/api/request-builder.ts\n            \n            variable\n            ParameterCodecInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/api/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/api/services/operators.service.ts\n            \n            injectable\n            OperatorsService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/api/services/quality-attribute.service.ts\n            \n            injectable\n            QualityAttributeService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/api/services/quality-phase.service.ts\n            \n            injectable\n            QualityPhaseService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/api/services/quality-save-log.service.ts\n            \n            injectable\n            QualitySaveLogService\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/confirm-data-dialog/confirm-data-dialog.component.ts\n            \n            component\n            ConfirmDataDialogComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/log-modifier/log-modifier.component.ts\n            \n            component\n            LogModifierComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/components/log-viewer/log-viewer.component.ts\n            \n            component\n            LogViewerComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/login-pin/login-pin.component.ts\n            \n            component\n            LoginPinComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/login-username/login-username.component.ts\n            \n            component\n            LoginUsernameComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/logout-dialog/logout-dialog.component.ts\n            \n            component\n            LogoutDialogComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/phases/phases.component.ts\n            \n            component\n            PhasesComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            interface\n            Message\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/pipes/options.pipe.ts\n            \n            pipe\n            OptionsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/safe-html.pipe.ts\n            \n            pipe\n            SafePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/active-attributes/active-attributes.service.ts\n            \n            injectable\n            ActiveAttributesService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/active-phase/active-phase.service.ts\n            \n            injectable\n            ActivePhaseService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/auth-informations/auth-informations.service.ts\n            \n            injectable\n            AuthInformationsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/iframe-initializer/iframe-initializer.service.ts\n            \n            injectable\n            IframeInitializerService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/logout/logout.service.ts\n            \n            injectable\n            LogoutService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "dependencies.html": { "url": "dependencies.html", "title": "package-dependencies - dependencies", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/cdk : ^16.2.6\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/material : ^16.2.6\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            @angular/service-worker : ^16.2.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "miscellaneous/functions.html": { "url": "miscellaneous/functions.html", "title": "miscellaneous-functions - functions", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Add   (src/.../9000004-add.ts)\n                        \n                        \n                            Delete   (src/.../9000004-delete.ts)\n                        \n                        \n                            fetch   (src/.../fetch.ts)\n                        \n                        \n                            fetch_1   (src/.../fetch-1.ts)\n                        \n                        \n                            fetch_2   (src/.../fetch-2.ts)\n                        \n                        \n                            fetch_3   (src/.../fetch-3.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            login   (src/.../login.ts)\n                        \n                        \n                            logout   (src/.../logout.ts)\n                        \n                        \n                            Update   (src/.../9000004-update.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/api/fn/quality-save-log/9000004-add.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Add\n                        \n                    \n                \n            \n            \n                \nAdd(http: HttpClient, rootUrl: string, params: Add$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                        Funzione di utilità per aggiungere un log di qualità per la fase attiva\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Servizio di utilità per eseguire chiamate HTTP\n\n                                            \n                                        \n                                        \n                                                rootUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL di base della richiesta\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Add$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parametri per effettuare la richiesta\n\n                                            \n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Contesto HTTP della richiesta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto Observable contenete il body della risposta - il log inserito\n\n                            \n                \n            \n        \n    \n    src/app/api/fn/quality-save-log/9000004-delete.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Delete\n                        \n                    \n                \n            \n            \n                \nDelete(http: HttpClient, rootUrl: string, params: Delete$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                        Funzione di utilità per eliminare un log di qualità\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Servizio di utilità per eseguire chiamate HTTP\n\n                                            \n                                        \n                                        \n                                                rootUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL di base della richiesta\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Delete$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parametri per effettuare la richiesta\n\n                                            \n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Contesto HTTP della richiesta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto Observable contenete il body della risposta - il log eliminato\n\n                            \n                \n            \n        \n    \n    src/app/api/fn/operators/fetch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fetch\n                        \n                    \n                \n            \n            \n                \nfetch(http: HttpClient, rootUrl: string, params: Fetch$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                        Funzione di utilità per il login - pin\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Servizio di utilità per eseguire chiamate HTTP\n\n                                            \n                                        \n                                        \n                                                rootUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL di base della richiesta\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Fetch$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parametri per effettuare la richiesta\n\n                                            \n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Contesto HTTP della richiesta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto Observable contenete il body della risposta\n\n                            \n                \n            \n        \n    \n    src/app/api/fn/quality-save-log/fetch-1.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fetch_1\n                        \n                    \n                \n            \n            \n                \nfetch_1(http: HttpClient, rootUrl: string, params: Fetch_1$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                        Funzione di utilità per ottenere un log di qualità\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Servizio di utilità per eseguire chiamate HTTP\n\n                                            \n                                        \n                                        \n                                                rootUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL di base della richiesta\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Fetch_1$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parametri per effettuare la richiesta\n\n                                            \n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Contesto HTTP della richiesta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto Observable contenete il body della risposta - i log di qualità\n\n                            \n                \n            \n        \n    \n    src/app/api/fn/quality-phase/fetch-2.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fetch_2\n                        \n                    \n                \n            \n            \n                \nfetch_2(http: HttpClient, rootUrl: string, params: Fetch_2$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                        Funzione di utilità per ottenere una fase di produzione\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Servizio di utilità per eseguire chiamate HTTP\n\n                                            \n                                        \n                                        \n                                                rootUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL di base della richiesta\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Fetch_2$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parametri per effettuare la richiesta\n\n                                            \n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Contesto HTTP della richiesta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto Observable contenete il body della risposta - le fasi di produzione\n\n                            \n                \n            \n        \n    \n    src/app/api/fn/quality-attribute/fetch-3.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fetch_3\n                        \n                    \n                \n            \n            \n                \nfetch_3(http: HttpClient, rootUrl: string, params: Fetch_3$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                        Funzione di utilità per ottenere gli attributi di qualità di una fase\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Servizio di utilità per eseguire chiamate HTTP\n\n                                            \n                                        \n                                        \n                                                rootUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL di base della richiesta\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Fetch_3$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parametri per effettuare la richiesta\n\n                                            \n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Contesto HTTP della richiesta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto Observable contenete il body della risposta - gli attributi di qualità di una fase\n\n                            \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/api/fn/authentication/login.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(http: HttpClient, rootUrl: string, params: Login$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                        Funzione di utilità per il login - username\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Servizio di utilità per eseguire chiamate HTTP\n\n                                            \n                                        \n                                        \n                                                rootUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL di base della richiesta\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Login$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parametri per effettuare la richiesta\n\n                                            \n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Contesto HTTP della richiesta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto Observable contenete il body della risposta\n\n                            \n                \n            \n        \n    \n    src/app/api/fn/authentication/logout.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(http: HttpClient, rootUrl: string, params: Logout$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                        Funzione di utilità per il logout\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Servizio di utilità per eseguire chiamate HTTP\n\n                                            \n                                        \n                                        \n                                                rootUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL di base della richiesta\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Logout$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parametri per effettuare la richiesta\n\n                                            \n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Contesto HTTP della richiesta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto Observable contenete il body della risposta\n\n                            \n                \n            \n        \n    \n    src/app/api/fn/quality-save-log/9000004-update.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Update\n                        \n                    \n                \n            \n            \n                \nUpdate(http: HttpClient, rootUrl: string, params: Update$Params, context?: HttpContext)\n                \n            \n\n\n\n\n            \n                \n                        Funzione di utilità per aggiornare un log di qualità\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Servizio di utilità per eseguire chiamate HTTP\n\n                                            \n                                        \n                                        \n                                                rootUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL di base della richiesta\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            Update$Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parametri per effettuare la richiesta\n\n                                            \n                                        \n                                        \n                                                context\n                                            \n                                                        HttpContext\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Contesto HTTP della richiesta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Oggetto Observable contenete il body della risposta - il log aggiornato\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "index.html": { "url": "index.html", "title": "getting-started - index", "body": "\n                   \n\nADeQA\nThis project was generated with Angular CLI version 16.2.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "modules.html": { "url": "modules.html", "title": "modules - modules", "body": "\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "interfaces/optionType.html": { "url": "interfaces/optionType.html", "title": "interface - optionType", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  optionType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api/models/qualityattribute-model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaccia che definisce le caratteristiche delle opzioni di un attributo di qualità\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         JsonList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JsonList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JsonList {\n  key: string[],\n  value: string[]\n}\n\n/**\n * Interfaccia che definisce le caratteristiche delle opzioni di un attributo di qualità\n */\nexport interface optionType {\n  type: string,\n  value: JsonList\n}\n\n/**\n * Interfaccia che definisce le caratteristiche di un attributo di qualità\n */\nexport interface QualityattributeModel {\n  ad_reference_id?: number;\n  attributedescription?: string;\n  attributename?: string;\n  attributeseqno?: number;\n  attributevalue?: string;\n  attributevaluetype?: 'Y' | 'N' | 'S' | 'L';\n  c_project_attribute_group_id?: number;\n  groupdescription?: string;\n  groupname?: string;\n  m_product_category_id?: number;\n  m_product_id?: number;\n  optionvalue?: optionType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "overview.html": { "url": "overview.html", "title": "overview - overview", "body": "\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiModule\n\n\n\ncluster_ApiModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nApiConfiguration\n\nApiConfiguration\n\n\n\nApiModule\n\nApiModule\n\nApiModule -->\n\nApiConfiguration->ApiModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nApiModule -->\n\nAuthenticationService->ApiModule\n\n\n\n\n\nOperatorsService\n\nOperatorsService\n\nApiModule -->\n\nOperatorsService->ApiModule\n\n\n\n\n\nQualityAttributeService\n\nQualityAttributeService\n\nApiModule -->\n\nQualityAttributeService->ApiModule\n\n\n\n\n\nQualityPhaseService\n\nQualityPhaseService\n\nApiModule -->\n\nQualityPhaseService->ApiModule\n\n\n\n\n\nQualitySaveLogService\n\nQualitySaveLogService\n\nApiModule -->\n\nQualitySaveLogService->ApiModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmDataDialogComponent\n\nConfirmDataDialogComponent\n\nAppModule -->\n\nConfirmDataDialogComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLogModifierComponent\n\nLogModifierComponent\n\nAppModule -->\n\nLogModifierComponent->AppModule\n\n\n\n\n\nLogViewerComponent\n\nLogViewerComponent\n\nAppModule -->\n\nLogViewerComponent->AppModule\n\n\n\n\n\nLoginPinComponent\n\nLoginPinComponent\n\nAppModule -->\n\nLoginPinComponent->AppModule\n\n\n\n\n\nLoginUsernameComponent\n\nLoginUsernameComponent\n\nAppModule -->\n\nLoginUsernameComponent->AppModule\n\n\n\n\n\nLogoutDialogComponent\n\nLogoutDialogComponent\n\nAppModule -->\n\nLogoutDialogComponent->AppModule\n\n\n\n\n\nOptionsPipe\n\nOptionsPipe\n\nAppModule -->\n\nOptionsPipe->AppModule\n\n\n\n\n\nPhasesComponent\n\nPhasesComponent\n\nAppModule -->\n\nPhasesComponent->AppModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nAppModule -->\n\nSafePipe->AppModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nAppModule -->\n\nSidenavComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    35 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "properties.html": { "url": "properties.html", "title": "package-properties - properties", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "routes.html": { "url": "routes.html", "title": "routes - routes", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "miscellaneous/typealiases.html": { "url": "miscellaneous/typealiases.html", "title": "miscellaneous-typealiases - typealiases", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StrictHttpResponse   (src/.../strict-http-response.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/api/strict-http-response.ts\n    \n    \n        \n            \n                \n                    \n                    StrictHttpResponse\n                \n            \n            \n                \n                    Constrains the http response to not have the body defined as T | null, but T only.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" }, "miscellaneous/variables.html": { "url": "miscellaneous/variables.html", "title": "miscellaneous-variables - variables", "body": "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ParameterCodecInstance   (src/.../request-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/api/request-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ParameterCodecInstance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ParameterCodec()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n" } }
}
